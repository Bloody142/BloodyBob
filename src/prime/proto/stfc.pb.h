// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stfc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_stfc_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_stfc_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_stfc_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_stfc_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_stfc_2eproto;
class CommanderSkillSpec;
struct CommanderSkillSpecDefaultTypeInternal;
extern CommanderSkillSpecDefaultTypeInternal _CommanderSkillSpec_default_instance_;
class EntityRef;
struct EntityRefDefaultTypeInternal;
extern EntityRefDefaultTypeInternal _EntityRef_default_instance_;
class OfficerLevelRewardsSpec;
struct OfficerLevelRewardsSpecDefaultTypeInternal;
extern OfficerLevelRewardsSpecDefaultTypeInternal _OfficerLevelRewardsSpec_default_instance_;
class OfficerProgressRewardSpec;
struct OfficerProgressRewardSpecDefaultTypeInternal;
extern OfficerProgressRewardSpecDefaultTypeInternal _OfficerProgressRewardSpec_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum OfficerSkillType : int {
  OFFICERSKILLTYPE_UNKNOWN = 0,
  OFFICERSKILLTYPE_ALWAYSON = 1,
  OFFICERSKILLTYPE_ONDUTY = 2,
  OFFICERSKILLTYPE_SELECTABLE = 3,
  OfficerSkillType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OfficerSkillType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OfficerSkillType_IsValid(int value);
constexpr OfficerSkillType OfficerSkillType_MIN = static_cast<OfficerSkillType>(0);
constexpr OfficerSkillType OfficerSkillType_MAX = static_cast<OfficerSkillType>(3);
constexpr int OfficerSkillType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
OfficerSkillType_descriptor();
template <typename T>
const std::string& OfficerSkillType_Name(T value) {
  static_assert(std::is_same<T, OfficerSkillType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OfficerSkillType_Name().");
  return OfficerSkillType_Name(static_cast<OfficerSkillType>(value));
}
template <>
inline const std::string& OfficerSkillType_Name(OfficerSkillType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OfficerSkillType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool OfficerSkillType_Parse(absl::string_view name, OfficerSkillType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OfficerSkillType>(
      OfficerSkillType_descriptor(), name, value);
}
enum EntityType : int {
  ENTITYTYPE_INVALID = 0,
  ENTITYTYPE_PLAYER = 859804212,
  ENTITYTYPE_ALLIANCE = 1794481137,
  ENTITYTYPE_DEPLOYEDFLEET = 2129559302,
  ENTITYTYPE_NPC = 2100681965,
  ENTITYTYPE_OFFICER = 1211023646,
  ENTITYTYPE_SHIP = 73015892,
  EntityType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EntityType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EntityType_IsValid(int value);
constexpr EntityType EntityType_MIN = static_cast<EntityType>(0);
constexpr EntityType EntityType_MAX = static_cast<EntityType>(2129559302);
constexpr int EntityType_ARRAYSIZE = 2129559302 + 1;
const ::google::protobuf::EnumDescriptor*
EntityType_descriptor();
template <typename T>
const std::string& EntityType_Name(T value) {
  static_assert(std::is_same<T, EntityType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EntityType_Name().");
  return ::google::protobuf::internal::NameOfEnum(EntityType_descriptor(), value);
}
inline bool EntityType_Parse(absl::string_view name, EntityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityType>(
      EntityType_descriptor(), name, value);
}
enum OfficerProgressType : int {
  OFFICERPROGRESSTYPE_UNKNOWN = 0,
  OFFICERPROGRESSTYPE_LEVELUP = 1,
  OFFICERPROGRESSTYPE_RANKUP = 2,
  OfficerProgressType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OfficerProgressType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OfficerProgressType_IsValid(int value);
constexpr OfficerProgressType OfficerProgressType_MIN = static_cast<OfficerProgressType>(0);
constexpr OfficerProgressType OfficerProgressType_MAX = static_cast<OfficerProgressType>(2);
constexpr int OfficerProgressType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
OfficerProgressType_descriptor();
template <typename T>
const std::string& OfficerProgressType_Name(T value) {
  static_assert(std::is_same<T, OfficerProgressType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OfficerProgressType_Name().");
  return OfficerProgressType_Name(static_cast<OfficerProgressType>(value));
}
template <>
inline const std::string& OfficerProgressType_Name(OfficerProgressType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OfficerProgressType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool OfficerProgressType_Parse(absl::string_view name, OfficerProgressType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OfficerProgressType>(
      OfficerProgressType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class CommanderSkillSpec final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CommanderSkillSpec) */ {
 public:
  inline CommanderSkillSpec() : CommanderSkillSpec(nullptr) {}
  ~CommanderSkillSpec() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CommanderSkillSpec(::google::protobuf::internal::ConstantInitialized);

  CommanderSkillSpec(const CommanderSkillSpec& from);
  CommanderSkillSpec(CommanderSkillSpec&& from) noexcept
    : CommanderSkillSpec() {
    *this = ::std::move(from);
  }

  inline CommanderSkillSpec& operator=(const CommanderSkillSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline CommanderSkillSpec& operator=(CommanderSkillSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CommanderSkillSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const CommanderSkillSpec* internal_default_instance() {
    return reinterpret_cast<const CommanderSkillSpec*>(
               &_CommanderSkillSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CommanderSkillSpec& a, CommanderSkillSpec& b) {
    a.Swap(&b);
  }
  inline void Swap(CommanderSkillSpec* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CommanderSkillSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CommanderSkillSpec* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CommanderSkillSpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CommanderSkillSpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CommanderSkillSpec& from) {
    CommanderSkillSpec::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CommanderSkillSpec* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "CommanderSkillSpec";
  }
  protected:
  explicit CommanderSkillSpec(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResearchIdFieldNumber = 1,
    kGroupIdFieldNumber = 2,
    kSortOrderFieldNumber = 3,
    kSkillTypeFieldNumber = 4,
  };
  // int64 researchId = 1;
  void clear_researchid() ;
  ::int64_t researchid() const;
  void set_researchid(::int64_t value);

  private:
  ::int64_t _internal_researchid() const;
  void _internal_set_researchid(::int64_t value);

  public:
  // int32 groupId = 2;
  void clear_groupid() ;
  ::int32_t groupid() const;
  void set_groupid(::int32_t value);

  private:
  ::int32_t _internal_groupid() const;
  void _internal_set_groupid(::int32_t value);

  public:
  // int32 sortOrder = 3;
  void clear_sortorder() ;
  ::int32_t sortorder() const;
  void set_sortorder(::int32_t value);

  private:
  ::int32_t _internal_sortorder() const;
  void _internal_set_sortorder(::int32_t value);

  public:
  // .OfficerSkillType skillType = 4;
  void clear_skilltype() ;
  ::OfficerSkillType skilltype() const;
  void set_skilltype(::OfficerSkillType value);

  private:
  ::OfficerSkillType _internal_skilltype() const;
  void _internal_set_skilltype(::OfficerSkillType value);

  public:
  // @@protoc_insertion_point(class_scope:CommanderSkillSpec)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::int64_t researchid_;
    ::int32_t groupid_;
    ::int32_t sortorder_;
    int skilltype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stfc_2eproto;
};// -------------------------------------------------------------------

class EntityRef final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EntityRef) */ {
 public:
  inline EntityRef() : EntityRef(nullptr) {}
  ~EntityRef() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EntityRef(::google::protobuf::internal::ConstantInitialized);

  EntityRef(const EntityRef& from);
  EntityRef(EntityRef&& from) noexcept
    : EntityRef() {
    *this = ::std::move(from);
  }

  inline EntityRef& operator=(const EntityRef& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityRef& operator=(EntityRef&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityRef& default_instance() {
    return *internal_default_instance();
  }
  static inline const EntityRef* internal_default_instance() {
    return reinterpret_cast<const EntityRef*>(
               &_EntityRef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EntityRef& a, EntityRef& b) {
    a.Swap(&b);
  }
  inline void Swap(EntityRef* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityRef* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityRef* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EntityRef>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityRef& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EntityRef& from) {
    EntityRef::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EntityRef* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "EntityRef";
  }
  protected:
  explicit EntityRef(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdStrFieldNumber = 2,
    kParentEntityFieldNumber = 4,
    kEntityIdFieldNumber = 1,
    kEntityTypeFieldNumber = 3,
  };
  // string entityIdStr = 2;
  void clear_entityidstr() ;
  const std::string& entityidstr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entityidstr(Arg_&& arg, Args_... args);
  std::string* mutable_entityidstr();
  PROTOBUF_NODISCARD std::string* release_entityidstr();
  void set_allocated_entityidstr(std::string* ptr);

  private:
  const std::string& _internal_entityidstr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entityidstr(
      const std::string& value);
  std::string* _internal_mutable_entityidstr();

  public:
  // .EntityRef parentEntity = 4;
  bool has_parententity() const;
  void clear_parententity() ;
  const ::EntityRef& parententity() const;
  PROTOBUF_NODISCARD ::EntityRef* release_parententity();
  ::EntityRef* mutable_parententity();
  void set_allocated_parententity(::EntityRef* value);
  void unsafe_arena_set_allocated_parententity(::EntityRef* value);
  ::EntityRef* unsafe_arena_release_parententity();

  private:
  const ::EntityRef& _internal_parententity() const;
  ::EntityRef* _internal_mutable_parententity();

  public:
  // int64 entityId = 1;
  void clear_entityid() ;
  ::int64_t entityid() const;
  void set_entityid(::int64_t value);

  private:
  ::int64_t _internal_entityid() const;
  void _internal_set_entityid(::int64_t value);

  public:
  // .EntityType entityType = 3;
  void clear_entitytype() ;
  ::EntityType entitytype() const;
  void set_entitytype(::EntityType value);

  private:
  ::EntityType _internal_entitytype() const;
  void _internal_set_entitytype(::EntityType value);

  public:
  // @@protoc_insertion_point(class_scope:EntityRef)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 1, 29, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entityidstr_;
    ::EntityRef* parententity_;
    ::int64_t entityid_;
    int entitytype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stfc_2eproto;
};// -------------------------------------------------------------------

class OfficerLevelRewardsSpec final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OfficerLevelRewardsSpec) */ {
 public:
  inline OfficerLevelRewardsSpec() : OfficerLevelRewardsSpec(nullptr) {}
  ~OfficerLevelRewardsSpec() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OfficerLevelRewardsSpec(::google::protobuf::internal::ConstantInitialized);

  OfficerLevelRewardsSpec(const OfficerLevelRewardsSpec& from);
  OfficerLevelRewardsSpec(OfficerLevelRewardsSpec&& from) noexcept
    : OfficerLevelRewardsSpec() {
    *this = ::std::move(from);
  }

  inline OfficerLevelRewardsSpec& operator=(const OfficerLevelRewardsSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline OfficerLevelRewardsSpec& operator=(OfficerLevelRewardsSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OfficerLevelRewardsSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const OfficerLevelRewardsSpec* internal_default_instance() {
    return reinterpret_cast<const OfficerLevelRewardsSpec*>(
               &_OfficerLevelRewardsSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(OfficerLevelRewardsSpec& a, OfficerLevelRewardsSpec& b) {
    a.Swap(&b);
  }
  inline void Swap(OfficerLevelRewardsSpec* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OfficerLevelRewardsSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OfficerLevelRewardsSpec* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OfficerLevelRewardsSpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OfficerLevelRewardsSpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OfficerLevelRewardsSpec& from) {
    OfficerLevelRewardsSpec::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OfficerLevelRewardsSpec* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "OfficerLevelRewardsSpec";
  }
  protected:
  explicit OfficerLevelRewardsSpec(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchemaIdFieldNumber = 4,
    kIdFieldNumber = 2,
    kAmountFieldNumber = 1,
    kLevelFieldNumber = 3,
  };
  // string schemaId = 4;
  void clear_schemaid() ;
  const std::string& schemaid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_schemaid(Arg_&& arg, Args_... args);
  std::string* mutable_schemaid();
  PROTOBUF_NODISCARD std::string* release_schemaid();
  void set_allocated_schemaid(std::string* ptr);

  private:
  const std::string& _internal_schemaid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schemaid(
      const std::string& value);
  std::string* _internal_mutable_schemaid();

  public:
  // int64 id = 2;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int32 amount = 1;
  void clear_amount() ;
  ::int32_t amount() const;
  void set_amount(::int32_t value);

  private:
  ::int32_t _internal_amount() const;
  void _internal_set_amount(::int32_t value);

  public:
  // int32 level = 3;
  void clear_level() ;
  ::int32_t level() const;
  void set_level(::int32_t value);

  private:
  ::int32_t _internal_level() const;
  void _internal_set_level(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:OfficerLevelRewardsSpec)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 40, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr schemaid_;
    ::int64_t id_;
    ::int32_t amount_;
    ::int32_t level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stfc_2eproto;
};// -------------------------------------------------------------------

class OfficerProgressRewardSpec final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OfficerProgressRewardSpec) */ {
 public:
  inline OfficerProgressRewardSpec() : OfficerProgressRewardSpec(nullptr) {}
  ~OfficerProgressRewardSpec() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OfficerProgressRewardSpec(::google::protobuf::internal::ConstantInitialized);

  OfficerProgressRewardSpec(const OfficerProgressRewardSpec& from);
  OfficerProgressRewardSpec(OfficerProgressRewardSpec&& from) noexcept
    : OfficerProgressRewardSpec() {
    *this = ::std::move(from);
  }

  inline OfficerProgressRewardSpec& operator=(const OfficerProgressRewardSpec& from) {
    CopyFrom(from);
    return *this;
  }
  inline OfficerProgressRewardSpec& operator=(OfficerProgressRewardSpec&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OfficerProgressRewardSpec& default_instance() {
    return *internal_default_instance();
  }
  static inline const OfficerProgressRewardSpec* internal_default_instance() {
    return reinterpret_cast<const OfficerProgressRewardSpec*>(
               &_OfficerProgressRewardSpec_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(OfficerProgressRewardSpec& a, OfficerProgressRewardSpec& b) {
    a.Swap(&b);
  }
  inline void Swap(OfficerProgressRewardSpec* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OfficerProgressRewardSpec* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OfficerProgressRewardSpec* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OfficerProgressRewardSpec>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OfficerProgressRewardSpec& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OfficerProgressRewardSpec& from) {
    OfficerProgressRewardSpec::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OfficerProgressRewardSpec* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "OfficerProgressRewardSpec";
  }
  protected:
  explicit OfficerProgressRewardSpec(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 4,
    kProgressTypeFieldNumber = 1,
    kRankFieldNumber = 2,
    kSchemaIdFieldNumber = 3,
  };
  // repeated int32 amount = 4;
  int amount_size() const;
  private:
  int _internal_amount_size() const;

  public:
  void clear_amount() ;
  ::int32_t amount(int index) const;
  void set_amount(int index, ::int32_t value);
  void add_amount(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& amount() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_amount();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_amount() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_amount();

  public:
  // .OfficerProgressType progressType = 1;
  void clear_progresstype() ;
  ::OfficerProgressType progresstype() const;
  void set_progresstype(::OfficerProgressType value);

  private:
  ::OfficerProgressType _internal_progresstype() const;
  void _internal_set_progresstype(::OfficerProgressType value);

  public:
  // int32 rank = 2;
  void clear_rank() ;
  ::int32_t rank() const;
  void set_rank(::int32_t value);

  private:
  ::int32_t _internal_rank() const;
  void _internal_set_rank(::int32_t value);

  public:
  // int32 schemaId = 3;
  void clear_schemaid() ;
  ::int32_t schemaid() const;
  void set_schemaid(::int32_t value);

  private:
  ::int32_t _internal_schemaid() const;
  void _internal_set_schemaid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:OfficerProgressRewardSpec)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> amount_;
    mutable ::google::protobuf::internal::CachedSize _amount_cached_byte_size_;
    int progresstype_;
    ::int32_t rank_;
    ::int32_t schemaid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_stfc_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CommanderSkillSpec

// int64 researchId = 1;
inline void CommanderSkillSpec::clear_researchid() {
  _impl_.researchid_ = ::int64_t{0};
}
inline ::int64_t CommanderSkillSpec::researchid() const {
  // @@protoc_insertion_point(field_get:CommanderSkillSpec.researchId)
  return _internal_researchid();
}
inline void CommanderSkillSpec::set_researchid(::int64_t value) {
  _internal_set_researchid(value);
  // @@protoc_insertion_point(field_set:CommanderSkillSpec.researchId)
}
inline ::int64_t CommanderSkillSpec::_internal_researchid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.researchid_;
}
inline void CommanderSkillSpec::_internal_set_researchid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.researchid_ = value;
}

// int32 groupId = 2;
inline void CommanderSkillSpec::clear_groupid() {
  _impl_.groupid_ = 0;
}
inline ::int32_t CommanderSkillSpec::groupid() const {
  // @@protoc_insertion_point(field_get:CommanderSkillSpec.groupId)
  return _internal_groupid();
}
inline void CommanderSkillSpec::set_groupid(::int32_t value) {
  _internal_set_groupid(value);
  // @@protoc_insertion_point(field_set:CommanderSkillSpec.groupId)
}
inline ::int32_t CommanderSkillSpec::_internal_groupid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.groupid_;
}
inline void CommanderSkillSpec::_internal_set_groupid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.groupid_ = value;
}

// int32 sortOrder = 3;
inline void CommanderSkillSpec::clear_sortorder() {
  _impl_.sortorder_ = 0;
}
inline ::int32_t CommanderSkillSpec::sortorder() const {
  // @@protoc_insertion_point(field_get:CommanderSkillSpec.sortOrder)
  return _internal_sortorder();
}
inline void CommanderSkillSpec::set_sortorder(::int32_t value) {
  _internal_set_sortorder(value);
  // @@protoc_insertion_point(field_set:CommanderSkillSpec.sortOrder)
}
inline ::int32_t CommanderSkillSpec::_internal_sortorder() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sortorder_;
}
inline void CommanderSkillSpec::_internal_set_sortorder(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sortorder_ = value;
}

// .OfficerSkillType skillType = 4;
inline void CommanderSkillSpec::clear_skilltype() {
  _impl_.skilltype_ = 0;
}
inline ::OfficerSkillType CommanderSkillSpec::skilltype() const {
  // @@protoc_insertion_point(field_get:CommanderSkillSpec.skillType)
  return _internal_skilltype();
}
inline void CommanderSkillSpec::set_skilltype(::OfficerSkillType value) {
  _internal_set_skilltype(value);
  // @@protoc_insertion_point(field_set:CommanderSkillSpec.skillType)
}
inline ::OfficerSkillType CommanderSkillSpec::_internal_skilltype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::OfficerSkillType>(_impl_.skilltype_);
}
inline void CommanderSkillSpec::_internal_set_skilltype(::OfficerSkillType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.skilltype_ = value;
}

// -------------------------------------------------------------------

// EntityRef

// int64 entityId = 1;
inline void EntityRef::clear_entityid() {
  _impl_.entityid_ = ::int64_t{0};
}
inline ::int64_t EntityRef::entityid() const {
  // @@protoc_insertion_point(field_get:EntityRef.entityId)
  return _internal_entityid();
}
inline void EntityRef::set_entityid(::int64_t value) {
  _internal_set_entityid(value);
  // @@protoc_insertion_point(field_set:EntityRef.entityId)
}
inline ::int64_t EntityRef::_internal_entityid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entityid_;
}
inline void EntityRef::_internal_set_entityid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entityid_ = value;
}

// string entityIdStr = 2;
inline void EntityRef::clear_entityidstr() {
  _impl_.entityidstr_.ClearToEmpty();
}
inline const std::string& EntityRef::entityidstr() const {
  // @@protoc_insertion_point(field_get:EntityRef.entityIdStr)
  return _internal_entityidstr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EntityRef::set_entityidstr(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entityidstr_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:EntityRef.entityIdStr)
}
inline std::string* EntityRef::mutable_entityidstr() {
  std::string* _s = _internal_mutable_entityidstr();
  // @@protoc_insertion_point(field_mutable:EntityRef.entityIdStr)
  return _s;
}
inline const std::string& EntityRef::_internal_entityidstr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entityidstr_.Get();
}
inline void EntityRef::_internal_set_entityidstr(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entityidstr_.Set(value, GetArenaForAllocation());
}
inline std::string* EntityRef::_internal_mutable_entityidstr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.entityidstr_.Mutable( GetArenaForAllocation());
}
inline std::string* EntityRef::release_entityidstr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:EntityRef.entityIdStr)
  return _impl_.entityidstr_.Release();
}
inline void EntityRef::set_allocated_entityidstr(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entityidstr_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entityidstr_.IsDefault()) {
          _impl_.entityidstr_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:EntityRef.entityIdStr)
}

// .EntityType entityType = 3;
inline void EntityRef::clear_entitytype() {
  _impl_.entitytype_ = 0;
}
inline ::EntityType EntityRef::entitytype() const {
  // @@protoc_insertion_point(field_get:EntityRef.entityType)
  return _internal_entitytype();
}
inline void EntityRef::set_entitytype(::EntityType value) {
  _internal_set_entitytype(value);
  // @@protoc_insertion_point(field_set:EntityRef.entityType)
}
inline ::EntityType EntityRef::_internal_entitytype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::EntityType>(_impl_.entitytype_);
}
inline void EntityRef::_internal_set_entitytype(::EntityType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entitytype_ = value;
}

// .EntityRef parentEntity = 4;
inline bool EntityRef::has_parententity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parententity_ != nullptr);
  return value;
}
inline void EntityRef::clear_parententity() {
  if (_impl_.parententity_ != nullptr) _impl_.parententity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::EntityRef& EntityRef::_internal_parententity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::EntityRef* p = _impl_.parententity_;
  return p != nullptr ? *p : reinterpret_cast<const ::EntityRef&>(::_EntityRef_default_instance_);
}
inline const ::EntityRef& EntityRef::parententity() const {
  // @@protoc_insertion_point(field_get:EntityRef.parentEntity)
  return _internal_parententity();
}
inline void EntityRef::unsafe_arena_set_allocated_parententity(::EntityRef* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parententity_);
  }
  _impl_.parententity_ = reinterpret_cast<::EntityRef*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:EntityRef.parentEntity)
}
inline ::EntityRef* EntityRef::release_parententity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::EntityRef* released = _impl_.parententity_;
  _impl_.parententity_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::EntityRef* EntityRef::unsafe_arena_release_parententity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:EntityRef.parentEntity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::EntityRef* temp = _impl_.parententity_;
  _impl_.parententity_ = nullptr;
  return temp;
}
inline ::EntityRef* EntityRef::_internal_mutable_parententity() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.parententity_ == nullptr) {
    auto* p = CreateMaybeMessage<::EntityRef>(GetArenaForAllocation());
    _impl_.parententity_ = reinterpret_cast<::EntityRef*>(p);
  }
  return _impl_.parententity_;
}
inline ::EntityRef* EntityRef::mutable_parententity() {
  ::EntityRef* _msg = _internal_mutable_parententity();
  // @@protoc_insertion_point(field_mutable:EntityRef.parentEntity)
  return _msg;
}
inline void EntityRef::set_allocated_parententity(::EntityRef* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::EntityRef*>(_impl_.parententity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::EntityRef*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.parententity_ = reinterpret_cast<::EntityRef*>(value);
  // @@protoc_insertion_point(field_set_allocated:EntityRef.parentEntity)
}

// -------------------------------------------------------------------

// OfficerLevelRewardsSpec

// int32 amount = 1;
inline void OfficerLevelRewardsSpec::clear_amount() {
  _impl_.amount_ = 0;
}
inline ::int32_t OfficerLevelRewardsSpec::amount() const {
  // @@protoc_insertion_point(field_get:OfficerLevelRewardsSpec.amount)
  return _internal_amount();
}
inline void OfficerLevelRewardsSpec::set_amount(::int32_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:OfficerLevelRewardsSpec.amount)
}
inline ::int32_t OfficerLevelRewardsSpec::_internal_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amount_;
}
inline void OfficerLevelRewardsSpec::_internal_set_amount(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.amount_ = value;
}

// int64 id = 2;
inline void OfficerLevelRewardsSpec::clear_id() {
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t OfficerLevelRewardsSpec::id() const {
  // @@protoc_insertion_point(field_get:OfficerLevelRewardsSpec.id)
  return _internal_id();
}
inline void OfficerLevelRewardsSpec::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:OfficerLevelRewardsSpec.id)
}
inline ::int64_t OfficerLevelRewardsSpec::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void OfficerLevelRewardsSpec::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// int32 level = 3;
inline void OfficerLevelRewardsSpec::clear_level() {
  _impl_.level_ = 0;
}
inline ::int32_t OfficerLevelRewardsSpec::level() const {
  // @@protoc_insertion_point(field_get:OfficerLevelRewardsSpec.level)
  return _internal_level();
}
inline void OfficerLevelRewardsSpec::set_level(::int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:OfficerLevelRewardsSpec.level)
}
inline ::int32_t OfficerLevelRewardsSpec::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_;
}
inline void OfficerLevelRewardsSpec::_internal_set_level(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// string schemaId = 4;
inline void OfficerLevelRewardsSpec::clear_schemaid() {
  _impl_.schemaid_.ClearToEmpty();
}
inline const std::string& OfficerLevelRewardsSpec::schemaid() const {
  // @@protoc_insertion_point(field_get:OfficerLevelRewardsSpec.schemaId)
  return _internal_schemaid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OfficerLevelRewardsSpec::set_schemaid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.schemaid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:OfficerLevelRewardsSpec.schemaId)
}
inline std::string* OfficerLevelRewardsSpec::mutable_schemaid() {
  std::string* _s = _internal_mutable_schemaid();
  // @@protoc_insertion_point(field_mutable:OfficerLevelRewardsSpec.schemaId)
  return _s;
}
inline const std::string& OfficerLevelRewardsSpec::_internal_schemaid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.schemaid_.Get();
}
inline void OfficerLevelRewardsSpec::_internal_set_schemaid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.schemaid_.Set(value, GetArenaForAllocation());
}
inline std::string* OfficerLevelRewardsSpec::_internal_mutable_schemaid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.schemaid_.Mutable( GetArenaForAllocation());
}
inline std::string* OfficerLevelRewardsSpec::release_schemaid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:OfficerLevelRewardsSpec.schemaId)
  return _impl_.schemaid_.Release();
}
inline void OfficerLevelRewardsSpec::set_allocated_schemaid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.schemaid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.schemaid_.IsDefault()) {
          _impl_.schemaid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:OfficerLevelRewardsSpec.schemaId)
}

// -------------------------------------------------------------------

// OfficerProgressRewardSpec

// .OfficerProgressType progressType = 1;
inline void OfficerProgressRewardSpec::clear_progresstype() {
  _impl_.progresstype_ = 0;
}
inline ::OfficerProgressType OfficerProgressRewardSpec::progresstype() const {
  // @@protoc_insertion_point(field_get:OfficerProgressRewardSpec.progressType)
  return _internal_progresstype();
}
inline void OfficerProgressRewardSpec::set_progresstype(::OfficerProgressType value) {
  _internal_set_progresstype(value);
  // @@protoc_insertion_point(field_set:OfficerProgressRewardSpec.progressType)
}
inline ::OfficerProgressType OfficerProgressRewardSpec::_internal_progresstype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::OfficerProgressType>(_impl_.progresstype_);
}
inline void OfficerProgressRewardSpec::_internal_set_progresstype(::OfficerProgressType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.progresstype_ = value;
}

// int32 rank = 2;
inline void OfficerProgressRewardSpec::clear_rank() {
  _impl_.rank_ = 0;
}
inline ::int32_t OfficerProgressRewardSpec::rank() const {
  // @@protoc_insertion_point(field_get:OfficerProgressRewardSpec.rank)
  return _internal_rank();
}
inline void OfficerProgressRewardSpec::set_rank(::int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:OfficerProgressRewardSpec.rank)
}
inline ::int32_t OfficerProgressRewardSpec::_internal_rank() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rank_;
}
inline void OfficerProgressRewardSpec::_internal_set_rank(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rank_ = value;
}

// int32 schemaId = 3;
inline void OfficerProgressRewardSpec::clear_schemaid() {
  _impl_.schemaid_ = 0;
}
inline ::int32_t OfficerProgressRewardSpec::schemaid() const {
  // @@protoc_insertion_point(field_get:OfficerProgressRewardSpec.schemaId)
  return _internal_schemaid();
}
inline void OfficerProgressRewardSpec::set_schemaid(::int32_t value) {
  _internal_set_schemaid(value);
  // @@protoc_insertion_point(field_set:OfficerProgressRewardSpec.schemaId)
}
inline ::int32_t OfficerProgressRewardSpec::_internal_schemaid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.schemaid_;
}
inline void OfficerProgressRewardSpec::_internal_set_schemaid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.schemaid_ = value;
}

// repeated int32 amount = 4;
inline int OfficerProgressRewardSpec::_internal_amount_size() const {
  return _internal_amount().size();
}
inline int OfficerProgressRewardSpec::amount_size() const {
  return _internal_amount_size();
}
inline void OfficerProgressRewardSpec::clear_amount() {
  _internal_mutable_amount()->Clear();
}
inline ::int32_t OfficerProgressRewardSpec::amount(int index) const {
  // @@protoc_insertion_point(field_get:OfficerProgressRewardSpec.amount)
  return _internal_amount().Get(index);
}
inline void OfficerProgressRewardSpec::set_amount(int index, ::int32_t value) {
  _internal_mutable_amount()->Set(index, value);
  // @@protoc_insertion_point(field_set:OfficerProgressRewardSpec.amount)
}
inline void OfficerProgressRewardSpec::add_amount(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_amount()->Add(value);
  // @@protoc_insertion_point(field_add:OfficerProgressRewardSpec.amount)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& OfficerProgressRewardSpec::amount() const {
  // @@protoc_insertion_point(field_list:OfficerProgressRewardSpec.amount)
  return _internal_amount();
}
inline ::google::protobuf::RepeatedField<::int32_t>* OfficerProgressRewardSpec::mutable_amount() {
  // @@protoc_insertion_point(field_mutable_list:OfficerProgressRewardSpec.amount)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_amount();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& OfficerProgressRewardSpec::_internal_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amount_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* OfficerProgressRewardSpec::_internal_mutable_amount() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.amount_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::OfficerSkillType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::OfficerSkillType>() {
  return ::OfficerSkillType_descriptor();
}
template <>
struct is_proto_enum<::EntityType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::EntityType>() {
  return ::EntityType_descriptor();
}
template <>
struct is_proto_enum<::OfficerProgressType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::OfficerProgressType>() {
  return ::OfficerProgressType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_stfc_2eproto_2epb_2eh
