// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Prime.Bookmarks.proto

#include "Digit.Prime.Bookmarks.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Digit {
namespace Prime {
namespace Bookmarks {
        template <typename>
PROTOBUF_CONSTEXPR Bookmark::Bookmark(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.userprofileid_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.systemid_)*/ ::int64_t{0},
      /*decltype(_impl_.category_)*/ 0,
      /*decltype(_impl_.xcoordinate_)*/ 0,
      /*decltype(_impl_.modifiedat_)*/ ::int64_t{0},
      /*decltype(_impl_.ycoordinate_)*/ 0,
      /*decltype(_impl_.locationtype_)*/ 0,
      /*decltype(_impl_.planetlocaid_)*/ ::int64_t{0},
      /*decltype(_impl_.resourcelocaid_)*/ ::int64_t{0},
      /*decltype(_impl_.missionlocaid_)*/ ::int64_t{0},
      /*decltype(_impl_.planettype_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BookmarkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BookmarkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BookmarkDefaultTypeInternal() {}
  union {
    Bookmark _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BookmarkDefaultTypeInternal _Bookmark_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR BookmarksSaveData::BookmarksSaveData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.bookmarks_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct BookmarksSaveDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BookmarksSaveDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BookmarksSaveDataDefaultTypeInternal() {}
  union {
    BookmarksSaveData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BookmarksSaveDataDefaultTypeInternal _BookmarksSaveData_default_instance_;
}  // namespace Bookmarks
}  // namespace Prime
}  // namespace Digit
static ::_pb::Metadata file_level_metadata_Digit_2ePrime_2eBookmarks_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Digit_2ePrime_2eBookmarks_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Digit_2ePrime_2eBookmarks_2eproto = nullptr;
const ::uint32_t TableStruct_Digit_2ePrime_2eBookmarks_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.category_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.systemid_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.xcoordinate_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.ycoordinate_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.modifiedat_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.locationtype_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.planettype_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.userprofileid_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.planetlocaid_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.resourcelocaid_),
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::Bookmark, _impl_.missionlocaid_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::BookmarksSaveData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Bookmarks::BookmarksSaveData, _impl_.bookmarks_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Digit::Prime::Bookmarks::Bookmark)},
        {20, -1, -1, sizeof(::Digit::Prime::Bookmarks::BookmarksSaveData)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::Digit::Prime::Bookmarks::_Bookmark_default_instance_._instance,
    &::Digit::Prime::Bookmarks::_BookmarksSaveData_default_instance_._instance,
};
const char descriptor_table_protodef_Digit_2ePrime_2eBookmarks_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\033Digit.Prime.Bookmarks.proto\022\025Digit.Pri"
    "me.Bookmarks\"\200\002\n\010Bookmark\022\014\n\004name\030\001 \001(\t\022"
    "\020\n\010category\030\002 \001(\005\022\020\n\010systemID\030\003 \001(\003\022\023\n\013x"
    "Coordinate\030\004 \001(\002\022\023\n\013yCoordinate\030\005 \001(\002\022\022\n"
    "\nmodifiedAt\030\006 \001(\003\022\024\n\014locationType\030\007 \001(\005\022"
    "\022\n\nplanetType\030\010 \001(\005\022\025\n\ruserProfileId\030\t \001"
    "(\t\022\024\n\014planetLocaId\030\n \001(\003\022\026\n\016resourceLoca"
    "Id\030\013 \001(\003\022\025\n\rmissionLocaId\030\014 \001(\003\"G\n\021Bookm"
    "arksSaveData\0222\n\tbookmarks\030\001 \003(\0132\037.Digit."
    "Prime.Bookmarks.Bookmarkb\006proto3"
};
static ::absl::once_flag descriptor_table_Digit_2ePrime_2eBookmarks_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Digit_2ePrime_2eBookmarks_2eproto = {
    false,
    false,
    392,
    descriptor_table_protodef_Digit_2ePrime_2eBookmarks_2eproto,
    "Digit.Prime.Bookmarks.proto",
    &descriptor_table_Digit_2ePrime_2eBookmarks_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_Digit_2ePrime_2eBookmarks_2eproto::offsets,
    file_level_metadata_Digit_2ePrime_2eBookmarks_2eproto,
    file_level_enum_descriptors_Digit_2ePrime_2eBookmarks_2eproto,
    file_level_service_descriptors_Digit_2ePrime_2eBookmarks_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Digit_2ePrime_2eBookmarks_2eproto_getter() {
  return &descriptor_table_Digit_2ePrime_2eBookmarks_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Digit_2ePrime_2eBookmarks_2eproto(&descriptor_table_Digit_2ePrime_2eBookmarks_2eproto);
namespace Digit {
namespace Prime {
namespace Bookmarks {
// ===================================================================

class Bookmark::_Internal {
 public:
};

Bookmark::Bookmark(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Prime.Bookmarks.Bookmark)
}
Bookmark::Bookmark(const Bookmark& from) : ::google::protobuf::Message() {
  Bookmark* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.userprofileid_){},
      decltype(_impl_.systemid_){},
      decltype(_impl_.category_){},
      decltype(_impl_.xcoordinate_){},
      decltype(_impl_.modifiedat_){},
      decltype(_impl_.ycoordinate_){},
      decltype(_impl_.locationtype_){},
      decltype(_impl_.planetlocaid_){},
      decltype(_impl_.resourcelocaid_){},
      decltype(_impl_.missionlocaid_){},
      decltype(_impl_.planettype_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.userprofileid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.userprofileid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_userprofileid().empty()) {
    _this->_impl_.userprofileid_.Set(from._internal_userprofileid(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.systemid_, &from._impl_.systemid_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.planettype_) -
    reinterpret_cast<char*>(&_impl_.systemid_)) + sizeof(_impl_.planettype_));

  // @@protoc_insertion_point(copy_constructor:Digit.Prime.Bookmarks.Bookmark)
}
inline void Bookmark::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.userprofileid_){},
      decltype(_impl_.systemid_){::int64_t{0}},
      decltype(_impl_.category_){0},
      decltype(_impl_.xcoordinate_){0},
      decltype(_impl_.modifiedat_){::int64_t{0}},
      decltype(_impl_.ycoordinate_){0},
      decltype(_impl_.locationtype_){0},
      decltype(_impl_.planetlocaid_){::int64_t{0}},
      decltype(_impl_.resourcelocaid_){::int64_t{0}},
      decltype(_impl_.missionlocaid_){::int64_t{0}},
      decltype(_impl_.planettype_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.userprofileid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.userprofileid_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
Bookmark::~Bookmark() {
  // @@protoc_insertion_point(destructor:Digit.Prime.Bookmarks.Bookmark)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Bookmark::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.userprofileid_.Destroy();
}
void Bookmark::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Bookmark::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Prime.Bookmarks.Bookmark)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.userprofileid_.ClearToEmpty();
  ::memset(&_impl_.systemid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.planettype_) -
      reinterpret_cast<char*>(&_impl_.systemid_)) + sizeof(_impl_.planettype_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Bookmark::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 64, 2> Bookmark::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Bookmark_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.name_)}},
    // int32 category = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Bookmark, _impl_.category_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.category_)}},
    // int64 systemID = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Bookmark, _impl_.systemid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.systemid_)}},
    // float xCoordinate = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.xcoordinate_)}},
    // float yCoordinate = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.ycoordinate_)}},
    // int64 modifiedAt = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Bookmark, _impl_.modifiedat_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.modifiedat_)}},
    // int32 locationType = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Bookmark, _impl_.locationtype_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.locationtype_)}},
    // int32 planetType = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Bookmark, _impl_.planettype_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.planettype_)}},
    // string userProfileId = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.userprofileid_)}},
    // int64 planetLocaId = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Bookmark, _impl_.planetlocaid_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.planetlocaid_)}},
    // int64 resourceLocaId = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Bookmark, _impl_.resourcelocaid_), 63>(),
     {88, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.resourcelocaid_)}},
    // int64 missionLocaId = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Bookmark, _impl_.missionlocaid_), 63>(),
     {96, 63, 0, PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.missionlocaid_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 category = 2;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 systemID = 3;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.systemid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // float xCoordinate = 4;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.xcoordinate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float yCoordinate = 5;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.ycoordinate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int64 modifiedAt = 6;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.modifiedat_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 locationType = 7;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.locationtype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 planetType = 8;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.planettype_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string userProfileId = 9;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.userprofileid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 planetLocaId = 10;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.planetlocaid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 resourceLocaId = 11;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.resourcelocaid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 missionLocaId = 12;
    {PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.missionlocaid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\36\4\0\0\0\0\0\0\0\15\0\0\0\0\0\0"
    "Digit.Prime.Bookmarks.Bookmark"
    "name"
    "userProfileId"
  }},
};

::uint8_t* Bookmark::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Prime.Bookmarks.Bookmark)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Prime.Bookmarks.Bookmark.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 category = 2;
  if (this->_internal_category() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_category(), target);
  }

  // int64 systemID = 3;
  if (this->_internal_systemid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_systemid(), target);
  }

  // float xCoordinate = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xcoordinate = this->_internal_xcoordinate();
  ::uint32_t raw_xcoordinate;
  memcpy(&raw_xcoordinate, &tmp_xcoordinate, sizeof(tmp_xcoordinate));
  if (raw_xcoordinate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_xcoordinate(), target);
  }

  // float yCoordinate = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ycoordinate = this->_internal_ycoordinate();
  ::uint32_t raw_ycoordinate;
  memcpy(&raw_ycoordinate, &tmp_ycoordinate, sizeof(tmp_ycoordinate));
  if (raw_ycoordinate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_ycoordinate(), target);
  }

  // int64 modifiedAt = 6;
  if (this->_internal_modifiedat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<6>(
            stream, this->_internal_modifiedat(), target);
  }

  // int32 locationType = 7;
  if (this->_internal_locationtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_locationtype(), target);
  }

  // int32 planetType = 8;
  if (this->_internal_planettype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_planettype(), target);
  }

  // string userProfileId = 9;
  if (!this->_internal_userprofileid().empty()) {
    const std::string& _s = this->_internal_userprofileid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Prime.Bookmarks.Bookmark.userProfileId");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // int64 planetLocaId = 10;
  if (this->_internal_planetlocaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<10>(
            stream, this->_internal_planetlocaid(), target);
  }

  // int64 resourceLocaId = 11;
  if (this->_internal_resourcelocaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<11>(
            stream, this->_internal_resourcelocaid(), target);
  }

  // int64 missionLocaId = 12;
  if (this->_internal_missionlocaid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<12>(
            stream, this->_internal_missionlocaid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Prime.Bookmarks.Bookmark)
  return target;
}

::size_t Bookmark::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Prime.Bookmarks.Bookmark)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string userProfileId = 9;
  if (!this->_internal_userprofileid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_userprofileid());
  }

  // int64 systemID = 3;
  if (this->_internal_systemid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_systemid());
  }

  // int32 category = 2;
  if (this->_internal_category() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_category());
  }

  // float xCoordinate = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xcoordinate = this->_internal_xcoordinate();
  ::uint32_t raw_xcoordinate;
  memcpy(&raw_xcoordinate, &tmp_xcoordinate, sizeof(tmp_xcoordinate));
  if (raw_xcoordinate != 0) {
    total_size += 5;
  }

  // int64 modifiedAt = 6;
  if (this->_internal_modifiedat() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_modifiedat());
  }

  // float yCoordinate = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ycoordinate = this->_internal_ycoordinate();
  ::uint32_t raw_ycoordinate;
  memcpy(&raw_ycoordinate, &tmp_ycoordinate, sizeof(tmp_ycoordinate));
  if (raw_ycoordinate != 0) {
    total_size += 5;
  }

  // int32 locationType = 7;
  if (this->_internal_locationtype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_locationtype());
  }

  // int64 planetLocaId = 10;
  if (this->_internal_planetlocaid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_planetlocaid());
  }

  // int64 resourceLocaId = 11;
  if (this->_internal_resourcelocaid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_resourcelocaid());
  }

  // int64 missionLocaId = 12;
  if (this->_internal_missionlocaid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_missionlocaid());
  }

  // int32 planetType = 8;
  if (this->_internal_planettype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_planettype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Bookmark::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Bookmark::MergeImpl
};
const ::google::protobuf::Message::ClassData*Bookmark::GetClassData() const { return &_class_data_; }


void Bookmark::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Bookmark*>(&to_msg);
  auto& from = static_cast<const Bookmark&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Prime.Bookmarks.Bookmark)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_userprofileid().empty()) {
    _this->_internal_set_userprofileid(from._internal_userprofileid());
  }
  if (from._internal_systemid() != 0) {
    _this->_internal_set_systemid(from._internal_systemid());
  }
  if (from._internal_category() != 0) {
    _this->_internal_set_category(from._internal_category());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_xcoordinate = from._internal_xcoordinate();
  ::uint32_t raw_xcoordinate;
  memcpy(&raw_xcoordinate, &tmp_xcoordinate, sizeof(tmp_xcoordinate));
  if (raw_xcoordinate != 0) {
    _this->_internal_set_xcoordinate(from._internal_xcoordinate());
  }
  if (from._internal_modifiedat() != 0) {
    _this->_internal_set_modifiedat(from._internal_modifiedat());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_ycoordinate = from._internal_ycoordinate();
  ::uint32_t raw_ycoordinate;
  memcpy(&raw_ycoordinate, &tmp_ycoordinate, sizeof(tmp_ycoordinate));
  if (raw_ycoordinate != 0) {
    _this->_internal_set_ycoordinate(from._internal_ycoordinate());
  }
  if (from._internal_locationtype() != 0) {
    _this->_internal_set_locationtype(from._internal_locationtype());
  }
  if (from._internal_planetlocaid() != 0) {
    _this->_internal_set_planetlocaid(from._internal_planetlocaid());
  }
  if (from._internal_resourcelocaid() != 0) {
    _this->_internal_set_resourcelocaid(from._internal_resourcelocaid());
  }
  if (from._internal_missionlocaid() != 0) {
    _this->_internal_set_missionlocaid(from._internal_missionlocaid());
  }
  if (from._internal_planettype() != 0) {
    _this->_internal_set_planettype(from._internal_planettype());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Bookmark::CopyFrom(const Bookmark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Prime.Bookmarks.Bookmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Bookmark::IsInitialized() const {
  return true;
}

void Bookmark::InternalSwap(Bookmark* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.userprofileid_, lhs_arena,
                                       &other->_impl_.userprofileid_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.planettype_)
      + sizeof(Bookmark::_impl_.planettype_)
      - PROTOBUF_FIELD_OFFSET(Bookmark, _impl_.systemid_)>(
          reinterpret_cast<char*>(&_impl_.systemid_),
          reinterpret_cast<char*>(&other->_impl_.systemid_));
}

::google::protobuf::Metadata Bookmark::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2ePrime_2eBookmarks_2eproto_getter, &descriptor_table_Digit_2ePrime_2eBookmarks_2eproto_once,
      file_level_metadata_Digit_2ePrime_2eBookmarks_2eproto[0]);
}
// ===================================================================

class BookmarksSaveData::_Internal {
 public:
};

BookmarksSaveData::BookmarksSaveData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Prime.Bookmarks.BookmarksSaveData)
}
BookmarksSaveData::BookmarksSaveData(const BookmarksSaveData& from) : ::google::protobuf::Message() {
  BookmarksSaveData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bookmarks_){from._impl_.bookmarks_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Digit.Prime.Bookmarks.BookmarksSaveData)
}
inline void BookmarksSaveData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.bookmarks_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
BookmarksSaveData::~BookmarksSaveData() {
  // @@protoc_insertion_point(destructor:Digit.Prime.Bookmarks.BookmarksSaveData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BookmarksSaveData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bookmarks_.~RepeatedPtrField();
}
void BookmarksSaveData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void BookmarksSaveData::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Prime.Bookmarks.BookmarksSaveData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_bookmarks()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BookmarksSaveData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> BookmarksSaveData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BookmarksSaveData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .Digit.Prime.Bookmarks.Bookmark bookmarks = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BookmarksSaveData, _impl_.bookmarks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Digit.Prime.Bookmarks.Bookmark bookmarks = 1;
    {PROTOBUF_FIELD_OFFSET(BookmarksSaveData, _impl_.bookmarks_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Digit::Prime::Bookmarks::Bookmark>()},
  }}, {{
  }},
};

::uint8_t* BookmarksSaveData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Prime.Bookmarks.BookmarksSaveData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Digit.Prime.Bookmarks.Bookmark bookmarks = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bookmarks_size()); i < n; i++) {
    const auto& repfield = this->_internal_bookmarks().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Prime.Bookmarks.BookmarksSaveData)
  return target;
}

::size_t BookmarksSaveData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Prime.Bookmarks.BookmarksSaveData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Digit.Prime.Bookmarks.Bookmark bookmarks = 1;
  total_size += 1UL * this->_internal_bookmarks_size();
  for (const auto& msg : this->_internal_bookmarks()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BookmarksSaveData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    BookmarksSaveData::MergeImpl
};
const ::google::protobuf::Message::ClassData*BookmarksSaveData::GetClassData() const { return &_class_data_; }


void BookmarksSaveData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BookmarksSaveData*>(&to_msg);
  auto& from = static_cast<const BookmarksSaveData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Prime.Bookmarks.BookmarksSaveData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bookmarks()->MergeFrom(from._internal_bookmarks());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BookmarksSaveData::CopyFrom(const BookmarksSaveData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Prime.Bookmarks.BookmarksSaveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BookmarksSaveData::IsInitialized() const {
  return true;
}

void BookmarksSaveData::InternalSwap(BookmarksSaveData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bookmarks_.InternalSwap(&other->_impl_.bookmarks_);
}

::google::protobuf::Metadata BookmarksSaveData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2ePrime_2eBookmarks_2eproto_getter, &descriptor_table_Digit_2ePrime_2eBookmarks_2eproto_once,
      file_level_metadata_Digit_2ePrime_2eBookmarks_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Bookmarks
}  // namespace Prime
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
