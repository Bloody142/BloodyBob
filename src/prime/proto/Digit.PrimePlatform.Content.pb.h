// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.PrimePlatform.Content.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrimePlatform_2eContent_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrimePlatform_2eContent_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Digit_2ePrimePlatform_2eContent_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Digit_2ePrimePlatform_2eContent_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Digit_2ePrimePlatform_2eContent_2eproto;
namespace Digit {
namespace PrimePlatform {
namespace Content {
class Bucket;
struct BucketDefaultTypeInternal;
extern BucketDefaultTypeInternal _Bucket_default_instance_;
class Bundle;
struct BundleDefaultTypeInternal;
extern BundleDefaultTypeInternal _Bundle_default_instance_;
class BundleContent;
struct BundleContentDefaultTypeInternal;
extern BundleContentDefaultTypeInternal _BundleContent_default_instance_;
class Bundles;
struct BundlesDefaultTypeInternal;
extern BundlesDefaultTypeInternal _Bundles_default_instance_;
class ContentItem;
struct ContentItemDefaultTypeInternal;
extern ContentItemDefaultTypeInternal _ContentItem_default_instance_;
class ContentItemList;
struct ContentItemListDefaultTypeInternal;
extern ContentItemListDefaultTypeInternal _ContentItemList_default_instance_;
class Cost;
struct CostDefaultTypeInternal;
extern CostDefaultTypeInternal _Cost_default_instance_;
class Hinting;
struct HintingDefaultTypeInternal;
extern HintingDefaultTypeInternal _Hinting_default_instance_;
class Hinting_TranslationKey;
struct Hinting_TranslationKeyDefaultTypeInternal;
extern Hinting_TranslationKeyDefaultTypeInternal _Hinting_TranslationKey_default_instance_;
class Metadata;
struct MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class OfferDetails;
struct OfferDetailsDefaultTypeInternal;
extern OfferDetailsDefaultTypeInternal _OfferDetails_default_instance_;
class Order;
struct OrderDefaultTypeInternal;
extern OrderDefaultTypeInternal _Order_default_instance_;
class OrderItem;
struct OrderItemDefaultTypeInternal;
extern OrderItemDefaultTypeInternal _OrderItem_default_instance_;
class Resource;
struct ResourceDefaultTypeInternal;
extern ResourceDefaultTypeInternal _Resource_default_instance_;
class Translation;
struct TranslationDefaultTypeInternal;
extern TranslationDefaultTypeInternal _Translation_default_instance_;
class TranslationSection;
struct TranslationSectionDefaultTypeInternal;
extern TranslationSectionDefaultTypeInternal _TranslationSection_default_instance_;
class TranslationsContainer;
struct TranslationsContainerDefaultTypeInternal;
extern TranslationsContainerDefaultTypeInternal _TranslationsContainer_default_instance_;
}  // namespace Content
}  // namespace PrimePlatform
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Digit {
namespace PrimePlatform {
namespace Content {
enum AnimationOnClaimType : int {
  ANIMATIONONCLAIMTYPE_UNSPECIFIED = 0,
  ANIMATIONONCLAIMTYPE_FLYOUT = 1,
  AnimationOnClaimType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AnimationOnClaimType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AnimationOnClaimType_IsValid(int value);
constexpr AnimationOnClaimType AnimationOnClaimType_MIN = static_cast<AnimationOnClaimType>(0);
constexpr AnimationOnClaimType AnimationOnClaimType_MAX = static_cast<AnimationOnClaimType>(1);
constexpr int AnimationOnClaimType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
AnimationOnClaimType_descriptor();
template <typename T>
const std::string& AnimationOnClaimType_Name(T value) {
  static_assert(std::is_same<T, AnimationOnClaimType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AnimationOnClaimType_Name().");
  return AnimationOnClaimType_Name(static_cast<AnimationOnClaimType>(value));
}
template <>
inline const std::string& AnimationOnClaimType_Name(AnimationOnClaimType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AnimationOnClaimType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool AnimationOnClaimType_Parse(absl::string_view name, AnimationOnClaimType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AnimationOnClaimType>(
      AnimationOnClaimType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Bundle final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Bundle) */ {
 public:
  inline Bundle() : Bundle(nullptr) {}
  ~Bundle() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Bundle(::google::protobuf::internal::ConstantInitialized);

  Bundle(const Bundle& from);
  Bundle(Bundle&& from) noexcept
    : Bundle() {
    *this = ::std::move(from);
  }

  inline Bundle& operator=(const Bundle& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bundle& operator=(Bundle&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Bundle& default_instance() {
    return *internal_default_instance();
  }
  static inline const Bundle* internal_default_instance() {
    return reinterpret_cast<const Bundle*>(
               &_Bundle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Bundle& a, Bundle& b) {
    a.Swap(&b);
  }
  inline void Swap(Bundle* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bundle* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Bundle* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Bundle>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Bundle& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Bundle& from) {
    Bundle::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bundle* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Bundle";
  }
  protected:
  explicit Bundle(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCostFieldNumber = 6,
    kRequirementsFieldNumber = 7,
    kBundleTypeStringFieldNumber = 2,
    kCategoryFieldNumber = 8,
    kExternalIdFieldNumber = 12,
    kOldExternalIdFieldNumber = 13,
    kMetadataFieldNumber = 9,
    kContentFieldNumber = 10,
    kHintingFieldNumber = 11,
    kOfferDetailsFieldNumber = 14,
    kBundleIdFieldNumber = 1,
    kPriorityFieldNumber = 3,
    kSortOrderFieldNumber = 4,
    kIsSpecialFieldNumber = 5,
    kIsPlayerlifecycleFieldNumber = 15,
    kAllowCustomQuantityFieldNumber = 16,
  };
  // repeated .Digit.PrimePlatform.Content.Cost cost = 6;
  int cost_size() const;
  private:
  int _internal_cost_size() const;

  public:
  void clear_cost() ;
  ::Digit::PrimePlatform::Content::Cost* mutable_cost(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Cost >*
      mutable_cost();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Cost>& _internal_cost() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Cost>* _internal_mutable_cost();
  public:
  const ::Digit::PrimePlatform::Content::Cost& cost(int index) const;
  ::Digit::PrimePlatform::Content::Cost* add_cost();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Cost >&
      cost() const;
  // repeated .Digit.PrimePlatform.Content.Resource requirements = 7;
  int requirements_size() const;
  private:
  int _internal_requirements_size() const;

  public:
  void clear_requirements() ;
  ::Digit::PrimePlatform::Content::Resource* mutable_requirements(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >*
      mutable_requirements();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>& _internal_requirements() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>* _internal_mutable_requirements();
  public:
  const ::Digit::PrimePlatform::Content::Resource& requirements(int index) const;
  ::Digit::PrimePlatform::Content::Resource* add_requirements();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >&
      requirements() const;
  // string bundleTypeString = 2;
  void clear_bundletypestring() ;
  const std::string& bundletypestring() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bundletypestring(Arg_&& arg, Args_... args);
  std::string* mutable_bundletypestring();
  PROTOBUF_NODISCARD std::string* release_bundletypestring();
  void set_allocated_bundletypestring(std::string* ptr);

  private:
  const std::string& _internal_bundletypestring() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bundletypestring(
      const std::string& value);
  std::string* _internal_mutable_bundletypestring();

  public:
  // string category = 8;
  void clear_category() ;
  const std::string& category() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  std::string* mutable_category();
  PROTOBUF_NODISCARD std::string* release_category();
  void set_allocated_category(std::string* ptr);

  private:
  const std::string& _internal_category() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category(
      const std::string& value);
  std::string* _internal_mutable_category();

  public:
  // string externalId = 12;
  void clear_externalid() ;
  const std::string& externalid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_externalid(Arg_&& arg, Args_... args);
  std::string* mutable_externalid();
  PROTOBUF_NODISCARD std::string* release_externalid();
  void set_allocated_externalid(std::string* ptr);

  private:
  const std::string& _internal_externalid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_externalid(
      const std::string& value);
  std::string* _internal_mutable_externalid();

  public:
  // string oldExternalId = 13;
  void clear_oldexternalid() ;
  const std::string& oldexternalid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_oldexternalid(Arg_&& arg, Args_... args);
  std::string* mutable_oldexternalid();
  PROTOBUF_NODISCARD std::string* release_oldexternalid();
  void set_allocated_oldexternalid(std::string* ptr);

  private:
  const std::string& _internal_oldexternalid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_oldexternalid(
      const std::string& value);
  std::string* _internal_mutable_oldexternalid();

  public:
  // .Digit.PrimePlatform.Content.Metadata metadata = 9;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::Digit::PrimePlatform::Content::Metadata& metadata() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::Metadata* release_metadata();
  ::Digit::PrimePlatform::Content::Metadata* mutable_metadata();
  void set_allocated_metadata(::Digit::PrimePlatform::Content::Metadata* value);
  void unsafe_arena_set_allocated_metadata(::Digit::PrimePlatform::Content::Metadata* value);
  ::Digit::PrimePlatform::Content::Metadata* unsafe_arena_release_metadata();

  private:
  const ::Digit::PrimePlatform::Content::Metadata& _internal_metadata() const;
  ::Digit::PrimePlatform::Content::Metadata* _internal_mutable_metadata();

  public:
  // .Digit.PrimePlatform.Content.BundleContent content = 10;
  bool has_content() const;
  void clear_content() ;
  const ::Digit::PrimePlatform::Content::BundleContent& content() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::BundleContent* release_content();
  ::Digit::PrimePlatform::Content::BundleContent* mutable_content();
  void set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value);
  void unsafe_arena_set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value);
  ::Digit::PrimePlatform::Content::BundleContent* unsafe_arena_release_content();

  private:
  const ::Digit::PrimePlatform::Content::BundleContent& _internal_content() const;
  ::Digit::PrimePlatform::Content::BundleContent* _internal_mutable_content();

  public:
  // .Digit.PrimePlatform.Content.Hinting hinting = 11;
  bool has_hinting() const;
  void clear_hinting() ;
  const ::Digit::PrimePlatform::Content::Hinting& hinting() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::Hinting* release_hinting();
  ::Digit::PrimePlatform::Content::Hinting* mutable_hinting();
  void set_allocated_hinting(::Digit::PrimePlatform::Content::Hinting* value);
  void unsafe_arena_set_allocated_hinting(::Digit::PrimePlatform::Content::Hinting* value);
  ::Digit::PrimePlatform::Content::Hinting* unsafe_arena_release_hinting();

  private:
  const ::Digit::PrimePlatform::Content::Hinting& _internal_hinting() const;
  ::Digit::PrimePlatform::Content::Hinting* _internal_mutable_hinting();

  public:
  // .Digit.PrimePlatform.Content.OfferDetails offerDetails = 14;
  bool has_offerdetails() const;
  void clear_offerdetails() ;
  const ::Digit::PrimePlatform::Content::OfferDetails& offerdetails() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::OfferDetails* release_offerdetails();
  ::Digit::PrimePlatform::Content::OfferDetails* mutable_offerdetails();
  void set_allocated_offerdetails(::Digit::PrimePlatform::Content::OfferDetails* value);
  void unsafe_arena_set_allocated_offerdetails(::Digit::PrimePlatform::Content::OfferDetails* value);
  ::Digit::PrimePlatform::Content::OfferDetails* unsafe_arena_release_offerdetails();

  private:
  const ::Digit::PrimePlatform::Content::OfferDetails& _internal_offerdetails() const;
  ::Digit::PrimePlatform::Content::OfferDetails* _internal_mutable_offerdetails();

  public:
  // int64 bundleId = 1;
  void clear_bundleid() ;
  ::int64_t bundleid() const;
  void set_bundleid(::int64_t value);

  private:
  ::int64_t _internal_bundleid() const;
  void _internal_set_bundleid(::int64_t value);

  public:
  // uint32 priority = 3;
  void clear_priority() ;
  ::uint32_t priority() const;
  void set_priority(::uint32_t value);

  private:
  ::uint32_t _internal_priority() const;
  void _internal_set_priority(::uint32_t value);

  public:
  // uint32 sortOrder = 4;
  void clear_sortorder() ;
  ::uint32_t sortorder() const;
  void set_sortorder(::uint32_t value);

  private:
  ::uint32_t _internal_sortorder() const;
  void _internal_set_sortorder(::uint32_t value);

  public:
  // bool isSpecial = 5;
  void clear_isspecial() ;
  bool isspecial() const;
  void set_isspecial(bool value);

  private:
  bool _internal_isspecial() const;
  void _internal_set_isspecial(bool value);

  public:
  // bool isPlayerlifecycle = 15;
  void clear_isplayerlifecycle() ;
  bool isplayerlifecycle() const;
  void set_isplayerlifecycle(bool value);

  private:
  bool _internal_isplayerlifecycle() const;
  void _internal_set_isplayerlifecycle(bool value);

  public:
  // bool allowCustomQuantity = 16;
  void clear_allowcustomquantity() ;
  bool allowcustomquantity() const;
  void set_allowcustomquantity(bool value);

  private:
  bool _internal_allowcustomquantity() const;
  void _internal_set_allowcustomquantity(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Bundle)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 16, 6, 106, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Cost > cost_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource > requirements_;
    ::google::protobuf::internal::ArenaStringPtr bundletypestring_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr externalid_;
    ::google::protobuf::internal::ArenaStringPtr oldexternalid_;
    ::Digit::PrimePlatform::Content::Metadata* metadata_;
    ::Digit::PrimePlatform::Content::BundleContent* content_;
    ::Digit::PrimePlatform::Content::Hinting* hinting_;
    ::Digit::PrimePlatform::Content::OfferDetails* offerdetails_;
    ::int64_t bundleid_;
    ::uint32_t priority_;
    ::uint32_t sortorder_;
    bool isspecial_;
    bool isplayerlifecycle_;
    bool allowcustomquantity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class TranslationsContainer final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.TranslationsContainer) */ {
 public:
  inline TranslationsContainer() : TranslationsContainer(nullptr) {}
  ~TranslationsContainer() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TranslationsContainer(::google::protobuf::internal::ConstantInitialized);

  TranslationsContainer(const TranslationsContainer& from);
  TranslationsContainer(TranslationsContainer&& from) noexcept
    : TranslationsContainer() {
    *this = ::std::move(from);
  }

  inline TranslationsContainer& operator=(const TranslationsContainer& from) {
    CopyFrom(from);
    return *this;
  }
  inline TranslationsContainer& operator=(TranslationsContainer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TranslationsContainer& default_instance() {
    return *internal_default_instance();
  }
  static inline const TranslationsContainer* internal_default_instance() {
    return reinterpret_cast<const TranslationsContainer*>(
               &_TranslationsContainer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TranslationsContainer& a, TranslationsContainer& b) {
    a.Swap(&b);
  }
  inline void Swap(TranslationsContainer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TranslationsContainer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TranslationsContainer* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TranslationsContainer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TranslationsContainer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TranslationsContainer& from) {
    TranslationsContainer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TranslationsContainer* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.TranslationsContainer";
  }
  protected:
  explicit TranslationsContainer(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSectionsFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Content.TranslationSection sections = 1;
  int sections_size() const;
  private:
  int _internal_sections_size() const;

  public:
  void clear_sections() ;
  ::Digit::PrimePlatform::Content::TranslationSection* mutable_sections(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::TranslationSection >*
      mutable_sections();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::TranslationSection>& _internal_sections() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::TranslationSection>* _internal_mutable_sections();
  public:
  const ::Digit::PrimePlatform::Content::TranslationSection& sections(int index) const;
  ::Digit::PrimePlatform::Content::TranslationSection* add_sections();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::TranslationSection >&
      sections() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.TranslationsContainer)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::TranslationSection > sections_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class TranslationSection final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.TranslationSection) */ {
 public:
  inline TranslationSection() : TranslationSection(nullptr) {}
  ~TranslationSection() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TranslationSection(::google::protobuf::internal::ConstantInitialized);

  TranslationSection(const TranslationSection& from);
  TranslationSection(TranslationSection&& from) noexcept
    : TranslationSection() {
    *this = ::std::move(from);
  }

  inline TranslationSection& operator=(const TranslationSection& from) {
    CopyFrom(from);
    return *this;
  }
  inline TranslationSection& operator=(TranslationSection&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TranslationSection& default_instance() {
    return *internal_default_instance();
  }
  static inline const TranslationSection* internal_default_instance() {
    return reinterpret_cast<const TranslationSection*>(
               &_TranslationSection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TranslationSection& a, TranslationSection& b) {
    a.Swap(&b);
  }
  inline void Swap(TranslationSection* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TranslationSection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TranslationSection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TranslationSection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TranslationSection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TranslationSection& from) {
    TranslationSection::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TranslationSection* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.TranslationSection";
  }
  protected:
  explicit TranslationSection(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTranslationsFieldNumber = 3,
    kSectionFieldNumber = 1,
    kModifiedFieldNumber = 4,
    kSectionHashFieldNumber = 2,
  };
  // repeated .Digit.PrimePlatform.Content.Translation translations = 3;
  int translations_size() const;
  private:
  int _internal_translations_size() const;

  public:
  void clear_translations() ;
  ::Digit::PrimePlatform::Content::Translation* mutable_translations(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Translation >*
      mutable_translations();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Translation>& _internal_translations() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Translation>* _internal_mutable_translations();
  public:
  const ::Digit::PrimePlatform::Content::Translation& translations(int index) const;
  ::Digit::PrimePlatform::Content::Translation* add_translations();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Translation >&
      translations() const;
  // string section = 1;
  void clear_section() ;
  const std::string& section() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_section(Arg_&& arg, Args_... args);
  std::string* mutable_section();
  PROTOBUF_NODISCARD std::string* release_section();
  void set_allocated_section(std::string* ptr);

  private:
  const std::string& _internal_section() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_section(
      const std::string& value);
  std::string* _internal_mutable_section();

  public:
  // .google.protobuf.Timestamp modified = 4;
  bool has_modified() const;
  void clear_modified() ;
  const ::google::protobuf::Timestamp& modified() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_modified();
  ::google::protobuf::Timestamp* mutable_modified();
  void set_allocated_modified(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_modified(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_modified();

  private:
  const ::google::protobuf::Timestamp& _internal_modified() const;
  ::google::protobuf::Timestamp* _internal_mutable_modified();

  public:
  // int32 sectionHash = 2;
  void clear_sectionhash() ;
  ::int32_t sectionhash() const;
  void set_sectionhash(::int32_t value);

  private:
  ::int32_t _internal_sectionhash() const;
  void _internal_set_sectionhash(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.TranslationSection)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 2, 62, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Translation > translations_;
    ::google::protobuf::internal::ArenaStringPtr section_;
    ::google::protobuf::Timestamp* modified_;
    ::int32_t sectionhash_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Translation final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Translation) */ {
 public:
  inline Translation() : Translation(nullptr) {}
  ~Translation() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Translation(::google::protobuf::internal::ConstantInitialized);

  Translation(const Translation& from);
  Translation(Translation&& from) noexcept
    : Translation() {
    *this = ::std::move(from);
  }

  inline Translation& operator=(const Translation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Translation& operator=(Translation&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Translation& default_instance() {
    return *internal_default_instance();
  }
  static inline const Translation* internal_default_instance() {
    return reinterpret_cast<const Translation*>(
               &_Translation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Translation& a, Translation& b) {
    a.Swap(&b);
  }
  inline void Swap(Translation* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Translation* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Translation* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Translation>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Translation& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Translation& from) {
    Translation::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Translation* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Translation";
  }
  protected:
  explicit Translation(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kTextFieldNumber = 3,
    kIdFieldNumber = 4,
    kKeyHashFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string text = 3;
  void clear_text() ;
  const std::string& text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_text(Arg_&& arg, Args_... args);
  std::string* mutable_text();
  PROTOBUF_NODISCARD std::string* release_text();
  void set_allocated_text(std::string* ptr);

  private:
  const std::string& _internal_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_text(
      const std::string& value);
  std::string* _internal_mutable_text();

  public:
  // string id = 4;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // int32 keyHash = 2;
  void clear_keyhash() ;
  ::int32_t keyhash() const;
  void set_keyhash(::int32_t value);

  private:
  ::int32_t _internal_keyhash() const;
  void _internal_set_keyhash(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Translation)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::int32_t keyhash_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class ContentItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.ContentItem) */ {
 public:
  inline ContentItem() : ContentItem(nullptr) {}
  ~ContentItem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ContentItem(::google::protobuf::internal::ConstantInitialized);

  ContentItem(const ContentItem& from);
  ContentItem(ContentItem&& from) noexcept
    : ContentItem() {
    *this = ::std::move(from);
  }

  inline ContentItem& operator=(const ContentItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContentItem& operator=(ContentItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContentItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContentItem* internal_default_instance() {
    return reinterpret_cast<const ContentItem*>(
               &_ContentItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ContentItem& a, ContentItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ContentItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContentItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContentItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ContentItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContentItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ContentItem& from) {
    ContentItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContentItem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.ContentItem";
  }
  protected:
  explicit ContentItem(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kTypeFieldNumber = 3,
    kQuantityFieldNumber = 2,
    kLevelFieldNumber = 4,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string type = 3;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // int64 quantity = 2;
  void clear_quantity() ;
  ::int64_t quantity() const;
  void set_quantity(::int64_t value);

  private:
  ::int64_t _internal_quantity() const;
  void _internal_set_quantity(::int64_t value);

  public:
  // uint32 level = 4;
  void clear_level() ;
  ::uint32_t level() const;
  void set_level(::uint32_t value);

  private:
  ::uint32_t _internal_level() const;
  void _internal_set_level(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.ContentItem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 54, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::int64_t quantity_;
    ::uint32_t level_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Bucket final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Bucket) */ {
 public:
  inline Bucket() : Bucket(nullptr) {}
  ~Bucket() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Bucket(::google::protobuf::internal::ConstantInitialized);

  Bucket(const Bucket& from);
  Bucket(Bucket&& from) noexcept
    : Bucket() {
    *this = ::std::move(from);
  }

  inline Bucket& operator=(const Bucket& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bucket& operator=(Bucket&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Bucket& default_instance() {
    return *internal_default_instance();
  }
  static inline const Bucket* internal_default_instance() {
    return reinterpret_cast<const Bucket*>(
               &_Bucket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Bucket& a, Bucket& b) {
    a.Swap(&b);
  }
  inline void Swap(Bucket* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bucket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Bucket* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Bucket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Bucket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Bucket& from) {
    Bucket::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bucket* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Bucket";
  }
  protected:
  explicit Bucket(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransIdFieldNumber = 2,
    kArtIdFieldNumber = 3,
    kIdFieldNumber = 1,
    kSortOrderFieldNumber = 4,
  };
  // string transId = 2;
  void clear_transid() ;
  const std::string& transid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transid(Arg_&& arg, Args_... args);
  std::string* mutable_transid();
  PROTOBUF_NODISCARD std::string* release_transid();
  void set_allocated_transid(std::string* ptr);

  private:
  const std::string& _internal_transid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transid(
      const std::string& value);
  std::string* _internal_mutable_transid();

  public:
  // string artId = 3;
  void clear_artid() ;
  const std::string& artid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_artid(Arg_&& arg, Args_... args);
  std::string* mutable_artid();
  PROTOBUF_NODISCARD std::string* release_artid();
  void set_allocated_artid(std::string* ptr);

  private:
  const std::string& _internal_artid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_artid(
      const std::string& value);
  std::string* _internal_mutable_artid();

  public:
  // int64 id = 1;
  void clear_id() ;
  ::int64_t id() const;
  void set_id(::int64_t value);

  private:
  ::int64_t _internal_id() const;
  void _internal_set_id(::int64_t value);

  public:
  // int64 sortOrder = 4;
  void clear_sortorder() ;
  ::int64_t sortorder() const;
  void set_sortorder(::int64_t value);

  private:
  ::int64_t _internal_sortorder() const;
  void _internal_set_sortorder(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Bucket)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr transid_;
    ::google::protobuf::internal::ArenaStringPtr artid_;
    ::int64_t id_;
    ::int64_t sortorder_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class BundleContent final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.BundleContent) */ {
 public:
  inline BundleContent() : BundleContent(nullptr) {}
  ~BundleContent() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BundleContent(::google::protobuf::internal::ConstantInitialized);

  BundleContent(const BundleContent& from);
  BundleContent(BundleContent&& from) noexcept
    : BundleContent() {
    *this = ::std::move(from);
  }

  inline BundleContent& operator=(const BundleContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline BundleContent& operator=(BundleContent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BundleContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const BundleContent* internal_default_instance() {
    return reinterpret_cast<const BundleContent*>(
               &_BundleContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(BundleContent& a, BundleContent& b) {
    a.Swap(&b);
  }
  inline void Swap(BundleContent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BundleContent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BundleContent* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BundleContent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BundleContent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BundleContent& from) {
    BundleContent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BundleContent* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.BundleContent";
  }
  protected:
  explicit BundleContent(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDynamicFieldNumber = 1,
    kGiftsFieldNumber = 2,
    kShowcaseFieldNumber = 3,
    kStaticFieldNumber = 4,
    kMultipliedFieldNumber = 5,
  };
  // repeated .Digit.PrimePlatform.Content.ContentItemList dynamic = 1;
  int dynamic_size() const;
  private:
  int _internal_dynamic_size() const;

  public:
  void clear_dynamic() ;
  ::Digit::PrimePlatform::Content::ContentItemList* mutable_dynamic(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItemList >*
      mutable_dynamic();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItemList>& _internal_dynamic() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItemList>* _internal_mutable_dynamic();
  public:
  const ::Digit::PrimePlatform::Content::ContentItemList& dynamic(int index) const;
  ::Digit::PrimePlatform::Content::ContentItemList* add_dynamic();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItemList >&
      dynamic() const;
  // .Digit.PrimePlatform.Content.ContentItemList gifts = 2;
  bool has_gifts() const;
  void clear_gifts() ;
  const ::Digit::PrimePlatform::Content::ContentItemList& gifts() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::ContentItemList* release_gifts();
  ::Digit::PrimePlatform::Content::ContentItemList* mutable_gifts();
  void set_allocated_gifts(::Digit::PrimePlatform::Content::ContentItemList* value);
  void unsafe_arena_set_allocated_gifts(::Digit::PrimePlatform::Content::ContentItemList* value);
  ::Digit::PrimePlatform::Content::ContentItemList* unsafe_arena_release_gifts();

  private:
  const ::Digit::PrimePlatform::Content::ContentItemList& _internal_gifts() const;
  ::Digit::PrimePlatform::Content::ContentItemList* _internal_mutable_gifts();

  public:
  // .Digit.PrimePlatform.Content.ContentItemList showcase = 3;
  bool has_showcase() const;
  void clear_showcase() ;
  const ::Digit::PrimePlatform::Content::ContentItemList& showcase() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::ContentItemList* release_showcase();
  ::Digit::PrimePlatform::Content::ContentItemList* mutable_showcase();
  void set_allocated_showcase(::Digit::PrimePlatform::Content::ContentItemList* value);
  void unsafe_arena_set_allocated_showcase(::Digit::PrimePlatform::Content::ContentItemList* value);
  ::Digit::PrimePlatform::Content::ContentItemList* unsafe_arena_release_showcase();

  private:
  const ::Digit::PrimePlatform::Content::ContentItemList& _internal_showcase() const;
  ::Digit::PrimePlatform::Content::ContentItemList* _internal_mutable_showcase();

  public:
  // .Digit.PrimePlatform.Content.ContentItemList static = 4;
  bool has_static_() const;
  void clear_static_() ;
  const ::Digit::PrimePlatform::Content::ContentItemList& static_() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::ContentItemList* release_static_();
  ::Digit::PrimePlatform::Content::ContentItemList* mutable_static_();
  void set_allocated_static_(::Digit::PrimePlatform::Content::ContentItemList* value);
  void unsafe_arena_set_allocated_static_(::Digit::PrimePlatform::Content::ContentItemList* value);
  ::Digit::PrimePlatform::Content::ContentItemList* unsafe_arena_release_static_();

  private:
  const ::Digit::PrimePlatform::Content::ContentItemList& _internal_static_() const;
  ::Digit::PrimePlatform::Content::ContentItemList* _internal_mutable_static_();

  public:
  // .Digit.PrimePlatform.Content.ContentItemList multiplied = 5;
  bool has_multiplied() const;
  void clear_multiplied() ;
  const ::Digit::PrimePlatform::Content::ContentItemList& multiplied() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::ContentItemList* release_multiplied();
  ::Digit::PrimePlatform::Content::ContentItemList* mutable_multiplied();
  void set_allocated_multiplied(::Digit::PrimePlatform::Content::ContentItemList* value);
  void unsafe_arena_set_allocated_multiplied(::Digit::PrimePlatform::Content::ContentItemList* value);
  ::Digit::PrimePlatform::Content::ContentItemList* unsafe_arena_release_multiplied();

  private:
  const ::Digit::PrimePlatform::Content::ContentItemList& _internal_multiplied() const;
  ::Digit::PrimePlatform::Content::ContentItemList* _internal_mutable_multiplied();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.BundleContent)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 5, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItemList > dynamic_;
    ::Digit::PrimePlatform::Content::ContentItemList* gifts_;
    ::Digit::PrimePlatform::Content::ContentItemList* showcase_;
    ::Digit::PrimePlatform::Content::ContentItemList* static__;
    ::Digit::PrimePlatform::Content::ContentItemList* multiplied_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class ContentItemList final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.ContentItemList) */ {
 public:
  inline ContentItemList() : ContentItemList(nullptr) {}
  ~ContentItemList() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ContentItemList(::google::protobuf::internal::ConstantInitialized);

  ContentItemList(const ContentItemList& from);
  ContentItemList(ContentItemList&& from) noexcept
    : ContentItemList() {
    *this = ::std::move(from);
  }

  inline ContentItemList& operator=(const ContentItemList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContentItemList& operator=(ContentItemList&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ContentItemList& default_instance() {
    return *internal_default_instance();
  }
  static inline const ContentItemList* internal_default_instance() {
    return reinterpret_cast<const ContentItemList*>(
               &_ContentItemList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ContentItemList& a, ContentItemList& b) {
    a.Swap(&b);
  }
  inline void Swap(ContentItemList* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ContentItemList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ContentItemList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ContentItemList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ContentItemList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ContentItemList& from) {
    ContentItemList::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContentItemList* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.ContentItemList";
  }
  protected:
  explicit ContentItemList(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Content.ContentItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::Digit::PrimePlatform::Content::ContentItem* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItem >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItem>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItem>* _internal_mutable_items();
  public:
  const ::Digit::PrimePlatform::Content::ContentItem& items(int index) const;
  ::Digit::PrimePlatform::Content::ContentItem* add_items();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItem >&
      items() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.ContentItemList)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItem > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Order final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Order) */ {
 public:
  inline Order() : Order(nullptr) {}
  ~Order() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Order(::google::protobuf::internal::ConstantInitialized);

  Order(const Order& from);
  Order(Order&& from) noexcept
    : Order() {
    *this = ::std::move(from);
  }

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }
  inline Order& operator=(Order&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Order& default_instance() {
    return *internal_default_instance();
  }
  static inline const Order* internal_default_instance() {
    return reinterpret_cast<const Order*>(
               &_Order_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Order& a, Order& b) {
    a.Swap(&b);
  }
  inline void Swap(Order* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Order* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Order* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Order>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Order& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Order& from) {
    Order::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Order* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Order";
  }
  protected:
  explicit Order(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderItemsFieldNumber = 3,
    kOrderIdFieldNumber = 1,
    kCreatedFieldNumber = 2,
  };
  // repeated .Digit.PrimePlatform.Content.OrderItem orderItems = 3;
  int orderitems_size() const;
  private:
  int _internal_orderitems_size() const;

  public:
  void clear_orderitems() ;
  ::Digit::PrimePlatform::Content::OrderItem* mutable_orderitems(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::OrderItem >*
      mutable_orderitems();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::OrderItem>& _internal_orderitems() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::OrderItem>* _internal_mutable_orderitems();
  public:
  const ::Digit::PrimePlatform::Content::OrderItem& orderitems(int index) const;
  ::Digit::PrimePlatform::Content::OrderItem* add_orderitems();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::OrderItem >&
      orderitems() const;
  // string orderId = 1;
  void clear_orderid() ;
  const std::string& orderid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_orderid(Arg_&& arg, Args_... args);
  std::string* mutable_orderid();
  PROTOBUF_NODISCARD std::string* release_orderid();
  void set_allocated_orderid(std::string* ptr);

  private:
  const std::string& _internal_orderid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_orderid(
      const std::string& value);
  std::string* _internal_mutable_orderid();

  public:
  // .google.protobuf.Timestamp created = 2;
  bool has_created() const;
  void clear_created() ;
  const ::google::protobuf::Timestamp& created() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created();
  ::google::protobuf::Timestamp* mutable_created();
  void set_allocated_created(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created();

  private:
  const ::google::protobuf::Timestamp& _internal_created() const;
  ::google::protobuf::Timestamp* _internal_mutable_created();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Order)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 49, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::OrderItem > orderitems_;
    ::google::protobuf::internal::ArenaStringPtr orderid_;
    ::google::protobuf::Timestamp* created_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class OrderItem final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.OrderItem) */ {
 public:
  inline OrderItem() : OrderItem(nullptr) {}
  ~OrderItem() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OrderItem(::google::protobuf::internal::ConstantInitialized);

  OrderItem(const OrderItem& from);
  OrderItem(OrderItem&& from) noexcept
    : OrderItem() {
    *this = ::std::move(from);
  }

  inline OrderItem& operator=(const OrderItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderItem& operator=(OrderItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderItem* internal_default_instance() {
    return reinterpret_cast<const OrderItem*>(
               &_OrderItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(OrderItem& a, OrderItem& b) {
    a.Swap(&b);
  }
  inline void Swap(OrderItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderItem* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderItem* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OrderItem>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderItem& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OrderItem& from) {
    OrderItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OrderItem* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.OrderItem";
  }
  protected:
  explicit OrderItem(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentFieldNumber = 3,
    kBundleIdFieldNumber = 1,
    kBundleVersionFieldNumber = 2,
  };
  // .Digit.PrimePlatform.Content.BundleContent content = 3;
  bool has_content() const;
  void clear_content() ;
  const ::Digit::PrimePlatform::Content::BundleContent& content() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::BundleContent* release_content();
  ::Digit::PrimePlatform::Content::BundleContent* mutable_content();
  void set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value);
  void unsafe_arena_set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value);
  ::Digit::PrimePlatform::Content::BundleContent* unsafe_arena_release_content();

  private:
  const ::Digit::PrimePlatform::Content::BundleContent& _internal_content() const;
  ::Digit::PrimePlatform::Content::BundleContent* _internal_mutable_content();

  public:
  // uint32 bundleId = 1;
  void clear_bundleid() ;
  ::uint32_t bundleid() const;
  void set_bundleid(::uint32_t value);

  private:
  ::uint32_t _internal_bundleid() const;
  void _internal_set_bundleid(::uint32_t value);

  public:
  // uint32 bundleVersion = 2;
  void clear_bundleversion() ;
  ::uint32_t bundleversion() const;
  void set_bundleversion(::uint32_t value);

  private:
  ::uint32_t _internal_bundleversion() const;
  void _internal_set_bundleversion(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.OrderItem)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::Digit::PrimePlatform::Content::BundleContent* content_;
    ::uint32_t bundleid_;
    ::uint32_t bundleversion_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Bundles final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Bundles) */ {
 public:
  inline Bundles() : Bundles(nullptr) {}
  ~Bundles() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Bundles(::google::protobuf::internal::ConstantInitialized);

  Bundles(const Bundles& from);
  Bundles(Bundles&& from) noexcept
    : Bundles() {
    *this = ::std::move(from);
  }

  inline Bundles& operator=(const Bundles& from) {
    CopyFrom(from);
    return *this;
  }
  inline Bundles& operator=(Bundles&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Bundles& default_instance() {
    return *internal_default_instance();
  }
  static inline const Bundles* internal_default_instance() {
    return reinterpret_cast<const Bundles*>(
               &_Bundles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Bundles& a, Bundles& b) {
    a.Swap(&b);
  }
  inline void Swap(Bundles* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Bundles* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Bundles* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Bundles>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Bundles& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Bundles& from) {
    Bundles::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Bundles* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Bundles";
  }
  protected:
  explicit Bundles(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBundlesFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Content.Bundle bundles_ = 1;
  int bundles__size() const;
  private:
  int _internal_bundles__size() const;

  public:
  void clear_bundles_() ;
  ::Digit::PrimePlatform::Content::Bundle* mutable_bundles_(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Bundle >*
      mutable_bundles_();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Bundle>& _internal_bundles_() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Bundle>* _internal_mutable_bundles_();
  public:
  const ::Digit::PrimePlatform::Content::Bundle& bundles_(int index) const;
  ::Digit::PrimePlatform::Content::Bundle* add_bundles_();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Bundle >&
      bundles_() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Bundles)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Bundle > bundles__;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Cost final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Cost) */ {
 public:
  inline Cost() : Cost(nullptr) {}
  ~Cost() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Cost(::google::protobuf::internal::ConstantInitialized);

  Cost(const Cost& from);
  Cost(Cost&& from) noexcept
    : Cost() {
    *this = ::std::move(from);
  }

  inline Cost& operator=(const Cost& from) {
    CopyFrom(from);
    return *this;
  }
  inline Cost& operator=(Cost&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Cost& default_instance() {
    return *internal_default_instance();
  }
  static inline const Cost* internal_default_instance() {
    return reinterpret_cast<const Cost*>(
               &_Cost_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(Cost& a, Cost& b) {
    a.Swap(&b);
  }
  inline void Swap(Cost* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Cost* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Cost* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Cost>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Cost& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Cost& from) {
    Cost::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Cost* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Cost";
  }
  protected:
  explicit Cost(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCostFieldNumber = 1,
    kQuantityFieldNumber = 2,
  };
  // repeated .Digit.PrimePlatform.Content.Resource cost_ = 1;
  int cost__size() const;
  private:
  int _internal_cost__size() const;

  public:
  void clear_cost_() ;
  ::Digit::PrimePlatform::Content::Resource* mutable_cost_(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >*
      mutable_cost_();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>& _internal_cost_() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>* _internal_mutable_cost_();
  public:
  const ::Digit::PrimePlatform::Content::Resource& cost_(int index) const;
  ::Digit::PrimePlatform::Content::Resource* add_cost_();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >&
      cost_() const;
  // uint32 quantity = 2;
  void clear_quantity() ;
  ::uint32_t quantity() const;
  void set_quantity(::uint32_t value);

  private:
  ::uint32_t _internal_quantity() const;
  void _internal_set_quantity(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Cost)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource > cost__;
    ::uint32_t quantity_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Resource final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Resource) */ {
 public:
  inline Resource() : Resource(nullptr) {}
  ~Resource() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Resource(::google::protobuf::internal::ConstantInitialized);

  Resource(const Resource& from);
  Resource(Resource&& from) noexcept
    : Resource() {
    *this = ::std::move(from);
  }

  inline Resource& operator=(const Resource& from) {
    CopyFrom(from);
    return *this;
  }
  inline Resource& operator=(Resource&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Resource& default_instance() {
    return *internal_default_instance();
  }
  static inline const Resource* internal_default_instance() {
    return reinterpret_cast<const Resource*>(
               &_Resource_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(Resource& a, Resource& b) {
    a.Swap(&b);
  }
  inline void Swap(Resource* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Resource* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Resource* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Resource>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Resource& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Resource& from) {
    Resource::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Resource* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Resource";
  }
  protected:
  explicit Resource(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 3,
    kTypeFieldNumber = 4,
    kAmountFieldNumber = 1,
    kAmountOldFieldNumber = 2,
    kAmountUlongFieldNumber = 6,
    kUnavailableDisplayModeFieldNumber = 5,
  };
  // string id = 3;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string type = 4;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // uint32 amount = 1;
  void clear_amount() ;
  ::uint32_t amount() const;
  void set_amount(::uint32_t value);

  private:
  ::uint32_t _internal_amount() const;
  void _internal_set_amount(::uint32_t value);

  public:
  // uint32 amountOld = 2;
  void clear_amountold() ;
  ::uint32_t amountold() const;
  void set_amountold(::uint32_t value);

  private:
  ::uint32_t _internal_amountold() const;
  void _internal_set_amountold(::uint32_t value);

  public:
  // uint64 amountUlong = 6;
  void clear_amountulong() ;
  ::uint64_t amountulong() const;
  void set_amountulong(::uint64_t value);

  private:
  ::uint64_t _internal_amountulong() const;
  void _internal_set_amountulong(::uint64_t value);

  public:
  // int32 unavailableDisplayMode = 5;
  void clear_unavailabledisplaymode() ;
  ::int32_t unavailabledisplaymode() const;
  void set_unavailabledisplaymode(::int32_t value);

  private:
  ::int32_t _internal_unavailabledisplaymode() const;
  void _internal_set_unavailabledisplaymode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Resource)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 0, 51, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::uint32_t amount_;
    ::uint32_t amountold_;
    ::uint64_t amountulong_;
    ::int32_t unavailabledisplaymode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Metadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Metadata) */ {
 public:
  inline Metadata() : Metadata(nullptr) {}
  ~Metadata() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Metadata(::google::protobuf::internal::ConstantInitialized);

  Metadata(const Metadata& from);
  Metadata(Metadata&& from) noexcept
    : Metadata() {
    *this = ::std::move(from);
  }

  inline Metadata& operator=(const Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline Metadata& operator=(Metadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Metadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const Metadata* internal_default_instance() {
    return reinterpret_cast<const Metadata*>(
               &_Metadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Metadata& a, Metadata& b) {
    a.Swap(&b);
  }
  inline void Swap(Metadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Metadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Metadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Metadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Metadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Metadata& from) {
    Metadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Metadata* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Metadata";
  }
  protected:
  explicit Metadata(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColorFieldNumber = 1,
    kAssetIdFieldNumber = 2,
    kAssetFilenameFieldNumber = 3,
    kIconAssetFilenameFieldNumber = 4,
    kBundleMultiplierFieldNumber = 6,
    kBucketFieldNumber = 5,
    kSecondaryBundleIdFieldNumber = 7,
    kAnimationOnClaimTypeFieldNumber = 8,
    kSkipOnClaimAllFieldNumber = 9,
  };
  // string color = 1;
  void clear_color() ;
  const std::string& color() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_color(Arg_&& arg, Args_... args);
  std::string* mutable_color();
  PROTOBUF_NODISCARD std::string* release_color();
  void set_allocated_color(std::string* ptr);

  private:
  const std::string& _internal_color() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_color(
      const std::string& value);
  std::string* _internal_mutable_color();

  public:
  // string assetId = 2;
  void clear_assetid() ;
  const std::string& assetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_assetid(Arg_&& arg, Args_... args);
  std::string* mutable_assetid();
  PROTOBUF_NODISCARD std::string* release_assetid();
  void set_allocated_assetid(std::string* ptr);

  private:
  const std::string& _internal_assetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_assetid(
      const std::string& value);
  std::string* _internal_mutable_assetid();

  public:
  // string assetFilename = 3;
  void clear_assetfilename() ;
  const std::string& assetfilename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_assetfilename(Arg_&& arg, Args_... args);
  std::string* mutable_assetfilename();
  PROTOBUF_NODISCARD std::string* release_assetfilename();
  void set_allocated_assetfilename(std::string* ptr);

  private:
  const std::string& _internal_assetfilename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_assetfilename(
      const std::string& value);
  std::string* _internal_mutable_assetfilename();

  public:
  // string iconAssetFilename = 4;
  void clear_iconassetfilename() ;
  const std::string& iconassetfilename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_iconassetfilename(Arg_&& arg, Args_... args);
  std::string* mutable_iconassetfilename();
  PROTOBUF_NODISCARD std::string* release_iconassetfilename();
  void set_allocated_iconassetfilename(std::string* ptr);

  private:
  const std::string& _internal_iconassetfilename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_iconassetfilename(
      const std::string& value);
  std::string* _internal_mutable_iconassetfilename();

  public:
  // string bundleMultiplier = 6;
  void clear_bundlemultiplier() ;
  const std::string& bundlemultiplier() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bundlemultiplier(Arg_&& arg, Args_... args);
  std::string* mutable_bundlemultiplier();
  PROTOBUF_NODISCARD std::string* release_bundlemultiplier();
  void set_allocated_bundlemultiplier(std::string* ptr);

  private:
  const std::string& _internal_bundlemultiplier() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bundlemultiplier(
      const std::string& value);
  std::string* _internal_mutable_bundlemultiplier();

  public:
  // .Digit.PrimePlatform.Content.Bucket bucket = 5;
  bool has_bucket() const;
  void clear_bucket() ;
  const ::Digit::PrimePlatform::Content::Bucket& bucket() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::Bucket* release_bucket();
  ::Digit::PrimePlatform::Content::Bucket* mutable_bucket();
  void set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value);
  void unsafe_arena_set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value);
  ::Digit::PrimePlatform::Content::Bucket* unsafe_arena_release_bucket();

  private:
  const ::Digit::PrimePlatform::Content::Bucket& _internal_bucket() const;
  ::Digit::PrimePlatform::Content::Bucket* _internal_mutable_bucket();

  public:
  // int64 secondaryBundleId = 7;
  void clear_secondarybundleid() ;
  ::int64_t secondarybundleid() const;
  void set_secondarybundleid(::int64_t value);

  private:
  ::int64_t _internal_secondarybundleid() const;
  void _internal_set_secondarybundleid(::int64_t value);

  public:
  // .Digit.PrimePlatform.Content.AnimationOnClaimType animationOnClaimType = 8;
  void clear_animationonclaimtype() ;
  ::Digit::PrimePlatform::Content::AnimationOnClaimType animationonclaimtype() const;
  void set_animationonclaimtype(::Digit::PrimePlatform::Content::AnimationOnClaimType value);

  private:
  ::Digit::PrimePlatform::Content::AnimationOnClaimType _internal_animationonclaimtype() const;
  void _internal_set_animationonclaimtype(::Digit::PrimePlatform::Content::AnimationOnClaimType value);

  public:
  // bool skipOnClaimAll = 9;
  void clear_skiponclaimall() ;
  bool skiponclaimall() const;
  void set_skiponclaimall(bool value);

  private:
  bool _internal_skiponclaimall() const;
  void _internal_set_skiponclaimall(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Metadata)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9, 1, 111, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr color_;
    ::google::protobuf::internal::ArenaStringPtr assetid_;
    ::google::protobuf::internal::ArenaStringPtr assetfilename_;
    ::google::protobuf::internal::ArenaStringPtr iconassetfilename_;
    ::google::protobuf::internal::ArenaStringPtr bundlemultiplier_;
    ::Digit::PrimePlatform::Content::Bucket* bucket_;
    ::int64_t secondarybundleid_;
    int animationonclaimtype_;
    bool skiponclaimall_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Hinting_TranslationKey final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Hinting.TranslationKey) */ {
 public:
  inline Hinting_TranslationKey() : Hinting_TranslationKey(nullptr) {}
  ~Hinting_TranslationKey() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Hinting_TranslationKey(::google::protobuf::internal::ConstantInitialized);

  Hinting_TranslationKey(const Hinting_TranslationKey& from);
  Hinting_TranslationKey(Hinting_TranslationKey&& from) noexcept
    : Hinting_TranslationKey() {
    *this = ::std::move(from);
  }

  inline Hinting_TranslationKey& operator=(const Hinting_TranslationKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline Hinting_TranslationKey& operator=(Hinting_TranslationKey&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Hinting_TranslationKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const Hinting_TranslationKey* internal_default_instance() {
    return reinterpret_cast<const Hinting_TranslationKey*>(
               &_Hinting_TranslationKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(Hinting_TranslationKey& a, Hinting_TranslationKey& b) {
    a.Swap(&b);
  }
  inline void Swap(Hinting_TranslationKey* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Hinting_TranslationKey* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Hinting_TranslationKey* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Hinting_TranslationKey>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Hinting_TranslationKey& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Hinting_TranslationKey& from) {
    Hinting_TranslationKey::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Hinting_TranslationKey* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Hinting.TranslationKey";
  }
  protected:
  explicit Hinting_TranslationKey(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldFieldNumber = 1,
    kIsTranslatedFieldNumber = 2,
  };
  // string field = 1;
  void clear_field() ;
  const std::string& field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_field(Arg_&& arg, Args_... args);
  std::string* mutable_field();
  PROTOBUF_NODISCARD std::string* release_field();
  void set_allocated_field(std::string* ptr);

  private:
  const std::string& _internal_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_field(
      const std::string& value);
  std::string* _internal_mutable_field();

  public:
  // bool isTranslated = 2;
  void clear_istranslated() ;
  bool istranslated() const;
  void set_istranslated(bool value);

  private:
  bool _internal_istranslated() const;
  void _internal_set_istranslated(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Hinting.TranslationKey)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 64, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr field_;
    bool istranslated_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class Hinting final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.Hinting) */ {
 public:
  inline Hinting() : Hinting(nullptr) {}
  ~Hinting() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Hinting(::google::protobuf::internal::ConstantInitialized);

  Hinting(const Hinting& from);
  Hinting(Hinting&& from) noexcept
    : Hinting() {
    *this = ::std::move(from);
  }

  inline Hinting& operator=(const Hinting& from) {
    CopyFrom(from);
    return *this;
  }
  inline Hinting& operator=(Hinting&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Hinting& default_instance() {
    return *internal_default_instance();
  }
  static inline const Hinting* internal_default_instance() {
    return reinterpret_cast<const Hinting*>(
               &_Hinting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Hinting& a, Hinting& b) {
    a.Swap(&b);
  }
  inline void Swap(Hinting* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Hinting* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Hinting* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Hinting>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Hinting& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Hinting& from) {
    Hinting::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Hinting* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.Hinting";
  }
  protected:
  explicit Hinting(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Hinting_TranslationKey TranslationKey;

  // accessors -------------------------------------------------------

  enum : int {
    kTranslationKeysFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Content.Hinting.TranslationKey translationKeys = 1;
  int translationkeys_size() const;
  private:
  int _internal_translationkeys_size() const;

  public:
  void clear_translationkeys() ;
  ::Digit::PrimePlatform::Content::Hinting_TranslationKey* mutable_translationkeys(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Hinting_TranslationKey >*
      mutable_translationkeys();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Hinting_TranslationKey>& _internal_translationkeys() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Hinting_TranslationKey>* _internal_mutable_translationkeys();
  public:
  const ::Digit::PrimePlatform::Content::Hinting_TranslationKey& translationkeys(int index) const;
  ::Digit::PrimePlatform::Content::Hinting_TranslationKey* add_translationkeys();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Hinting_TranslationKey >&
      translationkeys() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.Hinting)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Hinting_TranslationKey > translationkeys_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};// -------------------------------------------------------------------

class OfferDetails final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Content.OfferDetails) */ {
 public:
  inline OfferDetails() : OfferDetails(nullptr) {}
  ~OfferDetails() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR OfferDetails(::google::protobuf::internal::ConstantInitialized);

  OfferDetails(const OfferDetails& from);
  OfferDetails(OfferDetails&& from) noexcept
    : OfferDetails() {
    *this = ::std::move(from);
  }

  inline OfferDetails& operator=(const OfferDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline OfferDetails& operator=(OfferDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OfferDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const OfferDetails* internal_default_instance() {
    return reinterpret_cast<const OfferDetails*>(
               &_OfferDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(OfferDetails& a, OfferDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(OfferDetails* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OfferDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OfferDetails* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<OfferDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OfferDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const OfferDetails& from) {
    OfferDetails::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OfferDetails* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Content.OfferDetails";
  }
  protected:
  explicit OfferDetails(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBonusLabelFieldNumber = 1,
    kBonusValueFieldNumber = 2,
    kValidFromTimestampFieldNumber = 4,
    kValidUntilTimestampFieldNumber = 5,
    kValidCountFieldNumber = 3,
    kSameRemainingCountFieldNumber = 6,
    kSameRemainingCountVisibleFieldNumber = 7,
  };
  // string bonusLabel = 1;
  void clear_bonuslabel() ;
  const std::string& bonuslabel() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bonuslabel(Arg_&& arg, Args_... args);
  std::string* mutable_bonuslabel();
  PROTOBUF_NODISCARD std::string* release_bonuslabel();
  void set_allocated_bonuslabel(std::string* ptr);

  private:
  const std::string& _internal_bonuslabel() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bonuslabel(
      const std::string& value);
  std::string* _internal_mutable_bonuslabel();

  public:
  // string bonusValue = 2;
  void clear_bonusvalue() ;
  const std::string& bonusvalue() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bonusvalue(Arg_&& arg, Args_... args);
  std::string* mutable_bonusvalue();
  PROTOBUF_NODISCARD std::string* release_bonusvalue();
  void set_allocated_bonusvalue(std::string* ptr);

  private:
  const std::string& _internal_bonusvalue() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bonusvalue(
      const std::string& value);
  std::string* _internal_mutable_bonusvalue();

  public:
  // .google.protobuf.Timestamp validFromTimestamp = 4;
  bool has_validfromtimestamp() const;
  void clear_validfromtimestamp() ;
  const ::google::protobuf::Timestamp& validfromtimestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_validfromtimestamp();
  ::google::protobuf::Timestamp* mutable_validfromtimestamp();
  void set_allocated_validfromtimestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_validfromtimestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_validfromtimestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_validfromtimestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_validfromtimestamp();

  public:
  // .google.protobuf.Timestamp validUntilTimestamp = 5;
  bool has_validuntiltimestamp() const;
  void clear_validuntiltimestamp() ;
  const ::google::protobuf::Timestamp& validuntiltimestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_validuntiltimestamp();
  ::google::protobuf::Timestamp* mutable_validuntiltimestamp();
  void set_allocated_validuntiltimestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_validuntiltimestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_validuntiltimestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_validuntiltimestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_validuntiltimestamp();

  public:
  // int32 validCount = 3;
  void clear_validcount() ;
  ::int32_t validcount() const;
  void set_validcount(::int32_t value);

  private:
  ::int32_t _internal_validcount() const;
  void _internal_set_validcount(::int32_t value);

  public:
  // int32 sameRemainingCount = 6;
  void clear_sameremainingcount() ;
  ::int32_t sameremainingcount() const;
  void set_sameremainingcount(::int32_t value);

  private:
  ::int32_t _internal_sameremainingcount() const;
  void _internal_set_sameremainingcount(::int32_t value);

  public:
  // bool sameRemainingCountVisible = 7;
  void clear_sameremainingcountvisible() ;
  bool sameremainingcountvisible() const;
  void set_sameremainingcountvisible(bool value);

  private:
  bool _internal_sameremainingcountvisible() const;
  void _internal_set_sameremainingcountvisible(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Content.OfferDetails)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 2, 69, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr bonuslabel_;
    ::google::protobuf::internal::ArenaStringPtr bonusvalue_;
    ::google::protobuf::Timestamp* validfromtimestamp_;
    ::google::protobuf::Timestamp* validuntiltimestamp_;
    ::int32_t validcount_;
    ::int32_t sameremainingcount_;
    bool sameremainingcountvisible_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eContent_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Bundle

// int64 bundleId = 1;
inline void Bundle::clear_bundleid() {
  _impl_.bundleid_ = ::int64_t{0};
}
inline ::int64_t Bundle::bundleid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.bundleId)
  return _internal_bundleid();
}
inline void Bundle::set_bundleid(::int64_t value) {
  _internal_set_bundleid(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.bundleId)
}
inline ::int64_t Bundle::_internal_bundleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bundleid_;
}
inline void Bundle::_internal_set_bundleid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bundleid_ = value;
}

// string bundleTypeString = 2;
inline void Bundle::clear_bundletypestring() {
  _impl_.bundletypestring_.ClearToEmpty();
}
inline const std::string& Bundle::bundletypestring() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.bundleTypeString)
  return _internal_bundletypestring();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Bundle::set_bundletypestring(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bundletypestring_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.bundleTypeString)
}
inline std::string* Bundle::mutable_bundletypestring() {
  std::string* _s = _internal_mutable_bundletypestring();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.bundleTypeString)
  return _s;
}
inline const std::string& Bundle::_internal_bundletypestring() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bundletypestring_.Get();
}
inline void Bundle::_internal_set_bundletypestring(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bundletypestring_.Set(value, GetArenaForAllocation());
}
inline std::string* Bundle::_internal_mutable_bundletypestring() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bundletypestring_.Mutable( GetArenaForAllocation());
}
inline std::string* Bundle::release_bundletypestring() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.bundleTypeString)
  return _impl_.bundletypestring_.Release();
}
inline void Bundle::set_allocated_bundletypestring(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bundletypestring_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bundletypestring_.IsDefault()) {
          _impl_.bundletypestring_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.bundleTypeString)
}

// uint32 priority = 3;
inline void Bundle::clear_priority() {
  _impl_.priority_ = 0u;
}
inline ::uint32_t Bundle::priority() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.priority)
  return _internal_priority();
}
inline void Bundle::set_priority(::uint32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.priority)
}
inline ::uint32_t Bundle::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void Bundle::_internal_set_priority(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// uint32 sortOrder = 4;
inline void Bundle::clear_sortorder() {
  _impl_.sortorder_ = 0u;
}
inline ::uint32_t Bundle::sortorder() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.sortOrder)
  return _internal_sortorder();
}
inline void Bundle::set_sortorder(::uint32_t value) {
  _internal_set_sortorder(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.sortOrder)
}
inline ::uint32_t Bundle::_internal_sortorder() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sortorder_;
}
inline void Bundle::_internal_set_sortorder(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sortorder_ = value;
}

// bool isSpecial = 5;
inline void Bundle::clear_isspecial() {
  _impl_.isspecial_ = false;
}
inline bool Bundle::isspecial() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.isSpecial)
  return _internal_isspecial();
}
inline void Bundle::set_isspecial(bool value) {
  _internal_set_isspecial(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.isSpecial)
}
inline bool Bundle::_internal_isspecial() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isspecial_;
}
inline void Bundle::_internal_set_isspecial(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isspecial_ = value;
}

// repeated .Digit.PrimePlatform.Content.Cost cost = 6;
inline int Bundle::_internal_cost_size() const {
  return _internal_cost().size();
}
inline int Bundle::cost_size() const {
  return _internal_cost_size();
}
inline void Bundle::clear_cost() {
  _internal_mutable_cost()->Clear();
}
inline ::Digit::PrimePlatform::Content::Cost* Bundle::mutable_cost(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.cost)
  return _internal_mutable_cost()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Cost >*
Bundle::mutable_cost() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.Bundle.cost)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cost();
}
inline const ::Digit::PrimePlatform::Content::Cost& Bundle::cost(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.cost)
    return _internal_cost().Get(index);
}
inline ::Digit::PrimePlatform::Content::Cost* Bundle::add_cost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::Cost* _add = _internal_mutable_cost()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.Bundle.cost)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Cost >&
Bundle::cost() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.Bundle.cost)
  return _internal_cost();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Cost>&
Bundle::_internal_cost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cost_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Cost>*
Bundle::_internal_mutable_cost() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cost_;
}

// repeated .Digit.PrimePlatform.Content.Resource requirements = 7;
inline int Bundle::_internal_requirements_size() const {
  return _internal_requirements().size();
}
inline int Bundle::requirements_size() const {
  return _internal_requirements_size();
}
inline void Bundle::clear_requirements() {
  _internal_mutable_requirements()->Clear();
}
inline ::Digit::PrimePlatform::Content::Resource* Bundle::mutable_requirements(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.requirements)
  return _internal_mutable_requirements()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >*
Bundle::mutable_requirements() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.Bundle.requirements)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_requirements();
}
inline const ::Digit::PrimePlatform::Content::Resource& Bundle::requirements(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.requirements)
    return _internal_requirements().Get(index);
}
inline ::Digit::PrimePlatform::Content::Resource* Bundle::add_requirements() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::Resource* _add = _internal_mutable_requirements()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.Bundle.requirements)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >&
Bundle::requirements() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.Bundle.requirements)
  return _internal_requirements();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>&
Bundle::_internal_requirements() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.requirements_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>*
Bundle::_internal_mutable_requirements() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.requirements_;
}

// string category = 8;
inline void Bundle::clear_category() {
  _impl_.category_.ClearToEmpty();
}
inline const std::string& Bundle::category() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Bundle::set_category(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.category)
}
inline std::string* Bundle::mutable_category() {
  std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.category)
  return _s;
}
inline const std::string& Bundle::_internal_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.category_.Get();
}
inline void Bundle::_internal_set_category(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_.Set(value, GetArenaForAllocation());
}
inline std::string* Bundle::_internal_mutable_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.category_.Mutable( GetArenaForAllocation());
}
inline std::string* Bundle::release_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.category)
  return _impl_.category_.Release();
}
inline void Bundle::set_allocated_category(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.category_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.category_.IsDefault()) {
          _impl_.category_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.category)
}

// .Digit.PrimePlatform.Content.Metadata metadata = 9;
inline bool Bundle::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void Bundle::clear_metadata() {
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Content::Metadata& Bundle::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::Metadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::Metadata&>(::Digit::PrimePlatform::Content::_Metadata_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::Metadata& Bundle::metadata() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.metadata)
  return _internal_metadata();
}
inline void Bundle::unsafe_arena_set_allocated_metadata(::Digit::PrimePlatform::Content::Metadata* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Content::Metadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.Bundle.metadata)
}
inline ::Digit::PrimePlatform::Content::Metadata* Bundle::release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::Metadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::Metadata* Bundle::unsafe_arena_release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.metadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::Metadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::Metadata* Bundle::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::Metadata>(GetArenaForAllocation());
    _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Content::Metadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::Digit::PrimePlatform::Content::Metadata* Bundle::mutable_metadata() {
  ::Digit::PrimePlatform::Content::Metadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.metadata)
  return _msg;
}
inline void Bundle::set_allocated_metadata(::Digit::PrimePlatform::Content::Metadata* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::Metadata*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::Metadata*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Content::Metadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.metadata)
}

// .Digit.PrimePlatform.Content.BundleContent content = 10;
inline bool Bundle::has_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.content_ != nullptr);
  return value;
}
inline void Bundle::clear_content() {
  if (_impl_.content_ != nullptr) _impl_.content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Digit::PrimePlatform::Content::BundleContent& Bundle::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::BundleContent* p = _impl_.content_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::BundleContent&>(::Digit::PrimePlatform::Content::_BundleContent_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::BundleContent& Bundle::content() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.content)
  return _internal_content();
}
inline void Bundle::unsafe_arena_set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.content_);
  }
  _impl_.content_ = reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.Bundle.content)
}
inline ::Digit::PrimePlatform::Content::BundleContent* Bundle::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Content::BundleContent* released = _impl_.content_;
  _impl_.content_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::BundleContent* Bundle::unsafe_arena_release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.content)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Content::BundleContent* temp = _impl_.content_;
  _impl_.content_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::BundleContent* Bundle::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.content_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::BundleContent>(GetArenaForAllocation());
    _impl_.content_ = reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(p);
  }
  return _impl_.content_;
}
inline ::Digit::PrimePlatform::Content::BundleContent* Bundle::mutable_content() {
  ::Digit::PrimePlatform::Content::BundleContent* _msg = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.content)
  return _msg;
}
inline void Bundle::set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(_impl_.content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.content_ = reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.content)
}

// .Digit.PrimePlatform.Content.Hinting hinting = 11;
inline bool Bundle::has_hinting() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.hinting_ != nullptr);
  return value;
}
inline void Bundle::clear_hinting() {
  if (_impl_.hinting_ != nullptr) _impl_.hinting_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Digit::PrimePlatform::Content::Hinting& Bundle::_internal_hinting() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::Hinting* p = _impl_.hinting_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::Hinting&>(::Digit::PrimePlatform::Content::_Hinting_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::Hinting& Bundle::hinting() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.hinting)
  return _internal_hinting();
}
inline void Bundle::unsafe_arena_set_allocated_hinting(::Digit::PrimePlatform::Content::Hinting* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.hinting_);
  }
  _impl_.hinting_ = reinterpret_cast<::Digit::PrimePlatform::Content::Hinting*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.Bundle.hinting)
}
inline ::Digit::PrimePlatform::Content::Hinting* Bundle::release_hinting() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Content::Hinting* released = _impl_.hinting_;
  _impl_.hinting_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::Hinting* Bundle::unsafe_arena_release_hinting() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.hinting)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Content::Hinting* temp = _impl_.hinting_;
  _impl_.hinting_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::Hinting* Bundle::_internal_mutable_hinting() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.hinting_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::Hinting>(GetArenaForAllocation());
    _impl_.hinting_ = reinterpret_cast<::Digit::PrimePlatform::Content::Hinting*>(p);
  }
  return _impl_.hinting_;
}
inline ::Digit::PrimePlatform::Content::Hinting* Bundle::mutable_hinting() {
  ::Digit::PrimePlatform::Content::Hinting* _msg = _internal_mutable_hinting();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.hinting)
  return _msg;
}
inline void Bundle::set_allocated_hinting(::Digit::PrimePlatform::Content::Hinting* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::Hinting*>(_impl_.hinting_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::Hinting*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.hinting_ = reinterpret_cast<::Digit::PrimePlatform::Content::Hinting*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.hinting)
}

// string externalId = 12;
inline void Bundle::clear_externalid() {
  _impl_.externalid_.ClearToEmpty();
}
inline const std::string& Bundle::externalid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.externalId)
  return _internal_externalid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Bundle::set_externalid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.externalid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.externalId)
}
inline std::string* Bundle::mutable_externalid() {
  std::string* _s = _internal_mutable_externalid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.externalId)
  return _s;
}
inline const std::string& Bundle::_internal_externalid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.externalid_.Get();
}
inline void Bundle::_internal_set_externalid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.externalid_.Set(value, GetArenaForAllocation());
}
inline std::string* Bundle::_internal_mutable_externalid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.externalid_.Mutable( GetArenaForAllocation());
}
inline std::string* Bundle::release_externalid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.externalId)
  return _impl_.externalid_.Release();
}
inline void Bundle::set_allocated_externalid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.externalid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.externalid_.IsDefault()) {
          _impl_.externalid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.externalId)
}

// string oldExternalId = 13;
inline void Bundle::clear_oldexternalid() {
  _impl_.oldexternalid_.ClearToEmpty();
}
inline const std::string& Bundle::oldexternalid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.oldExternalId)
  return _internal_oldexternalid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Bundle::set_oldexternalid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.oldexternalid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.oldExternalId)
}
inline std::string* Bundle::mutable_oldexternalid() {
  std::string* _s = _internal_mutable_oldexternalid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.oldExternalId)
  return _s;
}
inline const std::string& Bundle::_internal_oldexternalid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.oldexternalid_.Get();
}
inline void Bundle::_internal_set_oldexternalid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.oldexternalid_.Set(value, GetArenaForAllocation());
}
inline std::string* Bundle::_internal_mutable_oldexternalid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.oldexternalid_.Mutable( GetArenaForAllocation());
}
inline std::string* Bundle::release_oldexternalid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.oldExternalId)
  return _impl_.oldexternalid_.Release();
}
inline void Bundle::set_allocated_oldexternalid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.oldexternalid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.oldexternalid_.IsDefault()) {
          _impl_.oldexternalid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.oldExternalId)
}

// .Digit.PrimePlatform.Content.OfferDetails offerDetails = 14;
inline bool Bundle::has_offerdetails() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.offerdetails_ != nullptr);
  return value;
}
inline void Bundle::clear_offerdetails() {
  if (_impl_.offerdetails_ != nullptr) _impl_.offerdetails_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::Digit::PrimePlatform::Content::OfferDetails& Bundle::_internal_offerdetails() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::OfferDetails* p = _impl_.offerdetails_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::OfferDetails&>(::Digit::PrimePlatform::Content::_OfferDetails_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::OfferDetails& Bundle::offerdetails() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.offerDetails)
  return _internal_offerdetails();
}
inline void Bundle::unsafe_arena_set_allocated_offerdetails(::Digit::PrimePlatform::Content::OfferDetails* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.offerdetails_);
  }
  _impl_.offerdetails_ = reinterpret_cast<::Digit::PrimePlatform::Content::OfferDetails*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.Bundle.offerDetails)
}
inline ::Digit::PrimePlatform::Content::OfferDetails* Bundle::release_offerdetails() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Digit::PrimePlatform::Content::OfferDetails* released = _impl_.offerdetails_;
  _impl_.offerdetails_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::OfferDetails* Bundle::unsafe_arena_release_offerdetails() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bundle.offerDetails)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Digit::PrimePlatform::Content::OfferDetails* temp = _impl_.offerdetails_;
  _impl_.offerdetails_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::OfferDetails* Bundle::_internal_mutable_offerdetails() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.offerdetails_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::OfferDetails>(GetArenaForAllocation());
    _impl_.offerdetails_ = reinterpret_cast<::Digit::PrimePlatform::Content::OfferDetails*>(p);
  }
  return _impl_.offerdetails_;
}
inline ::Digit::PrimePlatform::Content::OfferDetails* Bundle::mutable_offerdetails() {
  ::Digit::PrimePlatform::Content::OfferDetails* _msg = _internal_mutable_offerdetails();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundle.offerDetails)
  return _msg;
}
inline void Bundle::set_allocated_offerdetails(::Digit::PrimePlatform::Content::OfferDetails* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::OfferDetails*>(_impl_.offerdetails_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::OfferDetails*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.offerdetails_ = reinterpret_cast<::Digit::PrimePlatform::Content::OfferDetails*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bundle.offerDetails)
}

// bool isPlayerlifecycle = 15;
inline void Bundle::clear_isplayerlifecycle() {
  _impl_.isplayerlifecycle_ = false;
}
inline bool Bundle::isplayerlifecycle() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.isPlayerlifecycle)
  return _internal_isplayerlifecycle();
}
inline void Bundle::set_isplayerlifecycle(bool value) {
  _internal_set_isplayerlifecycle(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.isPlayerlifecycle)
}
inline bool Bundle::_internal_isplayerlifecycle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isplayerlifecycle_;
}
inline void Bundle::_internal_set_isplayerlifecycle(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isplayerlifecycle_ = value;
}

// bool allowCustomQuantity = 16;
inline void Bundle::clear_allowcustomquantity() {
  _impl_.allowcustomquantity_ = false;
}
inline bool Bundle::allowcustomquantity() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundle.allowCustomQuantity)
  return _internal_allowcustomquantity();
}
inline void Bundle::set_allowcustomquantity(bool value) {
  _internal_set_allowcustomquantity(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bundle.allowCustomQuantity)
}
inline bool Bundle::_internal_allowcustomquantity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.allowcustomquantity_;
}
inline void Bundle::_internal_set_allowcustomquantity(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.allowcustomquantity_ = value;
}

// -------------------------------------------------------------------

// TranslationsContainer

// repeated .Digit.PrimePlatform.Content.TranslationSection sections = 1;
inline int TranslationsContainer::_internal_sections_size() const {
  return _internal_sections().size();
}
inline int TranslationsContainer::sections_size() const {
  return _internal_sections_size();
}
inline void TranslationsContainer::clear_sections() {
  _internal_mutable_sections()->Clear();
}
inline ::Digit::PrimePlatform::Content::TranslationSection* TranslationsContainer::mutable_sections(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.TranslationsContainer.sections)
  return _internal_mutable_sections()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::TranslationSection >*
TranslationsContainer::mutable_sections() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.TranslationsContainer.sections)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sections();
}
inline const ::Digit::PrimePlatform::Content::TranslationSection& TranslationsContainer::sections(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.TranslationsContainer.sections)
    return _internal_sections().Get(index);
}
inline ::Digit::PrimePlatform::Content::TranslationSection* TranslationsContainer::add_sections() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::TranslationSection* _add = _internal_mutable_sections()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.TranslationsContainer.sections)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::TranslationSection >&
TranslationsContainer::sections() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.TranslationsContainer.sections)
  return _internal_sections();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::TranslationSection>&
TranslationsContainer::_internal_sections() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sections_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::TranslationSection>*
TranslationsContainer::_internal_mutable_sections() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sections_;
}

// -------------------------------------------------------------------

// TranslationSection

// string section = 1;
inline void TranslationSection::clear_section() {
  _impl_.section_.ClearToEmpty();
}
inline const std::string& TranslationSection::section() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.TranslationSection.section)
  return _internal_section();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TranslationSection::set_section(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.section_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.TranslationSection.section)
}
inline std::string* TranslationSection::mutable_section() {
  std::string* _s = _internal_mutable_section();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.TranslationSection.section)
  return _s;
}
inline const std::string& TranslationSection::_internal_section() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.section_.Get();
}
inline void TranslationSection::_internal_set_section(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.section_.Set(value, GetArenaForAllocation());
}
inline std::string* TranslationSection::_internal_mutable_section() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.section_.Mutable( GetArenaForAllocation());
}
inline std::string* TranslationSection::release_section() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.TranslationSection.section)
  return _impl_.section_.Release();
}
inline void TranslationSection::set_allocated_section(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.section_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.section_.IsDefault()) {
          _impl_.section_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.TranslationSection.section)
}

// int32 sectionHash = 2;
inline void TranslationSection::clear_sectionhash() {
  _impl_.sectionhash_ = 0;
}
inline ::int32_t TranslationSection::sectionhash() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.TranslationSection.sectionHash)
  return _internal_sectionhash();
}
inline void TranslationSection::set_sectionhash(::int32_t value) {
  _internal_set_sectionhash(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.TranslationSection.sectionHash)
}
inline ::int32_t TranslationSection::_internal_sectionhash() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sectionhash_;
}
inline void TranslationSection::_internal_set_sectionhash(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sectionhash_ = value;
}

// repeated .Digit.PrimePlatform.Content.Translation translations = 3;
inline int TranslationSection::_internal_translations_size() const {
  return _internal_translations().size();
}
inline int TranslationSection::translations_size() const {
  return _internal_translations_size();
}
inline void TranslationSection::clear_translations() {
  _internal_mutable_translations()->Clear();
}
inline ::Digit::PrimePlatform::Content::Translation* TranslationSection::mutable_translations(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.TranslationSection.translations)
  return _internal_mutable_translations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Translation >*
TranslationSection::mutable_translations() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.TranslationSection.translations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_translations();
}
inline const ::Digit::PrimePlatform::Content::Translation& TranslationSection::translations(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.TranslationSection.translations)
    return _internal_translations().Get(index);
}
inline ::Digit::PrimePlatform::Content::Translation* TranslationSection::add_translations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::Translation* _add = _internal_mutable_translations()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.TranslationSection.translations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Translation >&
TranslationSection::translations() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.TranslationSection.translations)
  return _internal_translations();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Translation>&
TranslationSection::_internal_translations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.translations_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Translation>*
TranslationSection::_internal_mutable_translations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.translations_;
}

// .google.protobuf.Timestamp modified = 4;
inline bool TranslationSection::has_modified() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.modified_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TranslationSection::_internal_modified() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.modified_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TranslationSection::modified() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.TranslationSection.modified)
  return _internal_modified();
}
inline void TranslationSection::unsafe_arena_set_allocated_modified(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_);
  }
  _impl_.modified_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.TranslationSection.modified)
}
inline ::google::protobuf::Timestamp* TranslationSection::release_modified() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.modified_;
  _impl_.modified_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* TranslationSection::unsafe_arena_release_modified() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.TranslationSection.modified)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.modified_;
  _impl_.modified_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TranslationSection::_internal_mutable_modified() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.modified_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.modified_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.modified_;
}
inline ::google::protobuf::Timestamp* TranslationSection::mutable_modified() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_modified();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.TranslationSection.modified)
  return _msg;
}
inline void TranslationSection::set_allocated_modified(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.modified_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.TranslationSection.modified)
}

// -------------------------------------------------------------------

// Translation

// string key = 1;
inline void Translation::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& Translation::key() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Translation.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Translation::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Translation.key)
}
inline std::string* Translation::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Translation.key)
  return _s;
}
inline const std::string& Translation::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void Translation::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* Translation::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* Translation::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Translation.key)
  return _impl_.key_.Release();
}
inline void Translation::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Translation.key)
}

// int32 keyHash = 2;
inline void Translation::clear_keyhash() {
  _impl_.keyhash_ = 0;
}
inline ::int32_t Translation::keyhash() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Translation.keyHash)
  return _internal_keyhash();
}
inline void Translation::set_keyhash(::int32_t value) {
  _internal_set_keyhash(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Translation.keyHash)
}
inline ::int32_t Translation::_internal_keyhash() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keyhash_;
}
inline void Translation::_internal_set_keyhash(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.keyhash_ = value;
}

// string text = 3;
inline void Translation::clear_text() {
  _impl_.text_.ClearToEmpty();
}
inline const std::string& Translation::text() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Translation.text)
  return _internal_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Translation::set_text(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.text_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Translation.text)
}
inline std::string* Translation::mutable_text() {
  std::string* _s = _internal_mutable_text();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Translation.text)
  return _s;
}
inline const std::string& Translation::_internal_text() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.text_.Get();
}
inline void Translation::_internal_set_text(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.text_.Set(value, GetArenaForAllocation());
}
inline std::string* Translation::_internal_mutable_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.text_.Mutable( GetArenaForAllocation());
}
inline std::string* Translation::release_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Translation.text)
  return _impl_.text_.Release();
}
inline void Translation::set_allocated_text(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.text_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.text_.IsDefault()) {
          _impl_.text_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Translation.text)
}

// string id = 4;
inline void Translation::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Translation::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Translation.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Translation::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Translation.id)
}
inline std::string* Translation::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Translation.id)
  return _s;
}
inline const std::string& Translation::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Translation::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* Translation::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* Translation::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Translation.id)
  return _impl_.id_.Release();
}
inline void Translation::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Translation.id)
}

// -------------------------------------------------------------------

// ContentItem

// string id = 1;
inline void ContentItem::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ContentItem::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.ContentItem.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContentItem::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.ContentItem.id)
}
inline std::string* ContentItem::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.ContentItem.id)
  return _s;
}
inline const std::string& ContentItem::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void ContentItem::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* ContentItem::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* ContentItem::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.ContentItem.id)
  return _impl_.id_.Release();
}
inline void ContentItem::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.ContentItem.id)
}

// int64 quantity = 2;
inline void ContentItem::clear_quantity() {
  _impl_.quantity_ = ::int64_t{0};
}
inline ::int64_t ContentItem::quantity() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.ContentItem.quantity)
  return _internal_quantity();
}
inline void ContentItem::set_quantity(::int64_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.ContentItem.quantity)
}
inline ::int64_t ContentItem::_internal_quantity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quantity_;
}
inline void ContentItem::_internal_set_quantity(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.quantity_ = value;
}

// string type = 3;
inline void ContentItem::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& ContentItem::type() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.ContentItem.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ContentItem::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.ContentItem.type)
}
inline std::string* ContentItem::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.ContentItem.type)
  return _s;
}
inline const std::string& ContentItem::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void ContentItem::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* ContentItem::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* ContentItem::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.ContentItem.type)
  return _impl_.type_.Release();
}
inline void ContentItem::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.ContentItem.type)
}

// uint32 level = 4;
inline void ContentItem::clear_level() {
  _impl_.level_ = 0u;
}
inline ::uint32_t ContentItem::level() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.ContentItem.level)
  return _internal_level();
}
inline void ContentItem::set_level(::uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.ContentItem.level)
}
inline ::uint32_t ContentItem::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_;
}
inline void ContentItem::_internal_set_level(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// -------------------------------------------------------------------

// Bucket

// int64 id = 1;
inline void Bucket::clear_id() {
  _impl_.id_ = ::int64_t{0};
}
inline ::int64_t Bucket::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bucket.id)
  return _internal_id();
}
inline void Bucket::set_id(::int64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bucket.id)
}
inline ::int64_t Bucket::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Bucket::_internal_set_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string transId = 2;
inline void Bucket::clear_transid() {
  _impl_.transid_.ClearToEmpty();
}
inline const std::string& Bucket::transid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bucket.transId)
  return _internal_transid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Bucket::set_transid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bucket.transId)
}
inline std::string* Bucket::mutable_transid() {
  std::string* _s = _internal_mutable_transid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bucket.transId)
  return _s;
}
inline const std::string& Bucket::_internal_transid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transid_.Get();
}
inline void Bucket::_internal_set_transid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transid_.Set(value, GetArenaForAllocation());
}
inline std::string* Bucket::_internal_mutable_transid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.transid_.Mutable( GetArenaForAllocation());
}
inline std::string* Bucket::release_transid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bucket.transId)
  return _impl_.transid_.Release();
}
inline void Bucket::set_allocated_transid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transid_.IsDefault()) {
          _impl_.transid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bucket.transId)
}

// string artId = 3;
inline void Bucket::clear_artid() {
  _impl_.artid_.ClearToEmpty();
}
inline const std::string& Bucket::artid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bucket.artId)
  return _internal_artid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Bucket::set_artid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.artid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bucket.artId)
}
inline std::string* Bucket::mutable_artid() {
  std::string* _s = _internal_mutable_artid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bucket.artId)
  return _s;
}
inline const std::string& Bucket::_internal_artid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.artid_.Get();
}
inline void Bucket::_internal_set_artid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.artid_.Set(value, GetArenaForAllocation());
}
inline std::string* Bucket::_internal_mutable_artid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.artid_.Mutable( GetArenaForAllocation());
}
inline std::string* Bucket::release_artid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Bucket.artId)
  return _impl_.artid_.Release();
}
inline void Bucket::set_allocated_artid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.artid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.artid_.IsDefault()) {
          _impl_.artid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Bucket.artId)
}

// int64 sortOrder = 4;
inline void Bucket::clear_sortorder() {
  _impl_.sortorder_ = ::int64_t{0};
}
inline ::int64_t Bucket::sortorder() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bucket.sortOrder)
  return _internal_sortorder();
}
inline void Bucket::set_sortorder(::int64_t value) {
  _internal_set_sortorder(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Bucket.sortOrder)
}
inline ::int64_t Bucket::_internal_sortorder() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sortorder_;
}
inline void Bucket::_internal_set_sortorder(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sortorder_ = value;
}

// -------------------------------------------------------------------

// BundleContent

// repeated .Digit.PrimePlatform.Content.ContentItemList dynamic = 1;
inline int BundleContent::_internal_dynamic_size() const {
  return _internal_dynamic().size();
}
inline int BundleContent::dynamic_size() const {
  return _internal_dynamic_size();
}
inline void BundleContent::clear_dynamic() {
  _internal_mutable_dynamic()->Clear();
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::mutable_dynamic(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.BundleContent.dynamic)
  return _internal_mutable_dynamic()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItemList >*
BundleContent::mutable_dynamic() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.BundleContent.dynamic)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_dynamic();
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::dynamic(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.BundleContent.dynamic)
    return _internal_dynamic().Get(index);
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::add_dynamic() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::ContentItemList* _add = _internal_mutable_dynamic()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.BundleContent.dynamic)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItemList >&
BundleContent::dynamic() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.BundleContent.dynamic)
  return _internal_dynamic();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItemList>&
BundleContent::_internal_dynamic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.dynamic_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItemList>*
BundleContent::_internal_mutable_dynamic() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.dynamic_;
}

// .Digit.PrimePlatform.Content.ContentItemList gifts = 2;
inline bool BundleContent::has_gifts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.gifts_ != nullptr);
  return value;
}
inline void BundleContent::clear_gifts() {
  if (_impl_.gifts_ != nullptr) _impl_.gifts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::_internal_gifts() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::ContentItemList* p = _impl_.gifts_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::ContentItemList&>(::Digit::PrimePlatform::Content::_ContentItemList_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::gifts() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.BundleContent.gifts)
  return _internal_gifts();
}
inline void BundleContent::unsafe_arena_set_allocated_gifts(::Digit::PrimePlatform::Content::ContentItemList* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.gifts_);
  }
  _impl_.gifts_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.BundleContent.gifts)
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::release_gifts() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::ContentItemList* released = _impl_.gifts_;
  _impl_.gifts_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::unsafe_arena_release_gifts() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.BundleContent.gifts)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::ContentItemList* temp = _impl_.gifts_;
  _impl_.gifts_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::_internal_mutable_gifts() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.gifts_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::ContentItemList>(GetArenaForAllocation());
    _impl_.gifts_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(p);
  }
  return _impl_.gifts_;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::mutable_gifts() {
  ::Digit::PrimePlatform::Content::ContentItemList* _msg = _internal_mutable_gifts();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.BundleContent.gifts)
  return _msg;
}
inline void BundleContent::set_allocated_gifts(::Digit::PrimePlatform::Content::ContentItemList* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(_impl_.gifts_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.gifts_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.BundleContent.gifts)
}

// .Digit.PrimePlatform.Content.ContentItemList showcase = 3;
inline bool BundleContent::has_showcase() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.showcase_ != nullptr);
  return value;
}
inline void BundleContent::clear_showcase() {
  if (_impl_.showcase_ != nullptr) _impl_.showcase_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::_internal_showcase() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::ContentItemList* p = _impl_.showcase_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::ContentItemList&>(::Digit::PrimePlatform::Content::_ContentItemList_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::showcase() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.BundleContent.showcase)
  return _internal_showcase();
}
inline void BundleContent::unsafe_arena_set_allocated_showcase(::Digit::PrimePlatform::Content::ContentItemList* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.showcase_);
  }
  _impl_.showcase_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.BundleContent.showcase)
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::release_showcase() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Content::ContentItemList* released = _impl_.showcase_;
  _impl_.showcase_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::unsafe_arena_release_showcase() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.BundleContent.showcase)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Content::ContentItemList* temp = _impl_.showcase_;
  _impl_.showcase_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::_internal_mutable_showcase() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.showcase_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::ContentItemList>(GetArenaForAllocation());
    _impl_.showcase_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(p);
  }
  return _impl_.showcase_;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::mutable_showcase() {
  ::Digit::PrimePlatform::Content::ContentItemList* _msg = _internal_mutable_showcase();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.BundleContent.showcase)
  return _msg;
}
inline void BundleContent::set_allocated_showcase(::Digit::PrimePlatform::Content::ContentItemList* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(_impl_.showcase_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.showcase_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.BundleContent.showcase)
}

// .Digit.PrimePlatform.Content.ContentItemList static = 4;
inline bool BundleContent::has_static_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.static__ != nullptr);
  return value;
}
inline void BundleContent::clear_static_() {
  if (_impl_.static__ != nullptr) _impl_.static__->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::_internal_static_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::ContentItemList* p = _impl_.static__;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::ContentItemList&>(::Digit::PrimePlatform::Content::_ContentItemList_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::static_() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.BundleContent.static)
  return _internal_static_();
}
inline void BundleContent::unsafe_arena_set_allocated_static_(::Digit::PrimePlatform::Content::ContentItemList* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.static__);
  }
  _impl_.static__ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.BundleContent.static)
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::release_static_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Content::ContentItemList* released = _impl_.static__;
  _impl_.static__ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::unsafe_arena_release_static_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.BundleContent.static)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Content::ContentItemList* temp = _impl_.static__;
  _impl_.static__ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::_internal_mutable_static_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.static__ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::ContentItemList>(GetArenaForAllocation());
    _impl_.static__ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(p);
  }
  return _impl_.static__;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::mutable_static_() {
  ::Digit::PrimePlatform::Content::ContentItemList* _msg = _internal_mutable_static_();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.BundleContent.static)
  return _msg;
}
inline void BundleContent::set_allocated_static_(::Digit::PrimePlatform::Content::ContentItemList* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(_impl_.static__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.static__ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.BundleContent.static)
}

// .Digit.PrimePlatform.Content.ContentItemList multiplied = 5;
inline bool BundleContent::has_multiplied() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.multiplied_ != nullptr);
  return value;
}
inline void BundleContent::clear_multiplied() {
  if (_impl_.multiplied_ != nullptr) _impl_.multiplied_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::_internal_multiplied() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::ContentItemList* p = _impl_.multiplied_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::ContentItemList&>(::Digit::PrimePlatform::Content::_ContentItemList_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::ContentItemList& BundleContent::multiplied() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.BundleContent.multiplied)
  return _internal_multiplied();
}
inline void BundleContent::unsafe_arena_set_allocated_multiplied(::Digit::PrimePlatform::Content::ContentItemList* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.multiplied_);
  }
  _impl_.multiplied_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.BundleContent.multiplied)
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::release_multiplied() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Digit::PrimePlatform::Content::ContentItemList* released = _impl_.multiplied_;
  _impl_.multiplied_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::unsafe_arena_release_multiplied() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.BundleContent.multiplied)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Digit::PrimePlatform::Content::ContentItemList* temp = _impl_.multiplied_;
  _impl_.multiplied_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::_internal_mutable_multiplied() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.multiplied_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::ContentItemList>(GetArenaForAllocation());
    _impl_.multiplied_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(p);
  }
  return _impl_.multiplied_;
}
inline ::Digit::PrimePlatform::Content::ContentItemList* BundleContent::mutable_multiplied() {
  ::Digit::PrimePlatform::Content::ContentItemList* _msg = _internal_mutable_multiplied();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.BundleContent.multiplied)
  return _msg;
}
inline void BundleContent::set_allocated_multiplied(::Digit::PrimePlatform::Content::ContentItemList* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(_impl_.multiplied_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.multiplied_ = reinterpret_cast<::Digit::PrimePlatform::Content::ContentItemList*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.BundleContent.multiplied)
}

// -------------------------------------------------------------------

// ContentItemList

// repeated .Digit.PrimePlatform.Content.ContentItem items = 1;
inline int ContentItemList::_internal_items_size() const {
  return _internal_items().size();
}
inline int ContentItemList::items_size() const {
  return _internal_items_size();
}
inline void ContentItemList::clear_items() {
  _internal_mutable_items()->Clear();
}
inline ::Digit::PrimePlatform::Content::ContentItem* ContentItemList::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.ContentItemList.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItem >*
ContentItemList::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.ContentItemList.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::Digit::PrimePlatform::Content::ContentItem& ContentItemList::items(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.ContentItemList.items)
    return _internal_items().Get(index);
}
inline ::Digit::PrimePlatform::Content::ContentItem* ContentItemList::add_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::ContentItem* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.ContentItemList.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::ContentItem >&
ContentItemList::items() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.ContentItemList.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItem>&
ContentItemList::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::ContentItem>*
ContentItemList::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// Order

// string orderId = 1;
inline void Order::clear_orderid() {
  _impl_.orderid_.ClearToEmpty();
}
inline const std::string& Order::orderid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Order.orderId)
  return _internal_orderid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Order::set_orderid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.orderid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Order.orderId)
}
inline std::string* Order::mutable_orderid() {
  std::string* _s = _internal_mutable_orderid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Order.orderId)
  return _s;
}
inline const std::string& Order::_internal_orderid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.orderid_.Get();
}
inline void Order::_internal_set_orderid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.orderid_.Set(value, GetArenaForAllocation());
}
inline std::string* Order::_internal_mutable_orderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.orderid_.Mutable( GetArenaForAllocation());
}
inline std::string* Order::release_orderid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Order.orderId)
  return _impl_.orderid_.Release();
}
inline void Order::set_allocated_orderid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.orderid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.orderid_.IsDefault()) {
          _impl_.orderid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Order.orderId)
}

// .google.protobuf.Timestamp created = 2;
inline bool Order::has_created() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Order::_internal_created() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Order::created() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Order.created)
  return _internal_created();
}
inline void Order::unsafe_arena_set_allocated_created(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_);
  }
  _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.Order.created)
}
inline ::google::protobuf::Timestamp* Order::release_created() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_;
  _impl_.created_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* Order::unsafe_arena_release_created() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Order.created)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_;
  _impl_.created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Order::_internal_mutable_created() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_;
}
inline ::google::protobuf::Timestamp* Order::mutable_created() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Order.created)
  return _msg;
}
inline void Order::set_allocated_created(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Order.created)
}

// repeated .Digit.PrimePlatform.Content.OrderItem orderItems = 3;
inline int Order::_internal_orderitems_size() const {
  return _internal_orderitems().size();
}
inline int Order::orderitems_size() const {
  return _internal_orderitems_size();
}
inline void Order::clear_orderitems() {
  _internal_mutable_orderitems()->Clear();
}
inline ::Digit::PrimePlatform::Content::OrderItem* Order::mutable_orderitems(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Order.orderItems)
  return _internal_mutable_orderitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::OrderItem >*
Order::mutable_orderitems() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.Order.orderItems)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_orderitems();
}
inline const ::Digit::PrimePlatform::Content::OrderItem& Order::orderitems(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Order.orderItems)
    return _internal_orderitems().Get(index);
}
inline ::Digit::PrimePlatform::Content::OrderItem* Order::add_orderitems() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::OrderItem* _add = _internal_mutable_orderitems()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.Order.orderItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::OrderItem >&
Order::orderitems() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.Order.orderItems)
  return _internal_orderitems();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::OrderItem>&
Order::_internal_orderitems() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.orderitems_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::OrderItem>*
Order::_internal_mutable_orderitems() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.orderitems_;
}

// -------------------------------------------------------------------

// OrderItem

// uint32 bundleId = 1;
inline void OrderItem::clear_bundleid() {
  _impl_.bundleid_ = 0u;
}
inline ::uint32_t OrderItem::bundleid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OrderItem.bundleId)
  return _internal_bundleid();
}
inline void OrderItem::set_bundleid(::uint32_t value) {
  _internal_set_bundleid(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.OrderItem.bundleId)
}
inline ::uint32_t OrderItem::_internal_bundleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bundleid_;
}
inline void OrderItem::_internal_set_bundleid(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bundleid_ = value;
}

// uint32 bundleVersion = 2;
inline void OrderItem::clear_bundleversion() {
  _impl_.bundleversion_ = 0u;
}
inline ::uint32_t OrderItem::bundleversion() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OrderItem.bundleVersion)
  return _internal_bundleversion();
}
inline void OrderItem::set_bundleversion(::uint32_t value) {
  _internal_set_bundleversion(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.OrderItem.bundleVersion)
}
inline ::uint32_t OrderItem::_internal_bundleversion() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bundleversion_;
}
inline void OrderItem::_internal_set_bundleversion(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bundleversion_ = value;
}

// .Digit.PrimePlatform.Content.BundleContent content = 3;
inline bool OrderItem::has_content() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.content_ != nullptr);
  return value;
}
inline void OrderItem::clear_content() {
  if (_impl_.content_ != nullptr) _impl_.content_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Content::BundleContent& OrderItem::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::BundleContent* p = _impl_.content_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::BundleContent&>(::Digit::PrimePlatform::Content::_BundleContent_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::BundleContent& OrderItem::content() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OrderItem.content)
  return _internal_content();
}
inline void OrderItem::unsafe_arena_set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.content_);
  }
  _impl_.content_ = reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.OrderItem.content)
}
inline ::Digit::PrimePlatform::Content::BundleContent* OrderItem::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::BundleContent* released = _impl_.content_;
  _impl_.content_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::BundleContent* OrderItem::unsafe_arena_release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.OrderItem.content)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::BundleContent* temp = _impl_.content_;
  _impl_.content_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::BundleContent* OrderItem::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.content_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::BundleContent>(GetArenaForAllocation());
    _impl_.content_ = reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(p);
  }
  return _impl_.content_;
}
inline ::Digit::PrimePlatform::Content::BundleContent* OrderItem::mutable_content() {
  ::Digit::PrimePlatform::Content::BundleContent* _msg = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.OrderItem.content)
  return _msg;
}
inline void OrderItem::set_allocated_content(::Digit::PrimePlatform::Content::BundleContent* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(_impl_.content_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.content_ = reinterpret_cast<::Digit::PrimePlatform::Content::BundleContent*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.OrderItem.content)
}

// -------------------------------------------------------------------

// Bundles

// repeated .Digit.PrimePlatform.Content.Bundle bundles_ = 1;
inline int Bundles::_internal_bundles__size() const {
  return _internal_bundles_().size();
}
inline int Bundles::bundles__size() const {
  return _internal_bundles__size();
}
inline void Bundles::clear_bundles_() {
  _internal_mutable_bundles_()->Clear();
}
inline ::Digit::PrimePlatform::Content::Bundle* Bundles::mutable_bundles_(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Bundles.bundles_)
  return _internal_mutable_bundles_()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Bundle >*
Bundles::mutable_bundles_() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.Bundles.bundles_)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_bundles_();
}
inline const ::Digit::PrimePlatform::Content::Bundle& Bundles::bundles_(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Bundles.bundles_)
    return _internal_bundles_().Get(index);
}
inline ::Digit::PrimePlatform::Content::Bundle* Bundles::add_bundles_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::Bundle* _add = _internal_mutable_bundles_()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.Bundles.bundles_)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Bundle >&
Bundles::bundles_() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.Bundles.bundles_)
  return _internal_bundles_();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Bundle>&
Bundles::_internal_bundles_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bundles__;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Bundle>*
Bundles::_internal_mutable_bundles_() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.bundles__;
}

// -------------------------------------------------------------------

// Cost

// repeated .Digit.PrimePlatform.Content.Resource cost_ = 1;
inline int Cost::_internal_cost__size() const {
  return _internal_cost_().size();
}
inline int Cost::cost__size() const {
  return _internal_cost__size();
}
inline void Cost::clear_cost_() {
  _internal_mutable_cost_()->Clear();
}
inline ::Digit::PrimePlatform::Content::Resource* Cost::mutable_cost_(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Cost.cost_)
  return _internal_mutable_cost_()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >*
Cost::mutable_cost_() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.Cost.cost_)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cost_();
}
inline const ::Digit::PrimePlatform::Content::Resource& Cost::cost_(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Cost.cost_)
    return _internal_cost_().Get(index);
}
inline ::Digit::PrimePlatform::Content::Resource* Cost::add_cost_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::Resource* _add = _internal_mutable_cost_()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.Cost.cost_)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >&
Cost::cost_() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.Cost.cost_)
  return _internal_cost_();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>&
Cost::_internal_cost_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cost__;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>*
Cost::_internal_mutable_cost_() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cost__;
}

// uint32 quantity = 2;
inline void Cost::clear_quantity() {
  _impl_.quantity_ = 0u;
}
inline ::uint32_t Cost::quantity() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Cost.quantity)
  return _internal_quantity();
}
inline void Cost::set_quantity(::uint32_t value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Cost.quantity)
}
inline ::uint32_t Cost::_internal_quantity() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.quantity_;
}
inline void Cost::_internal_set_quantity(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.quantity_ = value;
}

// -------------------------------------------------------------------

// Resource

// uint32 amount = 1;
inline void Resource::clear_amount() {
  _impl_.amount_ = 0u;
}
inline ::uint32_t Resource::amount() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Resource.amount)
  return _internal_amount();
}
inline void Resource::set_amount(::uint32_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Resource.amount)
}
inline ::uint32_t Resource::_internal_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amount_;
}
inline void Resource::_internal_set_amount(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.amount_ = value;
}

// uint32 amountOld = 2;
inline void Resource::clear_amountold() {
  _impl_.amountold_ = 0u;
}
inline ::uint32_t Resource::amountold() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Resource.amountOld)
  return _internal_amountold();
}
inline void Resource::set_amountold(::uint32_t value) {
  _internal_set_amountold(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Resource.amountOld)
}
inline ::uint32_t Resource::_internal_amountold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amountold_;
}
inline void Resource::_internal_set_amountold(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.amountold_ = value;
}

// string id = 3;
inline void Resource::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Resource::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Resource.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Resource::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Resource.id)
}
inline std::string* Resource::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Resource.id)
  return _s;
}
inline const std::string& Resource::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Resource::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* Resource::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* Resource::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Resource.id)
  return _impl_.id_.Release();
}
inline void Resource::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Resource.id)
}

// string type = 4;
inline void Resource::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& Resource::type() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Resource.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Resource::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Resource.type)
}
inline std::string* Resource::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Resource.type)
  return _s;
}
inline const std::string& Resource::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void Resource::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* Resource::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* Resource::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Resource.type)
  return _impl_.type_.Release();
}
inline void Resource::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Resource.type)
}

// int32 unavailableDisplayMode = 5;
inline void Resource::clear_unavailabledisplaymode() {
  _impl_.unavailabledisplaymode_ = 0;
}
inline ::int32_t Resource::unavailabledisplaymode() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Resource.unavailableDisplayMode)
  return _internal_unavailabledisplaymode();
}
inline void Resource::set_unavailabledisplaymode(::int32_t value) {
  _internal_set_unavailabledisplaymode(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Resource.unavailableDisplayMode)
}
inline ::int32_t Resource::_internal_unavailabledisplaymode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.unavailabledisplaymode_;
}
inline void Resource::_internal_set_unavailabledisplaymode(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.unavailabledisplaymode_ = value;
}

// uint64 amountUlong = 6;
inline void Resource::clear_amountulong() {
  _impl_.amountulong_ = ::uint64_t{0u};
}
inline ::uint64_t Resource::amountulong() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Resource.amountUlong)
  return _internal_amountulong();
}
inline void Resource::set_amountulong(::uint64_t value) {
  _internal_set_amountulong(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Resource.amountUlong)
}
inline ::uint64_t Resource::_internal_amountulong() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amountulong_;
}
inline void Resource::_internal_set_amountulong(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.amountulong_ = value;
}

// -------------------------------------------------------------------

// Metadata

// string color = 1;
inline void Metadata::clear_color() {
  _impl_.color_.ClearToEmpty();
}
inline const std::string& Metadata::color() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.color)
  return _internal_color();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Metadata::set_color(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.color_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.color)
}
inline std::string* Metadata::mutable_color() {
  std::string* _s = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Metadata.color)
  return _s;
}
inline const std::string& Metadata::_internal_color() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.color_.Get();
}
inline void Metadata::_internal_set_color(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.color_.Set(value, GetArenaForAllocation());
}
inline std::string* Metadata::_internal_mutable_color() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.color_.Mutable( GetArenaForAllocation());
}
inline std::string* Metadata::release_color() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Metadata.color)
  return _impl_.color_.Release();
}
inline void Metadata::set_allocated_color(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.color_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.color_.IsDefault()) {
          _impl_.color_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Metadata.color)
}

// string assetId = 2;
inline void Metadata::clear_assetid() {
  _impl_.assetid_.ClearToEmpty();
}
inline const std::string& Metadata::assetid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.assetId)
  return _internal_assetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Metadata::set_assetid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.assetId)
}
inline std::string* Metadata::mutable_assetid() {
  std::string* _s = _internal_mutable_assetid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Metadata.assetId)
  return _s;
}
inline const std::string& Metadata::_internal_assetid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.assetid_.Get();
}
inline void Metadata::_internal_set_assetid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetid_.Set(value, GetArenaForAllocation());
}
inline std::string* Metadata::_internal_mutable_assetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.assetid_.Mutable( GetArenaForAllocation());
}
inline std::string* Metadata::release_assetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Metadata.assetId)
  return _impl_.assetid_.Release();
}
inline void Metadata::set_allocated_assetid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.assetid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.assetid_.IsDefault()) {
          _impl_.assetid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Metadata.assetId)
}

// string assetFilename = 3;
inline void Metadata::clear_assetfilename() {
  _impl_.assetfilename_.ClearToEmpty();
}
inline const std::string& Metadata::assetfilename() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.assetFilename)
  return _internal_assetfilename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Metadata::set_assetfilename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetfilename_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.assetFilename)
}
inline std::string* Metadata::mutable_assetfilename() {
  std::string* _s = _internal_mutable_assetfilename();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Metadata.assetFilename)
  return _s;
}
inline const std::string& Metadata::_internal_assetfilename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.assetfilename_.Get();
}
inline void Metadata::_internal_set_assetfilename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetfilename_.Set(value, GetArenaForAllocation());
}
inline std::string* Metadata::_internal_mutable_assetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.assetfilename_.Mutable( GetArenaForAllocation());
}
inline std::string* Metadata::release_assetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Metadata.assetFilename)
  return _impl_.assetfilename_.Release();
}
inline void Metadata::set_allocated_assetfilename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.assetfilename_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.assetfilename_.IsDefault()) {
          _impl_.assetfilename_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Metadata.assetFilename)
}

// string iconAssetFilename = 4;
inline void Metadata::clear_iconassetfilename() {
  _impl_.iconassetfilename_.ClearToEmpty();
}
inline const std::string& Metadata::iconassetfilename() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.iconAssetFilename)
  return _internal_iconassetfilename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Metadata::set_iconassetfilename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iconassetfilename_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.iconAssetFilename)
}
inline std::string* Metadata::mutable_iconassetfilename() {
  std::string* _s = _internal_mutable_iconassetfilename();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Metadata.iconAssetFilename)
  return _s;
}
inline const std::string& Metadata::_internal_iconassetfilename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iconassetfilename_.Get();
}
inline void Metadata::_internal_set_iconassetfilename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iconassetfilename_.Set(value, GetArenaForAllocation());
}
inline std::string* Metadata::_internal_mutable_iconassetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.iconassetfilename_.Mutable( GetArenaForAllocation());
}
inline std::string* Metadata::release_iconassetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Metadata.iconAssetFilename)
  return _impl_.iconassetfilename_.Release();
}
inline void Metadata::set_allocated_iconassetfilename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.iconassetfilename_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.iconassetfilename_.IsDefault()) {
          _impl_.iconassetfilename_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Metadata.iconAssetFilename)
}

// .Digit.PrimePlatform.Content.Bucket bucket = 5;
inline bool Metadata::has_bucket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bucket_ != nullptr);
  return value;
}
inline void Metadata::clear_bucket() {
  if (_impl_.bucket_ != nullptr) _impl_.bucket_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Content::Bucket& Metadata::_internal_bucket() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::Bucket* p = _impl_.bucket_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::Bucket&>(::Digit::PrimePlatform::Content::_Bucket_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::Bucket& Metadata::bucket() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.bucket)
  return _internal_bucket();
}
inline void Metadata::unsafe_arena_set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bucket_);
  }
  _impl_.bucket_ = reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.Metadata.bucket)
}
inline ::Digit::PrimePlatform::Content::Bucket* Metadata::release_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::Bucket* released = _impl_.bucket_;
  _impl_.bucket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::Bucket* Metadata::unsafe_arena_release_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Metadata.bucket)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::Bucket* temp = _impl_.bucket_;
  _impl_.bucket_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::Bucket* Metadata::_internal_mutable_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.bucket_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::Bucket>(GetArenaForAllocation());
    _impl_.bucket_ = reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(p);
  }
  return _impl_.bucket_;
}
inline ::Digit::PrimePlatform::Content::Bucket* Metadata::mutable_bucket() {
  ::Digit::PrimePlatform::Content::Bucket* _msg = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Metadata.bucket)
  return _msg;
}
inline void Metadata::set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(_impl_.bucket_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bucket_ = reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Metadata.bucket)
}

// string bundleMultiplier = 6;
inline void Metadata::clear_bundlemultiplier() {
  _impl_.bundlemultiplier_.ClearToEmpty();
}
inline const std::string& Metadata::bundlemultiplier() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.bundleMultiplier)
  return _internal_bundlemultiplier();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Metadata::set_bundlemultiplier(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bundlemultiplier_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.bundleMultiplier)
}
inline std::string* Metadata::mutable_bundlemultiplier() {
  std::string* _s = _internal_mutable_bundlemultiplier();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Metadata.bundleMultiplier)
  return _s;
}
inline const std::string& Metadata::_internal_bundlemultiplier() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bundlemultiplier_.Get();
}
inline void Metadata::_internal_set_bundlemultiplier(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bundlemultiplier_.Set(value, GetArenaForAllocation());
}
inline std::string* Metadata::_internal_mutable_bundlemultiplier() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bundlemultiplier_.Mutable( GetArenaForAllocation());
}
inline std::string* Metadata::release_bundlemultiplier() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Metadata.bundleMultiplier)
  return _impl_.bundlemultiplier_.Release();
}
inline void Metadata::set_allocated_bundlemultiplier(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bundlemultiplier_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bundlemultiplier_.IsDefault()) {
          _impl_.bundlemultiplier_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Metadata.bundleMultiplier)
}

// int64 secondaryBundleId = 7;
inline void Metadata::clear_secondarybundleid() {
  _impl_.secondarybundleid_ = ::int64_t{0};
}
inline ::int64_t Metadata::secondarybundleid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.secondaryBundleId)
  return _internal_secondarybundleid();
}
inline void Metadata::set_secondarybundleid(::int64_t value) {
  _internal_set_secondarybundleid(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.secondaryBundleId)
}
inline ::int64_t Metadata::_internal_secondarybundleid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.secondarybundleid_;
}
inline void Metadata::_internal_set_secondarybundleid(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.secondarybundleid_ = value;
}

// .Digit.PrimePlatform.Content.AnimationOnClaimType animationOnClaimType = 8;
inline void Metadata::clear_animationonclaimtype() {
  _impl_.animationonclaimtype_ = 0;
}
inline ::Digit::PrimePlatform::Content::AnimationOnClaimType Metadata::animationonclaimtype() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.animationOnClaimType)
  return _internal_animationonclaimtype();
}
inline void Metadata::set_animationonclaimtype(::Digit::PrimePlatform::Content::AnimationOnClaimType value) {
  _internal_set_animationonclaimtype(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.animationOnClaimType)
}
inline ::Digit::PrimePlatform::Content::AnimationOnClaimType Metadata::_internal_animationonclaimtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::PrimePlatform::Content::AnimationOnClaimType>(_impl_.animationonclaimtype_);
}
inline void Metadata::_internal_set_animationonclaimtype(::Digit::PrimePlatform::Content::AnimationOnClaimType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.animationonclaimtype_ = value;
}

// bool skipOnClaimAll = 9;
inline void Metadata::clear_skiponclaimall() {
  _impl_.skiponclaimall_ = false;
}
inline bool Metadata::skiponclaimall() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Metadata.skipOnClaimAll)
  return _internal_skiponclaimall();
}
inline void Metadata::set_skiponclaimall(bool value) {
  _internal_set_skiponclaimall(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Metadata.skipOnClaimAll)
}
inline bool Metadata::_internal_skiponclaimall() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skiponclaimall_;
}
inline void Metadata::_internal_set_skiponclaimall(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.skiponclaimall_ = value;
}

// -------------------------------------------------------------------

// Hinting_TranslationKey

// string field = 1;
inline void Hinting_TranslationKey::clear_field() {
  _impl_.field_.ClearToEmpty();
}
inline const std::string& Hinting_TranslationKey::field() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Hinting.TranslationKey.field)
  return _internal_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Hinting_TranslationKey::set_field(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.field_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Hinting.TranslationKey.field)
}
inline std::string* Hinting_TranslationKey::mutable_field() {
  std::string* _s = _internal_mutable_field();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Hinting.TranslationKey.field)
  return _s;
}
inline const std::string& Hinting_TranslationKey::_internal_field() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.field_.Get();
}
inline void Hinting_TranslationKey::_internal_set_field(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.field_.Set(value, GetArenaForAllocation());
}
inline std::string* Hinting_TranslationKey::_internal_mutable_field() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.field_.Mutable( GetArenaForAllocation());
}
inline std::string* Hinting_TranslationKey::release_field() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.Hinting.TranslationKey.field)
  return _impl_.field_.Release();
}
inline void Hinting_TranslationKey::set_allocated_field(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.field_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.field_.IsDefault()) {
          _impl_.field_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.Hinting.TranslationKey.field)
}

// bool isTranslated = 2;
inline void Hinting_TranslationKey::clear_istranslated() {
  _impl_.istranslated_ = false;
}
inline bool Hinting_TranslationKey::istranslated() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Hinting.TranslationKey.isTranslated)
  return _internal_istranslated();
}
inline void Hinting_TranslationKey::set_istranslated(bool value) {
  _internal_set_istranslated(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.Hinting.TranslationKey.isTranslated)
}
inline bool Hinting_TranslationKey::_internal_istranslated() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.istranslated_;
}
inline void Hinting_TranslationKey::_internal_set_istranslated(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.istranslated_ = value;
}

// -------------------------------------------------------------------

// Hinting

// repeated .Digit.PrimePlatform.Content.Hinting.TranslationKey translationKeys = 1;
inline int Hinting::_internal_translationkeys_size() const {
  return _internal_translationkeys().size();
}
inline int Hinting::translationkeys_size() const {
  return _internal_translationkeys_size();
}
inline void Hinting::clear_translationkeys() {
  _internal_mutable_translationkeys()->Clear();
}
inline ::Digit::PrimePlatform::Content::Hinting_TranslationKey* Hinting::mutable_translationkeys(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.Hinting.translationKeys)
  return _internal_mutable_translationkeys()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Hinting_TranslationKey >*
Hinting::mutable_translationkeys() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Content.Hinting.translationKeys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_translationkeys();
}
inline const ::Digit::PrimePlatform::Content::Hinting_TranslationKey& Hinting::translationkeys(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.Hinting.translationKeys)
    return _internal_translationkeys().Get(index);
}
inline ::Digit::PrimePlatform::Content::Hinting_TranslationKey* Hinting::add_translationkeys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::Hinting_TranslationKey* _add = _internal_mutable_translationkeys()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Content.Hinting.translationKeys)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Hinting_TranslationKey >&
Hinting::translationkeys() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Content.Hinting.translationKeys)
  return _internal_translationkeys();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Hinting_TranslationKey>&
Hinting::_internal_translationkeys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.translationkeys_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Hinting_TranslationKey>*
Hinting::_internal_mutable_translationkeys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.translationkeys_;
}

// -------------------------------------------------------------------

// OfferDetails

// string bonusLabel = 1;
inline void OfferDetails::clear_bonuslabel() {
  _impl_.bonuslabel_.ClearToEmpty();
}
inline const std::string& OfferDetails::bonuslabel() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OfferDetails.bonusLabel)
  return _internal_bonuslabel();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OfferDetails::set_bonuslabel(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bonuslabel_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.OfferDetails.bonusLabel)
}
inline std::string* OfferDetails::mutable_bonuslabel() {
  std::string* _s = _internal_mutable_bonuslabel();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.OfferDetails.bonusLabel)
  return _s;
}
inline const std::string& OfferDetails::_internal_bonuslabel() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bonuslabel_.Get();
}
inline void OfferDetails::_internal_set_bonuslabel(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bonuslabel_.Set(value, GetArenaForAllocation());
}
inline std::string* OfferDetails::_internal_mutable_bonuslabel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bonuslabel_.Mutable( GetArenaForAllocation());
}
inline std::string* OfferDetails::release_bonuslabel() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.OfferDetails.bonusLabel)
  return _impl_.bonuslabel_.Release();
}
inline void OfferDetails::set_allocated_bonuslabel(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bonuslabel_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bonuslabel_.IsDefault()) {
          _impl_.bonuslabel_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.OfferDetails.bonusLabel)
}

// string bonusValue = 2;
inline void OfferDetails::clear_bonusvalue() {
  _impl_.bonusvalue_.ClearToEmpty();
}
inline const std::string& OfferDetails::bonusvalue() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OfferDetails.bonusValue)
  return _internal_bonusvalue();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OfferDetails::set_bonusvalue(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bonusvalue_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.OfferDetails.bonusValue)
}
inline std::string* OfferDetails::mutable_bonusvalue() {
  std::string* _s = _internal_mutable_bonusvalue();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.OfferDetails.bonusValue)
  return _s;
}
inline const std::string& OfferDetails::_internal_bonusvalue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bonusvalue_.Get();
}
inline void OfferDetails::_internal_set_bonusvalue(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bonusvalue_.Set(value, GetArenaForAllocation());
}
inline std::string* OfferDetails::_internal_mutable_bonusvalue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bonusvalue_.Mutable( GetArenaForAllocation());
}
inline std::string* OfferDetails::release_bonusvalue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.OfferDetails.bonusValue)
  return _impl_.bonusvalue_.Release();
}
inline void OfferDetails::set_allocated_bonusvalue(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bonusvalue_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bonusvalue_.IsDefault()) {
          _impl_.bonusvalue_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.OfferDetails.bonusValue)
}

// int32 validCount = 3;
inline void OfferDetails::clear_validcount() {
  _impl_.validcount_ = 0;
}
inline ::int32_t OfferDetails::validcount() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OfferDetails.validCount)
  return _internal_validcount();
}
inline void OfferDetails::set_validcount(::int32_t value) {
  _internal_set_validcount(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.OfferDetails.validCount)
}
inline ::int32_t OfferDetails::_internal_validcount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.validcount_;
}
inline void OfferDetails::_internal_set_validcount(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.validcount_ = value;
}

// .google.protobuf.Timestamp validFromTimestamp = 4;
inline bool OfferDetails::has_validfromtimestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.validfromtimestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OfferDetails::_internal_validfromtimestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.validfromtimestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OfferDetails::validfromtimestamp() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OfferDetails.validFromTimestamp)
  return _internal_validfromtimestamp();
}
inline void OfferDetails::unsafe_arena_set_allocated_validfromtimestamp(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validfromtimestamp_);
  }
  _impl_.validfromtimestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.OfferDetails.validFromTimestamp)
}
inline ::google::protobuf::Timestamp* OfferDetails::release_validfromtimestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.validfromtimestamp_;
  _impl_.validfromtimestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* OfferDetails::unsafe_arena_release_validfromtimestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.OfferDetails.validFromTimestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.validfromtimestamp_;
  _impl_.validfromtimestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OfferDetails::_internal_mutable_validfromtimestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.validfromtimestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.validfromtimestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.validfromtimestamp_;
}
inline ::google::protobuf::Timestamp* OfferDetails::mutable_validfromtimestamp() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_validfromtimestamp();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.OfferDetails.validFromTimestamp)
  return _msg;
}
inline void OfferDetails::set_allocated_validfromtimestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validfromtimestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.validfromtimestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.OfferDetails.validFromTimestamp)
}

// .google.protobuf.Timestamp validUntilTimestamp = 5;
inline bool OfferDetails::has_validuntiltimestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.validuntiltimestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& OfferDetails::_internal_validuntiltimestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.validuntiltimestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& OfferDetails::validuntiltimestamp() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OfferDetails.validUntilTimestamp)
  return _internal_validuntiltimestamp();
}
inline void OfferDetails::unsafe_arena_set_allocated_validuntiltimestamp(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validuntiltimestamp_);
  }
  _impl_.validuntiltimestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Content.OfferDetails.validUntilTimestamp)
}
inline ::google::protobuf::Timestamp* OfferDetails::release_validuntiltimestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.validuntiltimestamp_;
  _impl_.validuntiltimestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* OfferDetails::unsafe_arena_release_validuntiltimestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Content.OfferDetails.validUntilTimestamp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.validuntiltimestamp_;
  _impl_.validuntiltimestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* OfferDetails::_internal_mutable_validuntiltimestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.validuntiltimestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.validuntiltimestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.validuntiltimestamp_;
}
inline ::google::protobuf::Timestamp* OfferDetails::mutable_validuntiltimestamp() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_validuntiltimestamp();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Content.OfferDetails.validUntilTimestamp)
  return _msg;
}
inline void OfferDetails::set_allocated_validuntiltimestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.validuntiltimestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.validuntiltimestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Content.OfferDetails.validUntilTimestamp)
}

// int32 sameRemainingCount = 6;
inline void OfferDetails::clear_sameremainingcount() {
  _impl_.sameremainingcount_ = 0;
}
inline ::int32_t OfferDetails::sameremainingcount() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OfferDetails.sameRemainingCount)
  return _internal_sameremainingcount();
}
inline void OfferDetails::set_sameremainingcount(::int32_t value) {
  _internal_set_sameremainingcount(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.OfferDetails.sameRemainingCount)
}
inline ::int32_t OfferDetails::_internal_sameremainingcount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sameremainingcount_;
}
inline void OfferDetails::_internal_set_sameremainingcount(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sameremainingcount_ = value;
}

// bool sameRemainingCountVisible = 7;
inline void OfferDetails::clear_sameremainingcountvisible() {
  _impl_.sameremainingcountvisible_ = false;
}
inline bool OfferDetails::sameremainingcountvisible() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Content.OfferDetails.sameRemainingCountVisible)
  return _internal_sameremainingcountvisible();
}
inline void OfferDetails::set_sameremainingcountvisible(bool value) {
  _internal_set_sameremainingcountvisible(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Content.OfferDetails.sameRemainingCountVisible)
}
inline bool OfferDetails::_internal_sameremainingcountvisible() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sameremainingcountvisible_;
}
inline void OfferDetails::_internal_set_sameremainingcountvisible(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sameremainingcountvisible_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Content
}  // namespace PrimePlatform
}  // namespace Digit


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Digit::PrimePlatform::Content::AnimationOnClaimType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Digit::PrimePlatform::Content::AnimationOnClaimType>() {
  return ::Digit::PrimePlatform::Content::AnimationOnClaimType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrimePlatform_2eContent_2eproto_2epb_2eh
