// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Client.SaveSystem.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Digit_2eClient_2eSaveSystem_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Digit_2eClient_2eSaveSystem_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_util.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Digit_2eClient_2eSaveSystem_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Digit_2eClient_2eSaveSystem_2eproto {
  static const ::uint32_t offsets[];
};
namespace Digit {
namespace Client {
namespace SaveSystem {
class CloudBlob;
struct CloudBlobDefaultTypeInternal;
extern CloudBlobDefaultTypeInternal _CloudBlob_default_instance_;
class CloudBlobMetaData;
struct CloudBlobMetaDataDefaultTypeInternal;
extern CloudBlobMetaDataDefaultTypeInternal _CloudBlobMetaData_default_instance_;
class CloudSection;
struct CloudSectionDefaultTypeInternal;
extern CloudSectionDefaultTypeInternal _CloudSection_default_instance_;
class CloudSectionMetaData;
struct CloudSectionMetaDataDefaultTypeInternal;
extern CloudSectionMetaDataDefaultTypeInternal _CloudSectionMetaData_default_instance_;
}  // namespace SaveSystem
}  // namespace Client
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Digit {
namespace Client {
namespace SaveSystem {
enum CloudSectionType : int {
  CLOUDSECTIONTYPE_BOOKMARKS = 0,
  CLOUDSECTIONTYPE_PLAYERPREFS = 1,
  CLOUDSECTIONTYPE_TUTORIALSTATE = 2,
  CLOUDSECTIONTYPE_NEWFLAGS = 3,
  CLOUDSECTIONTYPE_FAVOURITEDMISSIONS = 4,
  CLOUDSECTIONTYPE_ARCHIVEDMISSIONS = 5,
  CLOUDSECTIONTYPE_TCSLIDESHOWFLAG = 6,
  CloudSectionType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CloudSectionType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CloudSectionType_IsValid(int value);
constexpr CloudSectionType CloudSectionType_MIN = static_cast<CloudSectionType>(0);
constexpr CloudSectionType CloudSectionType_MAX = static_cast<CloudSectionType>(6);
constexpr int CloudSectionType_ARRAYSIZE = 6 + 1;
const std::string& CloudSectionType_Name(CloudSectionType value);
template <typename T>
const std::string& CloudSectionType_Name(T value) {
  static_assert(std::is_same<T, CloudSectionType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CloudSectionType_Name().");
  return CloudSectionType_Name(static_cast<CloudSectionType>(value));
}
const std::string& CloudSectionType_Name(CloudSectionType value);
bool CloudSectionType_Parse(absl::string_view name, CloudSectionType* value);
enum CloudFileType : int {
  CLOUDFILETYPE_STARTUP = 0,
  CLOUDFILETYPE_NORMAL = 1,
  CloudFileType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CloudFileType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CloudFileType_IsValid(int value);
constexpr CloudFileType CloudFileType_MIN = static_cast<CloudFileType>(0);
constexpr CloudFileType CloudFileType_MAX = static_cast<CloudFileType>(1);
constexpr int CloudFileType_ARRAYSIZE = 1 + 1;
const std::string& CloudFileType_Name(CloudFileType value);
template <typename T>
const std::string& CloudFileType_Name(T value) {
  static_assert(std::is_same<T, CloudFileType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CloudFileType_Name().");
  return CloudFileType_Name(static_cast<CloudFileType>(value));
}
const std::string& CloudFileType_Name(CloudFileType value);
bool CloudFileType_Parse(absl::string_view name, CloudFileType* value);

// ===================================================================


// -------------------------------------------------------------------

class CloudBlob final :
    public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Digit.Client.SaveSystem.CloudBlob) */ {
 public:
  inline CloudBlob() : CloudBlob(nullptr) {}
  ~CloudBlob() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CloudBlob(::google::protobuf::internal::ConstantInitialized);

  CloudBlob(const CloudBlob& from);
  CloudBlob(CloudBlob&& from) noexcept
    : CloudBlob() {
    *this = ::std::move(from);
  }

  inline CloudBlob& operator=(const CloudBlob& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudBlob& operator=(CloudBlob&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const CloudBlob& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloudBlob* internal_default_instance() {
    return reinterpret_cast<const CloudBlob*>(
               &_CloudBlob_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CloudBlob& a, CloudBlob& b) {
    a.Swap(&b);
  }
  inline void Swap(CloudBlob* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudBlob* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloudBlob* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CloudBlob>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)  final;
  void CopyFrom(const CloudBlob& from);
  void MergeFrom(const CloudBlob& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CloudBlob* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Client.SaveSystem.CloudBlob";
  }
  protected:
  explicit CloudBlob(::google::protobuf::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSectionsFieldNumber = 2,
    kMetadataFieldNumber = 1,
  };
  // repeated .Digit.Client.SaveSystem.CloudSection sections = 2;
  int sections_size() const;
  private:
  int _internal_sections_size() const;

  public:
  void clear_sections() ;
  ::Digit::Client::SaveSystem::CloudSection* mutable_sections(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::Client::SaveSystem::CloudSection >*
      mutable_sections();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::Client::SaveSystem::CloudSection>& _internal_sections() const;
  ::google::protobuf::RepeatedPtrField<::Digit::Client::SaveSystem::CloudSection>* _internal_mutable_sections();
  public:
  const ::Digit::Client::SaveSystem::CloudSection& sections(int index) const;
  ::Digit::Client::SaveSystem::CloudSection* add_sections();
  const ::google::protobuf::RepeatedPtrField< ::Digit::Client::SaveSystem::CloudSection >&
      sections() const;
  // .Digit.Client.SaveSystem.CloudBlobMetaData metadata = 1;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::Digit::Client::SaveSystem::CloudBlobMetaData& metadata() const;
  PROTOBUF_NODISCARD ::Digit::Client::SaveSystem::CloudBlobMetaData* release_metadata();
  ::Digit::Client::SaveSystem::CloudBlobMetaData* mutable_metadata();
  void set_allocated_metadata(::Digit::Client::SaveSystem::CloudBlobMetaData* value);
  void unsafe_arena_set_allocated_metadata(::Digit::Client::SaveSystem::CloudBlobMetaData* value);
  ::Digit::Client::SaveSystem::CloudBlobMetaData* unsafe_arena_release_metadata();

  private:
  const ::Digit::Client::SaveSystem::CloudBlobMetaData& _internal_metadata() const;
  ::Digit::Client::SaveSystem::CloudBlobMetaData* _internal_mutable_metadata();

  public:
  // @@protoc_insertion_point(class_scope:Digit.Client.SaveSystem.CloudBlob)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::Client::SaveSystem::CloudSection > sections_;
    ::Digit::Client::SaveSystem::CloudBlobMetaData* metadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2eClient_2eSaveSystem_2eproto;
};// -------------------------------------------------------------------

class CloudSection final :
    public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Digit.Client.SaveSystem.CloudSection) */ {
 public:
  inline CloudSection() : CloudSection(nullptr) {}
  ~CloudSection() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CloudSection(::google::protobuf::internal::ConstantInitialized);

  CloudSection(const CloudSection& from);
  CloudSection(CloudSection&& from) noexcept
    : CloudSection() {
    *this = ::std::move(from);
  }

  inline CloudSection& operator=(const CloudSection& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudSection& operator=(CloudSection&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const CloudSection& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloudSection* internal_default_instance() {
    return reinterpret_cast<const CloudSection*>(
               &_CloudSection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CloudSection& a, CloudSection& b) {
    a.Swap(&b);
  }
  inline void Swap(CloudSection* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudSection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloudSection* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CloudSection>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)  final;
  void CopyFrom(const CloudSection& from);
  void MergeFrom(const CloudSection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CloudSection* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Client.SaveSystem.CloudSection";
  }
  protected:
  explicit CloudSection(::google::protobuf::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupFieldNumber = 2,
    kMetadataFieldNumber = 1,
  };
  // bytes group = 2;
  void clear_group() ;
  const std::string& group() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_group(Arg_&& arg, Args_... args);
  std::string* mutable_group();
  PROTOBUF_NODISCARD std::string* release_group();
  void set_allocated_group(std::string* ptr);

  private:
  const std::string& _internal_group() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_group(
      const std::string& value);
  std::string* _internal_mutable_group();

  public:
  // .Digit.Client.SaveSystem.CloudSectionMetaData metadata = 1;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::Digit::Client::SaveSystem::CloudSectionMetaData& metadata() const;
  PROTOBUF_NODISCARD ::Digit::Client::SaveSystem::CloudSectionMetaData* release_metadata();
  ::Digit::Client::SaveSystem::CloudSectionMetaData* mutable_metadata();
  void set_allocated_metadata(::Digit::Client::SaveSystem::CloudSectionMetaData* value);
  void unsafe_arena_set_allocated_metadata(::Digit::Client::SaveSystem::CloudSectionMetaData* value);
  ::Digit::Client::SaveSystem::CloudSectionMetaData* unsafe_arena_release_metadata();

  private:
  const ::Digit::Client::SaveSystem::CloudSectionMetaData& _internal_metadata() const;
  ::Digit::Client::SaveSystem::CloudSectionMetaData* _internal_mutable_metadata();

  public:
  // @@protoc_insertion_point(class_scope:Digit.Client.SaveSystem.CloudSection)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr group_;
    ::Digit::Client::SaveSystem::CloudSectionMetaData* metadata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2eClient_2eSaveSystem_2eproto;
};// -------------------------------------------------------------------

class CloudSectionMetaData final :
    public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Digit.Client.SaveSystem.CloudSectionMetaData) */ {
 public:
  inline CloudSectionMetaData() : CloudSectionMetaData(nullptr) {}
  ~CloudSectionMetaData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CloudSectionMetaData(::google::protobuf::internal::ConstantInitialized);

  CloudSectionMetaData(const CloudSectionMetaData& from);
  CloudSectionMetaData(CloudSectionMetaData&& from) noexcept
    : CloudSectionMetaData() {
    *this = ::std::move(from);
  }

  inline CloudSectionMetaData& operator=(const CloudSectionMetaData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudSectionMetaData& operator=(CloudSectionMetaData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const CloudSectionMetaData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloudSectionMetaData* internal_default_instance() {
    return reinterpret_cast<const CloudSectionMetaData*>(
               &_CloudSectionMetaData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CloudSectionMetaData& a, CloudSectionMetaData& b) {
    a.Swap(&b);
  }
  inline void Swap(CloudSectionMetaData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudSectionMetaData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloudSectionMetaData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CloudSectionMetaData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)  final;
  void CopyFrom(const CloudSectionMetaData& from);
  void MergeFrom(const CloudSectionMetaData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CloudSectionMetaData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Client.SaveSystem.CloudSectionMetaData";
  }
  protected:
  explicit CloudSectionMetaData(::google::protobuf::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampFieldNumber = 1,
    kSectionTypeFieldNumber = 2,
  };
  // .google.protobuf.Timestamp timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp() ;
  const ::google::protobuf::Timestamp& timestamp() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_timestamp();

  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  ::google::protobuf::Timestamp* _internal_mutable_timestamp();

  public:
  // .Digit.Client.SaveSystem.CloudSectionType sectionType = 2;
  void clear_sectiontype() ;
  ::Digit::Client::SaveSystem::CloudSectionType sectiontype() const;
  void set_sectiontype(::Digit::Client::SaveSystem::CloudSectionType value);

  private:
  ::Digit::Client::SaveSystem::CloudSectionType _internal_sectiontype() const;
  void _internal_set_sectiontype(::Digit::Client::SaveSystem::CloudSectionType value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.Client.SaveSystem.CloudSectionMetaData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* timestamp_;
    int sectiontype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2eClient_2eSaveSystem_2eproto;
};// -------------------------------------------------------------------

class CloudBlobMetaData final :
    public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:Digit.Client.SaveSystem.CloudBlobMetaData) */ {
 public:
  inline CloudBlobMetaData() : CloudBlobMetaData(nullptr) {}
  ~CloudBlobMetaData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CloudBlobMetaData(::google::protobuf::internal::ConstantInitialized);

  CloudBlobMetaData(const CloudBlobMetaData& from);
  CloudBlobMetaData(CloudBlobMetaData&& from) noexcept
    : CloudBlobMetaData() {
    *this = ::std::move(from);
  }

  inline CloudBlobMetaData& operator=(const CloudBlobMetaData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloudBlobMetaData& operator=(CloudBlobMetaData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString);
  }
  inline std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<std::string>();
  }

  static const CloudBlobMetaData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloudBlobMetaData* internal_default_instance() {
    return reinterpret_cast<const CloudBlobMetaData*>(
               &_CloudBlobMetaData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CloudBlobMetaData& a, CloudBlobMetaData& b) {
    a.Swap(&b);
  }
  inline void Swap(CloudBlobMetaData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloudBlobMetaData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloudBlobMetaData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CloudBlobMetaData>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)  final;
  void CopyFrom(const CloudBlobMetaData& from);
  void MergeFrom(const CloudBlobMetaData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CloudBlobMetaData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Client.SaveSystem.CloudBlobMetaData";
  }
  protected:
  explicit CloudBlobMetaData(::google::protobuf::Arena* arena);
  public:

  std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFiletypeFieldNumber = 1,
  };
  // .Digit.Client.SaveSystem.CloudFileType filetype = 1;
  void clear_filetype() ;
  ::Digit::Client::SaveSystem::CloudFileType filetype() const;
  void set_filetype(::Digit::Client::SaveSystem::CloudFileType value);

  private:
  ::Digit::Client::SaveSystem::CloudFileType _internal_filetype() const;
  void _internal_set_filetype(::Digit::Client::SaveSystem::CloudFileType value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.Client.SaveSystem.CloudBlobMetaData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int filetype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2eClient_2eSaveSystem_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CloudBlob

// .Digit.Client.SaveSystem.CloudBlobMetaData metadata = 1;
inline bool CloudBlob::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void CloudBlob::clear_metadata() {
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::Client::SaveSystem::CloudBlobMetaData& CloudBlob::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::Client::SaveSystem::CloudBlobMetaData* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::Client::SaveSystem::CloudBlobMetaData&>(::Digit::Client::SaveSystem::_CloudBlobMetaData_default_instance_);
}
inline const ::Digit::Client::SaveSystem::CloudBlobMetaData& CloudBlob::metadata() const {
  // @@protoc_insertion_point(field_get:Digit.Client.SaveSystem.CloudBlob.metadata)
  return _internal_metadata();
}
inline void CloudBlob::unsafe_arena_set_allocated_metadata(::Digit::Client::SaveSystem::CloudBlobMetaData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::Digit::Client::SaveSystem::CloudBlobMetaData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.Client.SaveSystem.CloudBlob.metadata)
}
inline ::Digit::Client::SaveSystem::CloudBlobMetaData* CloudBlob::release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::Client::SaveSystem::CloudBlobMetaData* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::Client::SaveSystem::CloudBlobMetaData* CloudBlob::unsafe_arena_release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.Client.SaveSystem.CloudBlob.metadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::Client::SaveSystem::CloudBlobMetaData* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::Digit::Client::SaveSystem::CloudBlobMetaData* CloudBlob::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::Client::SaveSystem::CloudBlobMetaData>(GetArenaForAllocation());
    _impl_.metadata_ = reinterpret_cast<::Digit::Client::SaveSystem::CloudBlobMetaData*>(p);
  }
  return _impl_.metadata_;
}
inline ::Digit::Client::SaveSystem::CloudBlobMetaData* CloudBlob::mutable_metadata() {
  ::Digit::Client::SaveSystem::CloudBlobMetaData* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:Digit.Client.SaveSystem.CloudBlob.metadata)
  return _msg;
}
inline void CloudBlob::set_allocated_metadata(::Digit::Client::SaveSystem::CloudBlobMetaData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::Client::SaveSystem::CloudBlobMetaData*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::Client::SaveSystem::CloudBlobMetaData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.metadata_ = reinterpret_cast<::Digit::Client::SaveSystem::CloudBlobMetaData*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.Client.SaveSystem.CloudBlob.metadata)
}

// repeated .Digit.Client.SaveSystem.CloudSection sections = 2;
inline int CloudBlob::_internal_sections_size() const {
  return _internal_sections().size();
}
inline int CloudBlob::sections_size() const {
  return _internal_sections_size();
}
inline void CloudBlob::clear_sections() {
  _internal_mutable_sections()->Clear();
}
inline ::Digit::Client::SaveSystem::CloudSection* CloudBlob::mutable_sections(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.Client.SaveSystem.CloudBlob.sections)
  return _internal_mutable_sections()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::Client::SaveSystem::CloudSection >*
CloudBlob::mutable_sections() {
  // @@protoc_insertion_point(field_mutable_list:Digit.Client.SaveSystem.CloudBlob.sections)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_sections();
}
inline const ::Digit::Client::SaveSystem::CloudSection& CloudBlob::sections(int index) const {
  // @@protoc_insertion_point(field_get:Digit.Client.SaveSystem.CloudBlob.sections)
    return _internal_sections().Get(index);
}
inline ::Digit::Client::SaveSystem::CloudSection* CloudBlob::add_sections() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::Client::SaveSystem::CloudSection* _add = _internal_mutable_sections()->Add();
  // @@protoc_insertion_point(field_add:Digit.Client.SaveSystem.CloudBlob.sections)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::Client::SaveSystem::CloudSection >&
CloudBlob::sections() const {
  // @@protoc_insertion_point(field_list:Digit.Client.SaveSystem.CloudBlob.sections)
  return _internal_sections();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::Client::SaveSystem::CloudSection>&
CloudBlob::_internal_sections() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sections_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::Client::SaveSystem::CloudSection>*
CloudBlob::_internal_mutable_sections() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.sections_;
}

// -------------------------------------------------------------------

// CloudSection

// .Digit.Client.SaveSystem.CloudSectionMetaData metadata = 1;
inline bool CloudSection::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void CloudSection::clear_metadata() {
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::Client::SaveSystem::CloudSectionMetaData& CloudSection::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::Client::SaveSystem::CloudSectionMetaData* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::Client::SaveSystem::CloudSectionMetaData&>(::Digit::Client::SaveSystem::_CloudSectionMetaData_default_instance_);
}
inline const ::Digit::Client::SaveSystem::CloudSectionMetaData& CloudSection::metadata() const {
  // @@protoc_insertion_point(field_get:Digit.Client.SaveSystem.CloudSection.metadata)
  return _internal_metadata();
}
inline void CloudSection::unsafe_arena_set_allocated_metadata(::Digit::Client::SaveSystem::CloudSectionMetaData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::Digit::Client::SaveSystem::CloudSectionMetaData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.Client.SaveSystem.CloudSection.metadata)
}
inline ::Digit::Client::SaveSystem::CloudSectionMetaData* CloudSection::release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::Client::SaveSystem::CloudSectionMetaData* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::Client::SaveSystem::CloudSectionMetaData* CloudSection::unsafe_arena_release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.Client.SaveSystem.CloudSection.metadata)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::Client::SaveSystem::CloudSectionMetaData* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::Digit::Client::SaveSystem::CloudSectionMetaData* CloudSection::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::Client::SaveSystem::CloudSectionMetaData>(GetArenaForAllocation());
    _impl_.metadata_ = reinterpret_cast<::Digit::Client::SaveSystem::CloudSectionMetaData*>(p);
  }
  return _impl_.metadata_;
}
inline ::Digit::Client::SaveSystem::CloudSectionMetaData* CloudSection::mutable_metadata() {
  ::Digit::Client::SaveSystem::CloudSectionMetaData* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:Digit.Client.SaveSystem.CloudSection.metadata)
  return _msg;
}
inline void CloudSection::set_allocated_metadata(::Digit::Client::SaveSystem::CloudSectionMetaData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::Client::SaveSystem::CloudSectionMetaData*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::Client::SaveSystem::CloudSectionMetaData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.metadata_ = reinterpret_cast<::Digit::Client::SaveSystem::CloudSectionMetaData*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.Client.SaveSystem.CloudSection.metadata)
}

// bytes group = 2;
inline void CloudSection::clear_group() {
  _impl_.group_.ClearToEmpty();
}
inline const std::string& CloudSection::group() const {
  // @@protoc_insertion_point(field_get:Digit.Client.SaveSystem.CloudSection.group)
  return _internal_group();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloudSection::set_group(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.group_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.Client.SaveSystem.CloudSection.group)
}
inline std::string* CloudSection::mutable_group() {
  std::string* _s = _internal_mutable_group();
  // @@protoc_insertion_point(field_mutable:Digit.Client.SaveSystem.CloudSection.group)
  return _s;
}
inline const std::string& CloudSection::_internal_group() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.group_.Get();
}
inline void CloudSection::_internal_set_group(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.group_.Set(value, GetArenaForAllocation());
}
inline std::string* CloudSection::_internal_mutable_group() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.group_.Mutable( GetArenaForAllocation());
}
inline std::string* CloudSection::release_group() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.Client.SaveSystem.CloudSection.group)
  return _impl_.group_.Release();
}
inline void CloudSection::set_allocated_group(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.group_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.group_.IsDefault()) {
          _impl_.group_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.Client.SaveSystem.CloudSection.group)
}

// -------------------------------------------------------------------

// CloudSectionMetaData

// .google.protobuf.Timestamp timestamp = 1;
inline bool CloudSectionMetaData::has_timestamp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.timestamp_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& CloudSectionMetaData::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& CloudSectionMetaData::timestamp() const {
  // @@protoc_insertion_point(field_get:Digit.Client.SaveSystem.CloudSectionMetaData.timestamp)
  return _internal_timestamp();
}
inline void CloudSectionMetaData::unsafe_arena_set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }
  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.Client.SaveSystem.CloudSectionMetaData.timestamp)
}
inline ::google::protobuf::Timestamp* CloudSectionMetaData::release_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* CloudSectionMetaData::unsafe_arena_release_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.Client.SaveSystem.CloudSectionMetaData.timestamp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.timestamp_;
  _impl_.timestamp_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* CloudSectionMetaData::_internal_mutable_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.timestamp_;
}
inline ::google::protobuf::Timestamp* CloudSectionMetaData::mutable_timestamp() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_timestamp();
  // @@protoc_insertion_point(field_mutable:Digit.Client.SaveSystem.CloudSectionMetaData.timestamp)
  return _msg;
}
inline void CloudSectionMetaData::set_allocated_timestamp(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.timestamp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.timestamp_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.Client.SaveSystem.CloudSectionMetaData.timestamp)
}

// .Digit.Client.SaveSystem.CloudSectionType sectionType = 2;
inline void CloudSectionMetaData::clear_sectiontype() {
  _impl_.sectiontype_ = 0;
}
inline ::Digit::Client::SaveSystem::CloudSectionType CloudSectionMetaData::sectiontype() const {
  // @@protoc_insertion_point(field_get:Digit.Client.SaveSystem.CloudSectionMetaData.sectionType)
  return _internal_sectiontype();
}
inline void CloudSectionMetaData::set_sectiontype(::Digit::Client::SaveSystem::CloudSectionType value) {
  _internal_set_sectiontype(value);
  // @@protoc_insertion_point(field_set:Digit.Client.SaveSystem.CloudSectionMetaData.sectionType)
}
inline ::Digit::Client::SaveSystem::CloudSectionType CloudSectionMetaData::_internal_sectiontype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::Client::SaveSystem::CloudSectionType>(_impl_.sectiontype_);
}
inline void CloudSectionMetaData::_internal_set_sectiontype(::Digit::Client::SaveSystem::CloudSectionType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sectiontype_ = value;
}

// -------------------------------------------------------------------

// CloudBlobMetaData

// .Digit.Client.SaveSystem.CloudFileType filetype = 1;
inline void CloudBlobMetaData::clear_filetype() {
  _impl_.filetype_ = 0;
}
inline ::Digit::Client::SaveSystem::CloudFileType CloudBlobMetaData::filetype() const {
  // @@protoc_insertion_point(field_get:Digit.Client.SaveSystem.CloudBlobMetaData.filetype)
  return _internal_filetype();
}
inline void CloudBlobMetaData::set_filetype(::Digit::Client::SaveSystem::CloudFileType value) {
  _internal_set_filetype(value);
  // @@protoc_insertion_point(field_set:Digit.Client.SaveSystem.CloudBlobMetaData.filetype)
}
inline ::Digit::Client::SaveSystem::CloudFileType CloudBlobMetaData::_internal_filetype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::Client::SaveSystem::CloudFileType>(_impl_.filetype_);
}
inline void CloudBlobMetaData::_internal_set_filetype(::Digit::Client::SaveSystem::CloudFileType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filetype_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace SaveSystem
}  // namespace Client
}  // namespace Digit


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Digit::Client::SaveSystem::CloudSectionType> : std::true_type {};
template <>
struct is_proto_enum<::Digit::Client::SaveSystem::CloudFileType> : std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Digit_2eClient_2eSaveSystem_2eproto_2epb_2eh
