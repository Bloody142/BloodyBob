// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.PrimePlatform.Models.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrimePlatform_2eModels_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrimePlatform_2eModels_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "Digit.PrimePlatform.Content.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Digit_2ePrimePlatform_2eModels_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Digit_2ePrimePlatform_2eModels_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Digit_2ePrimePlatform_2eModels_2eproto;
namespace Digit {
namespace PrimePlatform {
namespace Models {
class CacheHints;
struct CacheHintsDefaultTypeInternal;
extern CacheHintsDefaultTypeInternal _CacheHints_default_instance_;
class EventEntryData;
struct EventEntryDataDefaultTypeInternal;
extern EventEntryDataDefaultTypeInternal _EventEntryData_default_instance_;
class EventHighlights;
struct EventHighlightsDefaultTypeInternal;
extern EventHighlightsDefaultTypeInternal _EventHighlights_default_instance_;
class EventMetadata;
struct EventMetadataDefaultTypeInternal;
extern EventMetadataDefaultTypeInternal _EventMetadata_default_instance_;
class EventModel;
struct EventModelDefaultTypeInternal;
extern EventModelDefaultTypeInternal _EventModel_default_instance_;
class EventNotification;
struct EventNotificationDefaultTypeInternal;
extern EventNotificationDefaultTypeInternal _EventNotification_default_instance_;
class EventRank;
struct EventRankDefaultTypeInternal;
extern EventRankDefaultTypeInternal _EventRank_default_instance_;
class EventRanking;
struct EventRankingDefaultTypeInternal;
extern EventRankingDefaultTypeInternal _EventRanking_default_instance_;
class EventReward;
struct EventRewardDefaultTypeInternal;
extern EventRewardDefaultTypeInternal _EventReward_default_instance_;
class EventSchedule;
struct EventScheduleDefaultTypeInternal;
extern EventScheduleDefaultTypeInternal _EventSchedule_default_instance_;
class EventScoringInfo;
struct EventScoringInfoDefaultTypeInternal;
extern EventScoringInfoDefaultTypeInternal _EventScoringInfo_default_instance_;
class EventSegment;
struct EventSegmentDefaultTypeInternal;
extern EventSegmentDefaultTypeInternal _EventSegment_default_instance_;
class EventVideoAssets;
struct EventVideoAssetsDefaultTypeInternal;
extern EventVideoAssetsDefaultTypeInternal _EventVideoAssets_default_instance_;
class Events;
struct EventsDefaultTypeInternal;
extern EventsDefaultTypeInternal _Events_default_instance_;
class GameNewsHolder;
struct GameNewsHolderDefaultTypeInternal;
extern GameNewsHolderDefaultTypeInternal _GameNewsHolder_default_instance_;
class GameNewsMetadata;
struct GameNewsMetadataDefaultTypeInternal;
extern GameNewsMetadataDefaultTypeInternal _GameNewsMetadata_default_instance_;
class GameNewsModel;
struct GameNewsModelDefaultTypeInternal;
extern GameNewsModelDefaultTypeInternal _GameNewsModel_default_instance_;
class Instance;
struct InstanceDefaultTypeInternal;
extern InstanceDefaultTypeInternal _Instance_default_instance_;
class Minigame;
struct MinigameDefaultTypeInternal;
extern MinigameDefaultTypeInternal _Minigame_default_instance_;
class MinigameHolder;
struct MinigameHolderDefaultTypeInternal;
extern MinigameHolderDefaultTypeInternal _MinigameHolder_default_instance_;
class MinigameStage;
struct MinigameStageDefaultTypeInternal;
extern MinigameStageDefaultTypeInternal _MinigameStage_default_instance_;
class Notifications;
struct NotificationsDefaultTypeInternal;
extern NotificationsDefaultTypeInternal _Notifications_default_instance_;
class PlatformUserProfile;
struct PlatformUserProfileDefaultTypeInternal;
extern PlatformUserProfileDefaultTypeInternal _PlatformUserProfile_default_instance_;
class PlatformUserProfileResponse;
struct PlatformUserProfileResponseDefaultTypeInternal;
extern PlatformUserProfileResponseDefaultTypeInternal _PlatformUserProfileResponse_default_instance_;
class PlayerStats;
struct PlayerStatsDefaultTypeInternal;
extern PlayerStatsDefaultTypeInternal _PlayerStats_default_instance_;
class PlayerStatsEntry;
struct PlayerStatsEntryDefaultTypeInternal;
extern PlayerStatsEntryDefaultTypeInternal _PlayerStatsEntry_default_instance_;
class PlayerStatsGroup;
struct PlayerStatsGroupDefaultTypeInternal;
extern PlayerStatsGroupDefaultTypeInternal _PlayerStatsGroup_default_instance_;
class PlayerTransferState;
struct PlayerTransferStateDefaultTypeInternal;
extern PlayerTransferStateDefaultTypeInternal _PlayerTransferState_default_instance_;
class PlayerlifecycleNotification;
struct PlayerlifecycleNotificationDefaultTypeInternal;
extern PlayerlifecycleNotificationDefaultTypeInternal _PlayerlifecycleNotification_default_instance_;
class Product;
struct ProductDefaultTypeInternal;
extern ProductDefaultTypeInternal _Product_default_instance_;
class ProductInfoHolder;
struct ProductInfoHolderDefaultTypeInternal;
extern ProductInfoHolderDefaultTypeInternal _ProductInfoHolder_default_instance_;
class Region;
struct RegionDefaultTypeInternal;
extern RegionDefaultTypeInternal _Region_default_instance_;
class RepeatedInt32;
struct RepeatedInt32DefaultTypeInternal;
extern RepeatedInt32DefaultTypeInternal _RepeatedInt32_default_instance_;
class TranslationCacheUpdate;
struct TranslationCacheUpdateDefaultTypeInternal;
extern TranslationCacheUpdateDefaultTypeInternal _TranslationCacheUpdate_default_instance_;
}  // namespace Models
}  // namespace PrimePlatform
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Digit {
namespace PrimePlatform {
namespace Models {
enum EventCategories : int {
  EVENTCATEGORIES_STANDARD = 0,
  EVENTCATEGORIES_DAILYGOALS = 1,
  EVENTCATEGORIES_DAILYMILESTONE = 2,
  EVENTCATEGORIES_LEADERBOARD = 3,
  EVENTCATEGORIES_STAT = 4,
  EVENTCATEGORIES_BATTLEPASSSEASON = 5,
  EVENTCATEGORIES_BATTLEPASSEVENT = 6,
  EVENTCATEGORIES_TREASURYPROGRESS = 7,
  EVENTCATEGORIES_TREASURYREWARD = 8,
  EVENTCATEGORIES_SERVERCLASHEVENT = 9,
  EVENTCATEGORIES_WEBSTOREEVENT = 10,
  EVENTCATEGORIES_PLAYERLIFECYCLE = 11,
  EVENTCATEGORIES_FIELDTRAINING = 12,
  EVENTCATEGORIES_FTCATEGORY = 13,
  EVENTCATEGORIES_CUTSCENES = 14,
  EVENTCATEGORIES_MINIGAMECATEGORY = 15,
  EVENTCATEGORIES_MINIGAMESTAGE = 16,
  EventCategories_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  EventCategories_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool EventCategories_IsValid(int value);
constexpr EventCategories EventCategories_MIN = static_cast<EventCategories>(0);
constexpr EventCategories EventCategories_MAX = static_cast<EventCategories>(16);
constexpr int EventCategories_ARRAYSIZE = 16 + 1;
const ::google::protobuf::EnumDescriptor*
EventCategories_descriptor();
template <typename T>
const std::string& EventCategories_Name(T value) {
  static_assert(std::is_same<T, EventCategories>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EventCategories_Name().");
  return EventCategories_Name(static_cast<EventCategories>(value));
}
template <>
inline const std::string& EventCategories_Name(EventCategories value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EventCategories_descriptor,
                                                 0, 16>(
      static_cast<int>(value));
}
inline bool EventCategories_Parse(absl::string_view name, EventCategories* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventCategories>(
      EventCategories_descriptor(), name, value);
}
enum JoinForbidden : int {
  JOINFORBIDDEN_NONE = 0,
  JOINFORBIDDEN_EVENTINPROGRESS = 1,
  JoinForbidden_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  JoinForbidden_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool JoinForbidden_IsValid(int value);
constexpr JoinForbidden JoinForbidden_MIN = static_cast<JoinForbidden>(0);
constexpr JoinForbidden JoinForbidden_MAX = static_cast<JoinForbidden>(1);
constexpr int JoinForbidden_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
JoinForbidden_descriptor();
template <typename T>
const std::string& JoinForbidden_Name(T value) {
  static_assert(std::is_same<T, JoinForbidden>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to JoinForbidden_Name().");
  return JoinForbidden_Name(static_cast<JoinForbidden>(value));
}
template <>
inline const std::string& JoinForbidden_Name(JoinForbidden value) {
  return ::google::protobuf::internal::NameOfDenseEnum<JoinForbidden_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool JoinForbidden_Parse(absl::string_view name, JoinForbidden* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinForbidden>(
      JoinForbidden_descriptor(), name, value);
}
enum BattlePassType : int {
  BATTLEPASSTYPE_STANDARD = 0,
  BATTLEPASSTYPE_TERRITORYCAPTURE = 1,
  BattlePassType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BattlePassType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BattlePassType_IsValid(int value);
constexpr BattlePassType BattlePassType_MIN = static_cast<BattlePassType>(0);
constexpr BattlePassType BattlePassType_MAX = static_cast<BattlePassType>(1);
constexpr int BattlePassType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BattlePassType_descriptor();
template <typename T>
const std::string& BattlePassType_Name(T value) {
  static_assert(std::is_same<T, BattlePassType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BattlePassType_Name().");
  return BattlePassType_Name(static_cast<BattlePassType>(value));
}
template <>
inline const std::string& BattlePassType_Name(BattlePassType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BattlePassType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BattlePassType_Parse(absl::string_view name, BattlePassType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BattlePassType>(
      BattlePassType_descriptor(), name, value);
}
enum PlacementType : int {
  PLACEMENTTYPE_POSITION = 0,
  PLACEMENTTYPE_MILESTONE = 1,
  PlacementType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PlacementType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PlacementType_IsValid(int value);
constexpr PlacementType PlacementType_MIN = static_cast<PlacementType>(0);
constexpr PlacementType PlacementType_MAX = static_cast<PlacementType>(1);
constexpr int PlacementType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PlacementType_descriptor();
template <typename T>
const std::string& PlacementType_Name(T value) {
  static_assert(std::is_same<T, PlacementType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PlacementType_Name().");
  return PlacementType_Name(static_cast<PlacementType>(value));
}
template <>
inline const std::string& PlacementType_Name(PlacementType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PlacementType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PlacementType_Parse(absl::string_view name, PlacementType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlacementType>(
      PlacementType_descriptor(), name, value);
}
enum SegmentType : int {
  SEGMENTTYPE_ALL = 0,
  SEGMENTTYPE_RANGE = 1,
  SEGMENTTYPE_EACH = 2,
  SEGMENTTYPE_MATCH = 3,
  SEGMENTTYPE_GROUP = 4,
  SEGMENTTYPE_VOID = 5,
  SEGMENTTYPE_EACHAND = 6,
  SEGMENTTYPE_RANGEMULTI = 7,
  SegmentType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SegmentType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SegmentType_IsValid(int value);
constexpr SegmentType SegmentType_MIN = static_cast<SegmentType>(0);
constexpr SegmentType SegmentType_MAX = static_cast<SegmentType>(7);
constexpr int SegmentType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
SegmentType_descriptor();
template <typename T>
const std::string& SegmentType_Name(T value) {
  static_assert(std::is_same<T, SegmentType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SegmentType_Name().");
  return SegmentType_Name(static_cast<SegmentType>(value));
}
template <>
inline const std::string& SegmentType_Name(SegmentType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SegmentType_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool SegmentType_Parse(absl::string_view name, SegmentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SegmentType>(
      SegmentType_descriptor(), name, value);
}
enum PlayerlifecycleContentType : int {
  PLAYERLIFECYCLECONTENTTYPE_NEWS = 0,
  PLAYERLIFECYCLECONTENTTYPE_BUNDLES = 1,
  PLAYERLIFECYCLECONTENTTYPE_EVENTS = 2,
  PlayerlifecycleContentType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PlayerlifecycleContentType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PlayerlifecycleContentType_IsValid(int value);
constexpr PlayerlifecycleContentType PlayerlifecycleContentType_MIN = static_cast<PlayerlifecycleContentType>(0);
constexpr PlayerlifecycleContentType PlayerlifecycleContentType_MAX = static_cast<PlayerlifecycleContentType>(2);
constexpr int PlayerlifecycleContentType_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PlayerlifecycleContentType_descriptor();
template <typename T>
const std::string& PlayerlifecycleContentType_Name(T value) {
  static_assert(std::is_same<T, PlayerlifecycleContentType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PlayerlifecycleContentType_Name().");
  return PlayerlifecycleContentType_Name(static_cast<PlayerlifecycleContentType>(value));
}
template <>
inline const std::string& PlayerlifecycleContentType_Name(PlayerlifecycleContentType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PlayerlifecycleContentType_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PlayerlifecycleContentType_Parse(absl::string_view name, PlayerlifecycleContentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerlifecycleContentType>(
      PlayerlifecycleContentType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class EventEntryData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventEntryData) */ {
 public:
  inline EventEntryData() : EventEntryData(nullptr) {}
  ~EventEntryData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventEntryData(::google::protobuf::internal::ConstantInitialized);

  EventEntryData(const EventEntryData& from);
  EventEntryData(EventEntryData&& from) noexcept
    : EventEntryData() {
    *this = ::std::move(from);
  }

  inline EventEntryData& operator=(const EventEntryData& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventEntryData& operator=(EventEntryData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventEntryData& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventEntryData* internal_default_instance() {
    return reinterpret_cast<const EventEntryData*>(
               &_EventEntryData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(EventEntryData& a, EventEntryData& b) {
    a.Swap(&b);
  }
  inline void Swap(EventEntryData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventEntryData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventEntryData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventEntryData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventEntryData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventEntryData& from) {
    EventEntryData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventEntryData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventEntryData";
  }
  protected:
  explicit EventEntryData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsRegisteredFieldNumber = 1,
    kCanClaimFieldNumber = 2,
    kLastClaimedRewardIndexFieldNumber = 3,
    kJoinForbiddenFieldNumber = 4,
  };
  // bool isRegistered = 1;
  void clear_isregistered() ;
  bool isregistered() const;
  void set_isregistered(bool value);

  private:
  bool _internal_isregistered() const;
  void _internal_set_isregistered(bool value);

  public:
  // bool canClaim = 2;
  void clear_canclaim() ;
  bool canclaim() const;
  void set_canclaim(bool value);

  private:
  bool _internal_canclaim() const;
  void _internal_set_canclaim(bool value);

  public:
  // int32 lastClaimedRewardIndex = 3;
  void clear_lastclaimedrewardindex() ;
  ::int32_t lastclaimedrewardindex() const;
  void set_lastclaimedrewardindex(::int32_t value);

  private:
  ::int32_t _internal_lastclaimedrewardindex() const;
  void _internal_set_lastclaimedrewardindex(::int32_t value);

  public:
  // .Digit.PrimePlatform.Models.JoinForbidden joinForbidden = 4;
  void clear_joinforbidden() ;
  ::Digit::PrimePlatform::Models::JoinForbidden joinforbidden() const;
  void set_joinforbidden(::Digit::PrimePlatform::Models::JoinForbidden value);

  private:
  ::Digit::PrimePlatform::Models::JoinForbidden _internal_joinforbidden() const;
  void _internal_set_joinforbidden(::Digit::PrimePlatform::Models::JoinForbidden value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventEntryData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool isregistered_;
    bool canclaim_;
    ::int32_t lastclaimedrewardindex_;
    int joinforbidden_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventHighlights final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventHighlights) */ {
 public:
  inline EventHighlights() : EventHighlights(nullptr) {}
  ~EventHighlights() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventHighlights(::google::protobuf::internal::ConstantInitialized);

  EventHighlights(const EventHighlights& from);
  EventHighlights(EventHighlights&& from) noexcept
    : EventHighlights() {
    *this = ::std::move(from);
  }

  inline EventHighlights& operator=(const EventHighlights& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventHighlights& operator=(EventHighlights&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventHighlights& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventHighlights* internal_default_instance() {
    return reinterpret_cast<const EventHighlights*>(
               &_EventHighlights_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(EventHighlights& a, EventHighlights& b) {
    a.Swap(&b);
  }
  inline void Swap(EventHighlights* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventHighlights* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventHighlights* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventHighlights>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventHighlights& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventHighlights& from) {
    EventHighlights::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventHighlights* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventHighlights";
  }
  protected:
  explicit EventHighlights(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNodeIdsFieldNumber = 2,
    kSpecialIdsFieldNumber = 3,
    kCalloutAssetIdFieldNumber = 4,
    kTypeFieldNumber = 1,
  };
  // repeated int64 nodeIds = 2;
  int nodeids_size() const;
  private:
  int _internal_nodeids_size() const;

  public:
  void clear_nodeids() ;
  ::int64_t nodeids(int index) const;
  void set_nodeids(int index, ::int64_t value);
  void add_nodeids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& nodeids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_nodeids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_nodeids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_nodeids();

  public:
  // repeated int64 specialIds = 3;
  int specialids_size() const;
  private:
  int _internal_specialids_size() const;

  public:
  void clear_specialids() ;
  ::int64_t specialids(int index) const;
  void set_specialids(int index, ::int64_t value);
  void add_specialids(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& specialids() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_specialids();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_specialids() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_specialids();

  public:
  // string calloutAssetId = 4;
  void clear_calloutassetid() ;
  const std::string& calloutassetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_calloutassetid(Arg_&& arg, Args_... args);
  std::string* mutable_calloutassetid();
  PROTOBUF_NODISCARD std::string* release_calloutassetid();
  void set_allocated_calloutassetid(std::string* ptr);

  private:
  const std::string& _internal_calloutassetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_calloutassetid(
      const std::string& value);
  std::string* _internal_mutable_calloutassetid();

  public:
  // int32 type = 1;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventHighlights)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 65, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int64_t> nodeids_;
    mutable ::google::protobuf::internal::CachedSize _nodeids_cached_byte_size_;
    ::google::protobuf::RepeatedField<::int64_t> specialids_;
    mutable ::google::protobuf::internal::CachedSize _specialids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr calloutassetid_;
    ::int32_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventMetadata) */ {
 public:
  inline EventMetadata() : EventMetadata(nullptr) {}
  ~EventMetadata() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventMetadata(::google::protobuf::internal::ConstantInitialized);

  EventMetadata(const EventMetadata& from);
  EventMetadata(EventMetadata&& from) noexcept
    : EventMetadata() {
    *this = ::std::move(from);
  }

  inline EventMetadata& operator=(const EventMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventMetadata& operator=(EventMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventMetadata* internal_default_instance() {
    return reinterpret_cast<const EventMetadata*>(
               &_EventMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EventMetadata& a, EventMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(EventMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventMetadata& from) {
    EventMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventMetadata* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventMetadata";
  }
  protected:
  explicit EventMetadata(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScoringInfoFieldNumber = 9,
    kHighlightsFieldNumber = 12,
    kGroupInstancesFieldNumber = 18,
    kIconAssetIdFieldNumber = 5,
    kIconAssetFilenameFieldNumber = 6,
    kVisualAssetFieldNumber = 7,
    kVisualAssetFilenameFieldNumber = 8,
    kUnlockItemIdFieldNumber = 14,
    kVisualVideoIdFieldNumber = 20,
    kBattlePassLinkFieldNumber = 22,
    kBattlePassResourceIdFieldNumber = 23,
    kBucketFieldNumber = 13,
    kServerTransferCostFieldNumber = 17,
    kVisualVideoAssetsFieldNumber = 21,
    kCtaFieldNumber = 10,
    kIsAutoRegisterFieldNumber = 1,
    kAutoRewardFieldNumber = 2,
    kImmediateRewardFieldNumber = 3,
    kCanShowcaseFieldNumber = 4,
    kIsUniqueWinnerFieldNumber = 15,
    kIsCrossServerFieldNumber = 16,
    kRespectPriorityFieldNumber = 19,
    kMinigameLockFieldNumber = 25,
    kPriorityFieldNumber = 11,
    kBattlePassTypeFieldNumber = 24,
    kMinigameLevelMinFieldNumber = 26,
    kMinigameLevelMaxFieldNumber = 27,
  };
  // repeated .Digit.PrimePlatform.Models.EventScoringInfo scoringInfo = 9;
  int scoringinfo_size() const;
  private:
  int _internal_scoringinfo_size() const;

  public:
  void clear_scoringinfo() ;
  ::Digit::PrimePlatform::Models::EventScoringInfo* mutable_scoringinfo(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventScoringInfo >*
      mutable_scoringinfo();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventScoringInfo>& _internal_scoringinfo() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventScoringInfo>* _internal_mutable_scoringinfo();
  public:
  const ::Digit::PrimePlatform::Models::EventScoringInfo& scoringinfo(int index) const;
  ::Digit::PrimePlatform::Models::EventScoringInfo* add_scoringinfo();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventScoringInfo >&
      scoringinfo() const;
  // repeated .Digit.PrimePlatform.Models.EventHighlights highlights = 12;
  int highlights_size() const;
  private:
  int _internal_highlights_size() const;

  public:
  void clear_highlights() ;
  ::Digit::PrimePlatform::Models::EventHighlights* mutable_highlights(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventHighlights >*
      mutable_highlights();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventHighlights>& _internal_highlights() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventHighlights>* _internal_mutable_highlights();
  public:
  const ::Digit::PrimePlatform::Models::EventHighlights& highlights(int index) const;
  ::Digit::PrimePlatform::Models::EventHighlights* add_highlights();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventHighlights >&
      highlights() const;
  // repeated .Digit.PrimePlatform.Models.RepeatedInt32 groupInstances = 18;
  int groupinstances_size() const;
  private:
  int _internal_groupinstances_size() const;

  public:
  void clear_groupinstances() ;
  ::Digit::PrimePlatform::Models::RepeatedInt32* mutable_groupinstances(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::RepeatedInt32 >*
      mutable_groupinstances();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::RepeatedInt32>& _internal_groupinstances() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::RepeatedInt32>* _internal_mutable_groupinstances();
  public:
  const ::Digit::PrimePlatform::Models::RepeatedInt32& groupinstances(int index) const;
  ::Digit::PrimePlatform::Models::RepeatedInt32* add_groupinstances();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::RepeatedInt32 >&
      groupinstances() const;
  // string iconAssetId = 5;
  void clear_iconassetid() ;
  const std::string& iconassetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_iconassetid(Arg_&& arg, Args_... args);
  std::string* mutable_iconassetid();
  PROTOBUF_NODISCARD std::string* release_iconassetid();
  void set_allocated_iconassetid(std::string* ptr);

  private:
  const std::string& _internal_iconassetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_iconassetid(
      const std::string& value);
  std::string* _internal_mutable_iconassetid();

  public:
  // string iconAssetFilename = 6;
  void clear_iconassetfilename() ;
  const std::string& iconassetfilename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_iconassetfilename(Arg_&& arg, Args_... args);
  std::string* mutable_iconassetfilename();
  PROTOBUF_NODISCARD std::string* release_iconassetfilename();
  void set_allocated_iconassetfilename(std::string* ptr);

  private:
  const std::string& _internal_iconassetfilename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_iconassetfilename(
      const std::string& value);
  std::string* _internal_mutable_iconassetfilename();

  public:
  // string visualAsset = 7;
  void clear_visualasset() ;
  const std::string& visualasset() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_visualasset(Arg_&& arg, Args_... args);
  std::string* mutable_visualasset();
  PROTOBUF_NODISCARD std::string* release_visualasset();
  void set_allocated_visualasset(std::string* ptr);

  private:
  const std::string& _internal_visualasset() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_visualasset(
      const std::string& value);
  std::string* _internal_mutable_visualasset();

  public:
  // string visualAssetFilename = 8;
  void clear_visualassetfilename() ;
  const std::string& visualassetfilename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_visualassetfilename(Arg_&& arg, Args_... args);
  std::string* mutable_visualassetfilename();
  PROTOBUF_NODISCARD std::string* release_visualassetfilename();
  void set_allocated_visualassetfilename(std::string* ptr);

  private:
  const std::string& _internal_visualassetfilename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_visualassetfilename(
      const std::string& value);
  std::string* _internal_mutable_visualassetfilename();

  public:
  // string unlockItemId = 14;
  void clear_unlockitemid() ;
  const std::string& unlockitemid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_unlockitemid(Arg_&& arg, Args_... args);
  std::string* mutable_unlockitemid();
  PROTOBUF_NODISCARD std::string* release_unlockitemid();
  void set_allocated_unlockitemid(std::string* ptr);

  private:
  const std::string& _internal_unlockitemid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_unlockitemid(
      const std::string& value);
  std::string* _internal_mutable_unlockitemid();

  public:
  // string visualVideoId = 20;
  void clear_visualvideoid() ;
  const std::string& visualvideoid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_visualvideoid(Arg_&& arg, Args_... args);
  std::string* mutable_visualvideoid();
  PROTOBUF_NODISCARD std::string* release_visualvideoid();
  void set_allocated_visualvideoid(std::string* ptr);

  private:
  const std::string& _internal_visualvideoid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_visualvideoid(
      const std::string& value);
  std::string* _internal_mutable_visualvideoid();

  public:
  // string battlePassLink = 22;
  void clear_battlepasslink() ;
  const std::string& battlepasslink() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_battlepasslink(Arg_&& arg, Args_... args);
  std::string* mutable_battlepasslink();
  PROTOBUF_NODISCARD std::string* release_battlepasslink();
  void set_allocated_battlepasslink(std::string* ptr);

  private:
  const std::string& _internal_battlepasslink() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_battlepasslink(
      const std::string& value);
  std::string* _internal_mutable_battlepasslink();

  public:
  // string battlePassResourceId = 23;
  void clear_battlepassresourceid() ;
  const std::string& battlepassresourceid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_battlepassresourceid(Arg_&& arg, Args_... args);
  std::string* mutable_battlepassresourceid();
  PROTOBUF_NODISCARD std::string* release_battlepassresourceid();
  void set_allocated_battlepassresourceid(std::string* ptr);

  private:
  const std::string& _internal_battlepassresourceid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_battlepassresourceid(
      const std::string& value);
  std::string* _internal_mutable_battlepassresourceid();

  public:
  // .Digit.PrimePlatform.Content.Bucket bucket = 13;
  bool has_bucket() const;
  void clear_bucket() ;
  const ::Digit::PrimePlatform::Content::Bucket& bucket() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::Bucket* release_bucket();
  ::Digit::PrimePlatform::Content::Bucket* mutable_bucket();
  void set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value);
  void unsafe_arena_set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value);
  ::Digit::PrimePlatform::Content::Bucket* unsafe_arena_release_bucket();

  private:
  const ::Digit::PrimePlatform::Content::Bucket& _internal_bucket() const;
  ::Digit::PrimePlatform::Content::Bucket* _internal_mutable_bucket();

  public:
  // .Digit.PrimePlatform.Content.Resource serverTransferCost = 17;
  bool has_servertransfercost() const;
  void clear_servertransfercost() ;
  const ::Digit::PrimePlatform::Content::Resource& servertransfercost() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Content::Resource* release_servertransfercost();
  ::Digit::PrimePlatform::Content::Resource* mutable_servertransfercost();
  void set_allocated_servertransfercost(::Digit::PrimePlatform::Content::Resource* value);
  void unsafe_arena_set_allocated_servertransfercost(::Digit::PrimePlatform::Content::Resource* value);
  ::Digit::PrimePlatform::Content::Resource* unsafe_arena_release_servertransfercost();

  private:
  const ::Digit::PrimePlatform::Content::Resource& _internal_servertransfercost() const;
  ::Digit::PrimePlatform::Content::Resource* _internal_mutable_servertransfercost();

  public:
  // .Digit.PrimePlatform.Models.EventVideoAssets visualVideoAssets = 21;
  bool has_visualvideoassets() const;
  void clear_visualvideoassets() ;
  const ::Digit::PrimePlatform::Models::EventVideoAssets& visualvideoassets() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventVideoAssets* release_visualvideoassets();
  ::Digit::PrimePlatform::Models::EventVideoAssets* mutable_visualvideoassets();
  void set_allocated_visualvideoassets(::Digit::PrimePlatform::Models::EventVideoAssets* value);
  void unsafe_arena_set_allocated_visualvideoassets(::Digit::PrimePlatform::Models::EventVideoAssets* value);
  ::Digit::PrimePlatform::Models::EventVideoAssets* unsafe_arena_release_visualvideoassets();

  private:
  const ::Digit::PrimePlatform::Models::EventVideoAssets& _internal_visualvideoassets() const;
  ::Digit::PrimePlatform::Models::EventVideoAssets* _internal_mutable_visualvideoassets();

  public:
  // int64 cta = 10;
  void clear_cta() ;
  ::int64_t cta() const;
  void set_cta(::int64_t value);

  private:
  ::int64_t _internal_cta() const;
  void _internal_set_cta(::int64_t value);

  public:
  // bool isAutoRegister = 1;
  void clear_isautoregister() ;
  bool isautoregister() const;
  void set_isautoregister(bool value);

  private:
  bool _internal_isautoregister() const;
  void _internal_set_isautoregister(bool value);

  public:
  // bool autoReward = 2;
  void clear_autoreward() ;
  bool autoreward() const;
  void set_autoreward(bool value);

  private:
  bool _internal_autoreward() const;
  void _internal_set_autoreward(bool value);

  public:
  // bool immediateReward = 3;
  void clear_immediatereward() ;
  bool immediatereward() const;
  void set_immediatereward(bool value);

  private:
  bool _internal_immediatereward() const;
  void _internal_set_immediatereward(bool value);

  public:
  // bool canShowcase = 4;
  void clear_canshowcase() ;
  bool canshowcase() const;
  void set_canshowcase(bool value);

  private:
  bool _internal_canshowcase() const;
  void _internal_set_canshowcase(bool value);

  public:
  // bool isUniqueWinner = 15;
  void clear_isuniquewinner() ;
  bool isuniquewinner() const;
  void set_isuniquewinner(bool value);

  private:
  bool _internal_isuniquewinner() const;
  void _internal_set_isuniquewinner(bool value);

  public:
  // bool isCrossServer = 16;
  void clear_iscrossserver() ;
  bool iscrossserver() const;
  void set_iscrossserver(bool value);

  private:
  bool _internal_iscrossserver() const;
  void _internal_set_iscrossserver(bool value);

  public:
  // bool respectPriority = 19;
  void clear_respectpriority() ;
  bool respectpriority() const;
  void set_respectpriority(bool value);

  private:
  bool _internal_respectpriority() const;
  void _internal_set_respectpriority(bool value);

  public:
  // bool minigameLock = 25;
  void clear_minigamelock() ;
  bool minigamelock() const;
  void set_minigamelock(bool value);

  private:
  bool _internal_minigamelock() const;
  void _internal_set_minigamelock(bool value);

  public:
  // int64 priority = 11;
  void clear_priority() ;
  ::int64_t priority() const;
  void set_priority(::int64_t value);

  private:
  ::int64_t _internal_priority() const;
  void _internal_set_priority(::int64_t value);

  public:
  // .Digit.PrimePlatform.Models.BattlePassType battlePassType = 24;
  void clear_battlepasstype() ;
  ::Digit::PrimePlatform::Models::BattlePassType battlepasstype() const;
  void set_battlepasstype(::Digit::PrimePlatform::Models::BattlePassType value);

  private:
  ::Digit::PrimePlatform::Models::BattlePassType _internal_battlepasstype() const;
  void _internal_set_battlepasstype(::Digit::PrimePlatform::Models::BattlePassType value);

  public:
  // uint32 minigameLevelMin = 26;
  void clear_minigamelevelmin() ;
  ::uint32_t minigamelevelmin() const;
  void set_minigamelevelmin(::uint32_t value);

  private:
  ::uint32_t _internal_minigamelevelmin() const;
  void _internal_set_minigamelevelmin(::uint32_t value);

  public:
  // uint32 minigameLevelMax = 27;
  void clear_minigamelevelmax() ;
  ::uint32_t minigamelevelmax() const;
  void set_minigamelevelmax(::uint32_t value);

  private:
  ::uint32_t _internal_minigamelevelmax() const;
  void _internal_set_minigamelevelmax(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventMetadata)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<5, 27, 6, 190, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventScoringInfo > scoringinfo_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventHighlights > highlights_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::RepeatedInt32 > groupinstances_;
    ::google::protobuf::internal::ArenaStringPtr iconassetid_;
    ::google::protobuf::internal::ArenaStringPtr iconassetfilename_;
    ::google::protobuf::internal::ArenaStringPtr visualasset_;
    ::google::protobuf::internal::ArenaStringPtr visualassetfilename_;
    ::google::protobuf::internal::ArenaStringPtr unlockitemid_;
    ::google::protobuf::internal::ArenaStringPtr visualvideoid_;
    ::google::protobuf::internal::ArenaStringPtr battlepasslink_;
    ::google::protobuf::internal::ArenaStringPtr battlepassresourceid_;
    ::Digit::PrimePlatform::Content::Bucket* bucket_;
    ::Digit::PrimePlatform::Content::Resource* servertransfercost_;
    ::Digit::PrimePlatform::Models::EventVideoAssets* visualvideoassets_;
    ::int64_t cta_;
    bool isautoregister_;
    bool autoreward_;
    bool immediatereward_;
    bool canshowcase_;
    bool isuniquewinner_;
    bool iscrossserver_;
    bool respectpriority_;
    bool minigamelock_;
    ::int64_t priority_;
    int battlepasstype_;
    ::uint32_t minigamelevelmin_;
    ::uint32_t minigamelevelmax_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventModel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventModel) */ {
 public:
  inline EventModel() : EventModel(nullptr) {}
  ~EventModel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventModel(::google::protobuf::internal::ConstantInitialized);

  EventModel(const EventModel& from);
  EventModel(EventModel&& from) noexcept
    : EventModel() {
    *this = ::std::move(from);
  }

  inline EventModel& operator=(const EventModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventModel& operator=(EventModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventModel* internal_default_instance() {
    return reinterpret_cast<const EventModel*>(
               &_EventModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EventModel& a, EventModel& b) {
    a.Swap(&b);
  }
  inline void Swap(EventModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventModel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventModel& from) {
    EventModel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventModel* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventModel";
  }
  protected:
  explicit EventModel(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSegmentsFieldNumber = 9,
    kJoinCostFieldNumber = 13,
    kConfigIdFieldNumber = 1,
    kSourceFieldNumber = 2,
    kEventTypeFieldNumber = 3,
    kGroupNameFieldNumber = 8,
    kCategoryGroupIdFieldNumber = 14,
    kScheduleFieldNumber = 6,
    kMetaDataFieldNumber = 7,
    kRankingFieldNumber = 10,
    kEntryDataFieldNumber = 11,
    kRanksFieldNumber = 12,
    kCategoryFieldNumber = 4,
    kPlacementTypeFieldNumber = 5,
  };
  // repeated .Digit.PrimePlatform.Models.EventSegment segments = 9;
  int segments_size() const;
  private:
  int _internal_segments_size() const;

  public:
  void clear_segments() ;
  ::Digit::PrimePlatform::Models::EventSegment* mutable_segments(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventSegment >*
      mutable_segments();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventSegment>& _internal_segments() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventSegment>* _internal_mutable_segments();
  public:
  const ::Digit::PrimePlatform::Models::EventSegment& segments(int index) const;
  ::Digit::PrimePlatform::Models::EventSegment* add_segments();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventSegment >&
      segments() const;
  // repeated .Digit.PrimePlatform.Content.Resource joinCost = 13;
  int joincost_size() const;
  private:
  int _internal_joincost_size() const;

  public:
  void clear_joincost() ;
  ::Digit::PrimePlatform::Content::Resource* mutable_joincost(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >*
      mutable_joincost();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>& _internal_joincost() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>* _internal_mutable_joincost();
  public:
  const ::Digit::PrimePlatform::Content::Resource& joincost(int index) const;
  ::Digit::PrimePlatform::Content::Resource* add_joincost();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >&
      joincost() const;
  // string configId = 1;
  void clear_configid() ;
  const std::string& configid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_configid(Arg_&& arg, Args_... args);
  std::string* mutable_configid();
  PROTOBUF_NODISCARD std::string* release_configid();
  void set_allocated_configid(std::string* ptr);

  private:
  const std::string& _internal_configid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_configid(
      const std::string& value);
  std::string* _internal_mutable_configid();

  public:
  // string source = 2;
  void clear_source() ;
  const std::string& source() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  std::string* mutable_source();
  PROTOBUF_NODISCARD std::string* release_source();
  void set_allocated_source(std::string* ptr);

  private:
  const std::string& _internal_source() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source(
      const std::string& value);
  std::string* _internal_mutable_source();

  public:
  // string eventType = 3;
  void clear_eventtype() ;
  const std::string& eventtype() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_eventtype(Arg_&& arg, Args_... args);
  std::string* mutable_eventtype();
  PROTOBUF_NODISCARD std::string* release_eventtype();
  void set_allocated_eventtype(std::string* ptr);

  private:
  const std::string& _internal_eventtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_eventtype(
      const std::string& value);
  std::string* _internal_mutable_eventtype();

  public:
  // string groupName = 8;
  void clear_groupname() ;
  const std::string& groupname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_groupname(Arg_&& arg, Args_... args);
  std::string* mutable_groupname();
  PROTOBUF_NODISCARD std::string* release_groupname();
  void set_allocated_groupname(std::string* ptr);

  private:
  const std::string& _internal_groupname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_groupname(
      const std::string& value);
  std::string* _internal_mutable_groupname();

  public:
  // string categoryGroupId = 14;
  void clear_categorygroupid() ;
  const std::string& categorygroupid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_categorygroupid(Arg_&& arg, Args_... args);
  std::string* mutable_categorygroupid();
  PROTOBUF_NODISCARD std::string* release_categorygroupid();
  void set_allocated_categorygroupid(std::string* ptr);

  private:
  const std::string& _internal_categorygroupid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_categorygroupid(
      const std::string& value);
  std::string* _internal_mutable_categorygroupid();

  public:
  // .Digit.PrimePlatform.Models.EventSchedule schedule = 6;
  bool has_schedule() const;
  void clear_schedule() ;
  const ::Digit::PrimePlatform::Models::EventSchedule& schedule() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventSchedule* release_schedule();
  ::Digit::PrimePlatform::Models::EventSchedule* mutable_schedule();
  void set_allocated_schedule(::Digit::PrimePlatform::Models::EventSchedule* value);
  void unsafe_arena_set_allocated_schedule(::Digit::PrimePlatform::Models::EventSchedule* value);
  ::Digit::PrimePlatform::Models::EventSchedule* unsafe_arena_release_schedule();

  private:
  const ::Digit::PrimePlatform::Models::EventSchedule& _internal_schedule() const;
  ::Digit::PrimePlatform::Models::EventSchedule* _internal_mutable_schedule();

  public:
  // .Digit.PrimePlatform.Models.EventMetadata metaData = 7;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::Digit::PrimePlatform::Models::EventMetadata& metadata() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventMetadata* release_metadata();
  ::Digit::PrimePlatform::Models::EventMetadata* mutable_metadata();
  void set_allocated_metadata(::Digit::PrimePlatform::Models::EventMetadata* value);
  void unsafe_arena_set_allocated_metadata(::Digit::PrimePlatform::Models::EventMetadata* value);
  ::Digit::PrimePlatform::Models::EventMetadata* unsafe_arena_release_metadata();

  private:
  const ::Digit::PrimePlatform::Models::EventMetadata& _internal_metadata() const;
  ::Digit::PrimePlatform::Models::EventMetadata* _internal_mutable_metadata();

  public:
  // .Digit.PrimePlatform.Models.EventRank ranking = 10;
  bool has_ranking() const;
  void clear_ranking() ;
  const ::Digit::PrimePlatform::Models::EventRank& ranking() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventRank* release_ranking();
  ::Digit::PrimePlatform::Models::EventRank* mutable_ranking();
  void set_allocated_ranking(::Digit::PrimePlatform::Models::EventRank* value);
  void unsafe_arena_set_allocated_ranking(::Digit::PrimePlatform::Models::EventRank* value);
  ::Digit::PrimePlatform::Models::EventRank* unsafe_arena_release_ranking();

  private:
  const ::Digit::PrimePlatform::Models::EventRank& _internal_ranking() const;
  ::Digit::PrimePlatform::Models::EventRank* _internal_mutable_ranking();

  public:
  // .Digit.PrimePlatform.Models.EventEntryData entryData = 11;
  bool has_entrydata() const;
  void clear_entrydata() ;
  const ::Digit::PrimePlatform::Models::EventEntryData& entrydata() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventEntryData* release_entrydata();
  ::Digit::PrimePlatform::Models::EventEntryData* mutable_entrydata();
  void set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value);
  void unsafe_arena_set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value);
  ::Digit::PrimePlatform::Models::EventEntryData* unsafe_arena_release_entrydata();

  private:
  const ::Digit::PrimePlatform::Models::EventEntryData& _internal_entrydata() const;
  ::Digit::PrimePlatform::Models::EventEntryData* _internal_mutable_entrydata();

  public:
  // .Digit.PrimePlatform.Models.EventRank ranks = 12;
  bool has_ranks() const;
  void clear_ranks() ;
  const ::Digit::PrimePlatform::Models::EventRank& ranks() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventRank* release_ranks();
  ::Digit::PrimePlatform::Models::EventRank* mutable_ranks();
  void set_allocated_ranks(::Digit::PrimePlatform::Models::EventRank* value);
  void unsafe_arena_set_allocated_ranks(::Digit::PrimePlatform::Models::EventRank* value);
  ::Digit::PrimePlatform::Models::EventRank* unsafe_arena_release_ranks();

  private:
  const ::Digit::PrimePlatform::Models::EventRank& _internal_ranks() const;
  ::Digit::PrimePlatform::Models::EventRank* _internal_mutable_ranks();

  public:
  // .Digit.PrimePlatform.Models.EventCategories category = 4;
  void clear_category() ;
  ::Digit::PrimePlatform::Models::EventCategories category() const;
  void set_category(::Digit::PrimePlatform::Models::EventCategories value);

  private:
  ::Digit::PrimePlatform::Models::EventCategories _internal_category() const;
  void _internal_set_category(::Digit::PrimePlatform::Models::EventCategories value);

  public:
  // .Digit.PrimePlatform.Models.PlacementType placementType = 5;
  void clear_placementtype() ;
  ::Digit::PrimePlatform::Models::PlacementType placementtype() const;
  void set_placementtype(::Digit::PrimePlatform::Models::PlacementType value);

  private:
  ::Digit::PrimePlatform::Models::PlacementType _internal_placementtype() const;
  void _internal_set_placementtype(::Digit::PrimePlatform::Models::PlacementType value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventModel)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14, 7, 101, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventSegment > segments_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource > joincost_;
    ::google::protobuf::internal::ArenaStringPtr configid_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    ::google::protobuf::internal::ArenaStringPtr eventtype_;
    ::google::protobuf::internal::ArenaStringPtr groupname_;
    ::google::protobuf::internal::ArenaStringPtr categorygroupid_;
    ::Digit::PrimePlatform::Models::EventSchedule* schedule_;
    ::Digit::PrimePlatform::Models::EventMetadata* metadata_;
    ::Digit::PrimePlatform::Models::EventRank* ranking_;
    ::Digit::PrimePlatform::Models::EventEntryData* entrydata_;
    ::Digit::PrimePlatform::Models::EventRank* ranks_;
    int category_;
    int placementtype_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventRank final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventRank) */ {
 public:
  inline EventRank() : EventRank(nullptr) {}
  ~EventRank() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventRank(::google::protobuf::internal::ConstantInitialized);

  EventRank(const EventRank& from);
  EventRank(EventRank&& from) noexcept
    : EventRank() {
    *this = ::std::move(from);
  }

  inline EventRank& operator=(const EventRank& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventRank& operator=(EventRank&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventRank& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventRank* internal_default_instance() {
    return reinterpret_cast<const EventRank*>(
               &_EventRank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(EventRank& a, EventRank& b) {
    a.Swap(&b);
  }
  inline void Swap(EventRank* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventRank* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventRank* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventRank>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventRank& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventRank& from) {
    EventRank::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventRank* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventRank";
  }
  protected:
  explicit EventRank(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kPositionFieldNumber = 2,
    kRankFieldNumber = 3,
    kScoreFieldNumber = 4,
    kDeltaFieldNumber = 5,
    kScoreDoubleFieldNumber = 7,
    kInstanceIdFieldNumber = 6,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // int32 position = 2;
  void clear_position() ;
  ::int32_t position() const;
  void set_position(::int32_t value);

  private:
  ::int32_t _internal_position() const;
  void _internal_set_position(::int32_t value);

  public:
  // int32 rank = 3;
  void clear_rank() ;
  ::int32_t rank() const;
  void set_rank(::int32_t value);

  private:
  ::int32_t _internal_rank() const;
  void _internal_set_rank(::int32_t value);

  public:
  // float score = 4;
  void clear_score() ;
  float score() const;
  void set_score(float value);

  private:
  float _internal_score() const;
  void _internal_set_score(float value);

  public:
  // int32 delta = 5;
  void clear_delta() ;
  ::int32_t delta() const;
  void set_delta(::int32_t value);

  private:
  ::int32_t _internal_delta() const;
  void _internal_set_delta(::int32_t value);

  public:
  // double scoreDouble = 7;
  void clear_scoredouble() ;
  double scoredouble() const;
  void set_scoredouble(double value);

  private:
  double _internal_scoredouble() const;
  void _internal_set_scoredouble(double value);

  public:
  // int32 instanceId = 6;
  void clear_instanceid() ;
  ::int32_t instanceid() const;
  void set_instanceid(::int32_t value);

  private:
  ::int32_t _internal_instanceid() const;
  void _internal_set_instanceid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventRank)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 0, 47, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::int32_t position_;
    ::int32_t rank_;
    float score_;
    ::int32_t delta_;
    double scoredouble_;
    ::int32_t instanceid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventRanking final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventRanking) */ {
 public:
  inline EventRanking() : EventRanking(nullptr) {}
  ~EventRanking() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventRanking(::google::protobuf::internal::ConstantInitialized);

  EventRanking(const EventRanking& from);
  EventRanking(EventRanking&& from) noexcept
    : EventRanking() {
    *this = ::std::move(from);
  }

  inline EventRanking& operator=(const EventRanking& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventRanking& operator=(EventRanking&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventRanking& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventRanking* internal_default_instance() {
    return reinterpret_cast<const EventRanking*>(
               &_EventRanking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(EventRanking& a, EventRanking& b) {
    a.Swap(&b);
  }
  inline void Swap(EventRanking* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventRanking* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventRanking* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventRanking>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventRanking& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventRanking& from) {
    EventRanking::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventRanking* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventRanking";
  }
  protected:
  explicit EventRanking(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRanksFieldNumber = 1,
    kConfigIdFieldNumber = 2,
  };
  // repeated .Digit.PrimePlatform.Models.EventRank ranks = 1;
  int ranks_size() const;
  private:
  int _internal_ranks_size() const;

  public:
  void clear_ranks() ;
  ::Digit::PrimePlatform::Models::EventRank* mutable_ranks(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventRank >*
      mutable_ranks();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventRank>& _internal_ranks() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventRank>* _internal_mutable_ranks();
  public:
  const ::Digit::PrimePlatform::Models::EventRank& ranks(int index) const;
  ::Digit::PrimePlatform::Models::EventRank* add_ranks();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventRank >&
      ranks() const;
  // string configId = 2;
  void clear_configid() ;
  const std::string& configid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_configid(Arg_&& arg, Args_... args);
  std::string* mutable_configid();
  PROTOBUF_NODISCARD std::string* release_configid();
  void set_allocated_configid(std::string* ptr);

  private:
  const std::string& _internal_configid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_configid(
      const std::string& value);
  std::string* _internal_mutable_configid();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventRanking)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventRank > ranks_;
    ::google::protobuf::internal::ArenaStringPtr configid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventReward final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventReward) */ {
 public:
  inline EventReward() : EventReward(nullptr) {}
  ~EventReward() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventReward(::google::protobuf::internal::ConstantInitialized);

  EventReward(const EventReward& from);
  EventReward(EventReward&& from) noexcept
    : EventReward() {
    *this = ::std::move(from);
  }

  inline EventReward& operator=(const EventReward& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventReward& operator=(EventReward&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventReward& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventReward* internal_default_instance() {
    return reinterpret_cast<const EventReward*>(
               &_EventReward_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(EventReward& a, EventReward& b) {
    a.Swap(&b);
  }
  inline void Swap(EventReward* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventReward* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventReward* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventReward>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventReward& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventReward& from) {
    EventReward::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventReward* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventReward";
  }
  protected:
  explicit EventReward(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 1,
    kTypeFieldNumber = 3,
    kLevelFieldNumber = 4,
    kAmountFieldNumber = 2,
  };
  // repeated int64 position = 1;
  int position_size() const;
  private:
  int _internal_position_size() const;

  public:
  void clear_position() ;
  ::int64_t position(int index) const;
  void set_position(int index, ::int64_t value);
  void add_position(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& position() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_position();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_position() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_position();

  public:
  // string type = 3;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* ptr);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string level = 4;
  void clear_level() ;
  const std::string& level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_level(Arg_&& arg, Args_... args);
  std::string* mutable_level();
  PROTOBUF_NODISCARD std::string* release_level();
  void set_allocated_level(std::string* ptr);

  private:
  const std::string& _internal_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_level(
      const std::string& value);
  std::string* _internal_mutable_level();

  public:
  // int64 amount = 2;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventReward)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int64_t> position_;
    mutable ::google::protobuf::internal::CachedSize _position_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr level_;
    ::int64_t amount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventSchedule final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventSchedule) */ {
 public:
  inline EventSchedule() : EventSchedule(nullptr) {}
  ~EventSchedule() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventSchedule(::google::protobuf::internal::ConstantInitialized);

  EventSchedule(const EventSchedule& from);
  EventSchedule(EventSchedule&& from) noexcept
    : EventSchedule() {
    *this = ::std::move(from);
  }

  inline EventSchedule& operator=(const EventSchedule& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventSchedule& operator=(EventSchedule&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventSchedule& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventSchedule* internal_default_instance() {
    return reinterpret_cast<const EventSchedule*>(
               &_EventSchedule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(EventSchedule& a, EventSchedule& b) {
    a.Swap(&b);
  }
  inline void Swap(EventSchedule* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventSchedule* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventSchedule* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventSchedule>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventSchedule& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventSchedule& from) {
    EventSchedule::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventSchedule* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventSchedule";
  }
  protected:
  explicit EventSchedule(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTermFieldNumber = 1,
    kAnnounceFieldNumber = 3,
    kStartFieldNumber = 4,
    kDisplayFieldNumber = 5,
    kDelayFieldNumber = 6,
    kEndFieldNumber = 7,
    kNextStartFieldNumber = 8,
    kRoundNumberFieldNumber = 2,
  };
  // string term = 1;
  void clear_term() ;
  const std::string& term() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_term(Arg_&& arg, Args_... args);
  std::string* mutable_term();
  PROTOBUF_NODISCARD std::string* release_term();
  void set_allocated_term(std::string* ptr);

  private:
  const std::string& _internal_term() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_term(
      const std::string& value);
  std::string* _internal_mutable_term();

  public:
  // .google.protobuf.Timestamp announce = 3;
  bool has_announce() const;
  void clear_announce() ;
  const ::google::protobuf::Timestamp& announce() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_announce();
  ::google::protobuf::Timestamp* mutable_announce();
  void set_allocated_announce(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_announce(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_announce();

  private:
  const ::google::protobuf::Timestamp& _internal_announce() const;
  ::google::protobuf::Timestamp* _internal_mutable_announce();

  public:
  // .google.protobuf.Timestamp start = 4;
  bool has_start() const;
  void clear_start() ;
  const ::google::protobuf::Timestamp& start() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start();
  ::google::protobuf::Timestamp* mutable_start();
  void set_allocated_start(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start();

  private:
  const ::google::protobuf::Timestamp& _internal_start() const;
  ::google::protobuf::Timestamp* _internal_mutable_start();

  public:
  // .google.protobuf.Timestamp display = 5;
  bool has_display() const;
  void clear_display() ;
  const ::google::protobuf::Timestamp& display() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_display();
  ::google::protobuf::Timestamp* mutable_display();
  void set_allocated_display(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_display(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_display();

  private:
  const ::google::protobuf::Timestamp& _internal_display() const;
  ::google::protobuf::Timestamp* _internal_mutable_display();

  public:
  // .google.protobuf.Timestamp delay = 6;
  bool has_delay() const;
  void clear_delay() ;
  const ::google::protobuf::Timestamp& delay() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_delay();
  ::google::protobuf::Timestamp* mutable_delay();
  void set_allocated_delay(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_delay(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_delay();

  private:
  const ::google::protobuf::Timestamp& _internal_delay() const;
  ::google::protobuf::Timestamp* _internal_mutable_delay();

  public:
  // .google.protobuf.Timestamp end = 7;
  bool has_end() const;
  void clear_end() ;
  const ::google::protobuf::Timestamp& end() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_end();
  ::google::protobuf::Timestamp* mutable_end();
  void set_allocated_end(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_end(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_end();

  private:
  const ::google::protobuf::Timestamp& _internal_end() const;
  ::google::protobuf::Timestamp* _internal_mutable_end();

  public:
  // .google.protobuf.Timestamp nextStart = 8;
  bool has_nextstart() const;
  void clear_nextstart() ;
  const ::google::protobuf::Timestamp& nextstart() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_nextstart();
  ::google::protobuf::Timestamp* mutable_nextstart();
  void set_allocated_nextstart(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_nextstart(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_nextstart();

  private:
  const ::google::protobuf::Timestamp& _internal_nextstart() const;
  ::google::protobuf::Timestamp* _internal_mutable_nextstart();

  public:
  // int32 roundNumber = 2;
  void clear_roundnumber() ;
  ::int32_t roundnumber() const;
  void set_roundnumber(::int32_t value);

  private:
  ::int32_t _internal_roundnumber() const;
  void _internal_set_roundnumber(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventSchedule)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8, 6, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr term_;
    ::google::protobuf::Timestamp* announce_;
    ::google::protobuf::Timestamp* start_;
    ::google::protobuf::Timestamp* display_;
    ::google::protobuf::Timestamp* delay_;
    ::google::protobuf::Timestamp* end_;
    ::google::protobuf::Timestamp* nextstart_;
    ::int32_t roundnumber_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventScoringInfo final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventScoringInfo) */ {
 public:
  inline EventScoringInfo() : EventScoringInfo(nullptr) {}
  ~EventScoringInfo() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventScoringInfo(::google::protobuf::internal::ConstantInitialized);

  EventScoringInfo(const EventScoringInfo& from);
  EventScoringInfo(EventScoringInfo&& from) noexcept
    : EventScoringInfo() {
    *this = ::std::move(from);
  }

  inline EventScoringInfo& operator=(const EventScoringInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventScoringInfo& operator=(EventScoringInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventScoringInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventScoringInfo* internal_default_instance() {
    return reinterpret_cast<const EventScoringInfo*>(
               &_EventScoringInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(EventScoringInfo& a, EventScoringInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(EventScoringInfo* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventScoringInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventScoringInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventScoringInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventScoringInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventScoringInfo& from) {
    EventScoringInfo::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventScoringInfo* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventScoringInfo";
  }
  protected:
  explicit EventScoringInfo(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIconFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string icon = 2;
  void clear_icon() ;
  const std::string& icon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_icon(Arg_&& arg, Args_... args);
  std::string* mutable_icon();
  PROTOBUF_NODISCARD std::string* release_icon();
  void set_allocated_icon(std::string* ptr);

  private:
  const std::string& _internal_icon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_icon(
      const std::string& value);
  std::string* _internal_mutable_icon();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventScoringInfo)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr icon_;
    ::int32_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class Events final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.Events) */ {
 public:
  inline Events() : Events(nullptr) {}
  ~Events() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Events(::google::protobuf::internal::ConstantInitialized);

  Events(const Events& from);
  Events(Events&& from) noexcept
    : Events() {
    *this = ::std::move(from);
  }

  inline Events& operator=(const Events& from) {
    CopyFrom(from);
    return *this;
  }
  inline Events& operator=(Events&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Events& default_instance() {
    return *internal_default_instance();
  }
  static inline const Events* internal_default_instance() {
    return reinterpret_cast<const Events*>(
               &_Events_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Events& a, Events& b) {
    a.Swap(&b);
  }
  inline void Swap(Events* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Events* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Events* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Events>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Events& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Events& from) {
    Events::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Events* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.Events";
  }
  protected:
  explicit Events(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTournamentsFieldNumber = 1,
    kCategoriesFieldNumber = 2,
  };
  // repeated .Digit.PrimePlatform.Models.EventModel tournaments = 1;
  int tournaments_size() const;
  private:
  int _internal_tournaments_size() const;

  public:
  void clear_tournaments() ;
  ::Digit::PrimePlatform::Models::EventModel* mutable_tournaments(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventModel >*
      mutable_tournaments();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventModel>& _internal_tournaments() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventModel>* _internal_mutable_tournaments();
  public:
  const ::Digit::PrimePlatform::Models::EventModel& tournaments(int index) const;
  ::Digit::PrimePlatform::Models::EventModel* add_tournaments();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventModel >&
      tournaments() const;
  // repeated int32 categories = 2;
  int categories_size() const;
  private:
  int _internal_categories_size() const;

  public:
  void clear_categories() ;
  ::int32_t categories(int index) const;
  void set_categories(int index, ::int32_t value);
  void add_categories(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& categories() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_categories();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_categories() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_categories();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.Events)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventModel > tournaments_;
    ::google::protobuf::RepeatedField<::int32_t> categories_;
    mutable ::google::protobuf::internal::CachedSize _categories_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventNotification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventNotification) */ {
 public:
  inline EventNotification() : EventNotification(nullptr) {}
  ~EventNotification() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventNotification(::google::protobuf::internal::ConstantInitialized);

  EventNotification(const EventNotification& from);
  EventNotification(EventNotification&& from) noexcept
    : EventNotification() {
    *this = ::std::move(from);
  }

  inline EventNotification& operator=(const EventNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventNotification& operator=(EventNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventNotification* internal_default_instance() {
    return reinterpret_cast<const EventNotification*>(
               &_EventNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(EventNotification& a, EventNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(EventNotification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventNotification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventNotification* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventNotification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventNotification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventNotification& from) {
    EventNotification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventNotification* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventNotification";
  }
  protected:
  explicit EventNotification(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigIdFieldNumber = 1,
    kModifiedFieldNumber = 2,
    kPlayerRankFieldNumber = 3,
    kEntryDataFieldNumber = 4,
  };
  // string configId = 1;
  void clear_configid() ;
  const std::string& configid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_configid(Arg_&& arg, Args_... args);
  std::string* mutable_configid();
  PROTOBUF_NODISCARD std::string* release_configid();
  void set_allocated_configid(std::string* ptr);

  private:
  const std::string& _internal_configid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_configid(
      const std::string& value);
  std::string* _internal_mutable_configid();

  public:
  // .google.protobuf.Timestamp modified = 2;
  bool has_modified() const;
  void clear_modified() ;
  const ::google::protobuf::Timestamp& modified() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_modified();
  ::google::protobuf::Timestamp* mutable_modified();
  void set_allocated_modified(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_modified(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_modified();

  private:
  const ::google::protobuf::Timestamp& _internal_modified() const;
  ::google::protobuf::Timestamp* _internal_mutable_modified();

  public:
  // .Digit.PrimePlatform.Models.EventRank playerRank = 3;
  bool has_playerrank() const;
  void clear_playerrank() ;
  const ::Digit::PrimePlatform::Models::EventRank& playerrank() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventRank* release_playerrank();
  ::Digit::PrimePlatform::Models::EventRank* mutable_playerrank();
  void set_allocated_playerrank(::Digit::PrimePlatform::Models::EventRank* value);
  void unsafe_arena_set_allocated_playerrank(::Digit::PrimePlatform::Models::EventRank* value);
  ::Digit::PrimePlatform::Models::EventRank* unsafe_arena_release_playerrank();

  private:
  const ::Digit::PrimePlatform::Models::EventRank& _internal_playerrank() const;
  ::Digit::PrimePlatform::Models::EventRank* _internal_mutable_playerrank();

  public:
  // .Digit.PrimePlatform.Models.EventEntryData entryData = 4;
  bool has_entrydata() const;
  void clear_entrydata() ;
  const ::Digit::PrimePlatform::Models::EventEntryData& entrydata() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventEntryData* release_entrydata();
  ::Digit::PrimePlatform::Models::EventEntryData* mutable_entrydata();
  void set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value);
  void unsafe_arena_set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value);
  ::Digit::PrimePlatform::Models::EventEntryData* unsafe_arena_release_entrydata();

  private:
  const ::Digit::PrimePlatform::Models::EventEntryData& _internal_entrydata() const;
  ::Digit::PrimePlatform::Models::EventEntryData* _internal_mutable_entrydata();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventNotification)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 3, 61, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr configid_;
    ::google::protobuf::Timestamp* modified_;
    ::Digit::PrimePlatform::Models::EventRank* playerrank_;
    ::Digit::PrimePlatform::Models::EventEntryData* entrydata_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventSegment final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventSegment) */ {
 public:
  inline EventSegment() : EventSegment(nullptr) {}
  ~EventSegment() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventSegment(::google::protobuf::internal::ConstantInitialized);

  EventSegment(const EventSegment& from);
  EventSegment(EventSegment&& from) noexcept
    : EventSegment() {
    *this = ::std::move(from);
  }

  inline EventSegment& operator=(const EventSegment& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventSegment& operator=(EventSegment&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventSegment& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventSegment* internal_default_instance() {
    return reinterpret_cast<const EventSegment*>(
               &_EventSegment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(EventSegment& a, EventSegment& b) {
    a.Swap(&b);
  }
  inline void Swap(EventSegment* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventSegment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventSegment* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventSegment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventSegment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventSegment& from) {
    EventSegment::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventSegment* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventSegment";
  }
  protected:
  explicit EventSegment(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kRewardsFieldNumber = 3,
    kUniqueWinnerFieldNumber = 4,
    kTypeFieldNumber = 1,
  };
  // repeated int64 values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::int64_t values(int index) const;
  void set_values(int index, ::int64_t value);
  void add_values(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& values() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_values() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_values();

  public:
  // repeated .Digit.PrimePlatform.Models.EventReward rewards = 3;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;

  public:
  void clear_rewards() ;
  ::Digit::PrimePlatform::Models::EventReward* mutable_rewards(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventReward >*
      mutable_rewards();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventReward>& _internal_rewards() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventReward>* _internal_mutable_rewards();
  public:
  const ::Digit::PrimePlatform::Models::EventReward& rewards(int index) const;
  ::Digit::PrimePlatform::Models::EventReward* add_rewards();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventReward >&
      rewards() const;
  // .Digit.PrimePlatform.Models.EventReward uniqueWinner = 4;
  bool has_uniquewinner() const;
  void clear_uniquewinner() ;
  const ::Digit::PrimePlatform::Models::EventReward& uniquewinner() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::EventReward* release_uniquewinner();
  ::Digit::PrimePlatform::Models::EventReward* mutable_uniquewinner();
  void set_allocated_uniquewinner(::Digit::PrimePlatform::Models::EventReward* value);
  void unsafe_arena_set_allocated_uniquewinner(::Digit::PrimePlatform::Models::EventReward* value);
  ::Digit::PrimePlatform::Models::EventReward* unsafe_arena_release_uniquewinner();

  private:
  const ::Digit::PrimePlatform::Models::EventReward& _internal_uniquewinner() const;
  ::Digit::PrimePlatform::Models::EventReward* _internal_mutable_uniquewinner();

  public:
  // .Digit.PrimePlatform.Models.SegmentType type = 1;
  void clear_type() ;
  ::Digit::PrimePlatform::Models::SegmentType type() const;
  void set_type(::Digit::PrimePlatform::Models::SegmentType value);

  private:
  ::Digit::PrimePlatform::Models::SegmentType _internal_type() const;
  void _internal_set_type(::Digit::PrimePlatform::Models::SegmentType value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventSegment)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int64_t> values_;
    mutable ::google::protobuf::internal::CachedSize _values_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventReward > rewards_;
    ::Digit::PrimePlatform::Models::EventReward* uniquewinner_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class EventVideoAssets final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.EventVideoAssets) */ {
 public:
  inline EventVideoAssets() : EventVideoAssets(nullptr) {}
  ~EventVideoAssets() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EventVideoAssets(::google::protobuf::internal::ConstantInitialized);

  EventVideoAssets(const EventVideoAssets& from);
  EventVideoAssets(EventVideoAssets&& from) noexcept
    : EventVideoAssets() {
    *this = ::std::move(from);
  }

  inline EventVideoAssets& operator=(const EventVideoAssets& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventVideoAssets& operator=(EventVideoAssets&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventVideoAssets& default_instance() {
    return *internal_default_instance();
  }
  static inline const EventVideoAssets* internal_default_instance() {
    return reinterpret_cast<const EventVideoAssets*>(
               &_EventVideoAssets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(EventVideoAssets& a, EventVideoAssets& b) {
    a.Swap(&b);
  }
  inline void Swap(EventVideoAssets* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventVideoAssets* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventVideoAssets* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EventVideoAssets>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventVideoAssets& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EventVideoAssets& from) {
    EventVideoAssets::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EventVideoAssets* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.EventVideoAssets";
  }
  protected:
  explicit EventVideoAssets(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnFieldNumber = 1,
    kEsFieldNumber = 2,
    kFrFieldNumber = 3,
    kDeFieldNumber = 4,
    kItFieldNumber = 5,
    kJaFieldNumber = 6,
    kPtFieldNumber = 7,
    kRuFieldNumber = 8,
    kCnFieldNumber = 9,
    kKoFieldNumber = 10,
    kHkFieldNumber = 11,
    kTrFieldNumber = 12,
  };
  // string en = 1;
  void clear_en() ;
  const std::string& en() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_en(Arg_&& arg, Args_... args);
  std::string* mutable_en();
  PROTOBUF_NODISCARD std::string* release_en();
  void set_allocated_en(std::string* ptr);

  private:
  const std::string& _internal_en() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_en(
      const std::string& value);
  std::string* _internal_mutable_en();

  public:
  // string es = 2;
  void clear_es() ;
  const std::string& es() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_es(Arg_&& arg, Args_... args);
  std::string* mutable_es();
  PROTOBUF_NODISCARD std::string* release_es();
  void set_allocated_es(std::string* ptr);

  private:
  const std::string& _internal_es() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_es(
      const std::string& value);
  std::string* _internal_mutable_es();

  public:
  // string fr = 3;
  void clear_fr() ;
  const std::string& fr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fr(Arg_&& arg, Args_... args);
  std::string* mutable_fr();
  PROTOBUF_NODISCARD std::string* release_fr();
  void set_allocated_fr(std::string* ptr);

  private:
  const std::string& _internal_fr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fr(
      const std::string& value);
  std::string* _internal_mutable_fr();

  public:
  // string de = 4;
  void clear_de() ;
  const std::string& de() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_de(Arg_&& arg, Args_... args);
  std::string* mutable_de();
  PROTOBUF_NODISCARD std::string* release_de();
  void set_allocated_de(std::string* ptr);

  private:
  const std::string& _internal_de() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_de(
      const std::string& value);
  std::string* _internal_mutable_de();

  public:
  // string it = 5;
  void clear_it() ;
  const std::string& it() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_it(Arg_&& arg, Args_... args);
  std::string* mutable_it();
  PROTOBUF_NODISCARD std::string* release_it();
  void set_allocated_it(std::string* ptr);

  private:
  const std::string& _internal_it() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_it(
      const std::string& value);
  std::string* _internal_mutable_it();

  public:
  // string ja = 6;
  void clear_ja() ;
  const std::string& ja() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ja(Arg_&& arg, Args_... args);
  std::string* mutable_ja();
  PROTOBUF_NODISCARD std::string* release_ja();
  void set_allocated_ja(std::string* ptr);

  private:
  const std::string& _internal_ja() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ja(
      const std::string& value);
  std::string* _internal_mutable_ja();

  public:
  // string pt = 7;
  void clear_pt() ;
  const std::string& pt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pt(Arg_&& arg, Args_... args);
  std::string* mutable_pt();
  PROTOBUF_NODISCARD std::string* release_pt();
  void set_allocated_pt(std::string* ptr);

  private:
  const std::string& _internal_pt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pt(
      const std::string& value);
  std::string* _internal_mutable_pt();

  public:
  // string ru = 8;
  void clear_ru() ;
  const std::string& ru() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ru(Arg_&& arg, Args_... args);
  std::string* mutable_ru();
  PROTOBUF_NODISCARD std::string* release_ru();
  void set_allocated_ru(std::string* ptr);

  private:
  const std::string& _internal_ru() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ru(
      const std::string& value);
  std::string* _internal_mutable_ru();

  public:
  // string cn = 9;
  void clear_cn() ;
  const std::string& cn() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cn(Arg_&& arg, Args_... args);
  std::string* mutable_cn();
  PROTOBUF_NODISCARD std::string* release_cn();
  void set_allocated_cn(std::string* ptr);

  private:
  const std::string& _internal_cn() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_cn(
      const std::string& value);
  std::string* _internal_mutable_cn();

  public:
  // string ko = 10;
  void clear_ko() ;
  const std::string& ko() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ko(Arg_&& arg, Args_... args);
  std::string* mutable_ko();
  PROTOBUF_NODISCARD std::string* release_ko();
  void set_allocated_ko(std::string* ptr);

  private:
  const std::string& _internal_ko() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ko(
      const std::string& value);
  std::string* _internal_mutable_ko();

  public:
  // string hk = 11;
  void clear_hk() ;
  const std::string& hk() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hk(Arg_&& arg, Args_... args);
  std::string* mutable_hk();
  PROTOBUF_NODISCARD std::string* release_hk();
  void set_allocated_hk(std::string* ptr);

  private:
  const std::string& _internal_hk() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hk(
      const std::string& value);
  std::string* _internal_mutable_hk();

  public:
  // string tr = 12;
  void clear_tr() ;
  const std::string& tr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tr(Arg_&& arg, Args_... args);
  std::string* mutable_tr();
  PROTOBUF_NODISCARD std::string* release_tr();
  void set_allocated_tr(std::string* ptr);

  private:
  const std::string& _internal_tr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tr(
      const std::string& value);
  std::string* _internal_mutable_tr();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.EventVideoAssets)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 12, 0, 84, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr en_;
    ::google::protobuf::internal::ArenaStringPtr es_;
    ::google::protobuf::internal::ArenaStringPtr fr_;
    ::google::protobuf::internal::ArenaStringPtr de_;
    ::google::protobuf::internal::ArenaStringPtr it_;
    ::google::protobuf::internal::ArenaStringPtr ja_;
    ::google::protobuf::internal::ArenaStringPtr pt_;
    ::google::protobuf::internal::ArenaStringPtr ru_;
    ::google::protobuf::internal::ArenaStringPtr cn_;
    ::google::protobuf::internal::ArenaStringPtr ko_;
    ::google::protobuf::internal::ArenaStringPtr hk_;
    ::google::protobuf::internal::ArenaStringPtr tr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class RepeatedInt32 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.RepeatedInt32) */ {
 public:
  inline RepeatedInt32() : RepeatedInt32(nullptr) {}
  ~RepeatedInt32() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RepeatedInt32(::google::protobuf::internal::ConstantInitialized);

  RepeatedInt32(const RepeatedInt32& from);
  RepeatedInt32(RepeatedInt32&& from) noexcept
    : RepeatedInt32() {
    *this = ::std::move(from);
  }

  inline RepeatedInt32& operator=(const RepeatedInt32& from) {
    CopyFrom(from);
    return *this;
  }
  inline RepeatedInt32& operator=(RepeatedInt32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RepeatedInt32& default_instance() {
    return *internal_default_instance();
  }
  static inline const RepeatedInt32* internal_default_instance() {
    return reinterpret_cast<const RepeatedInt32*>(
               &_RepeatedInt32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(RepeatedInt32& a, RepeatedInt32& b) {
    a.Swap(&b);
  }
  inline void Swap(RepeatedInt32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RepeatedInt32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RepeatedInt32* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RepeatedInt32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RepeatedInt32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RepeatedInt32& from) {
    RepeatedInt32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RepeatedInt32* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.RepeatedInt32";
  }
  protected:
  explicit RepeatedInt32(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated int32 values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::int32_t values(int index) const;
  void set_values(int index, ::int32_t value);
  void add_values(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& values() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_values() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.RepeatedInt32)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int32_t> values_;
    mutable ::google::protobuf::internal::CachedSize _values_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class PlayerlifecycleNotification final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.PlayerlifecycleNotification) */ {
 public:
  inline PlayerlifecycleNotification() : PlayerlifecycleNotification(nullptr) {}
  ~PlayerlifecycleNotification() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerlifecycleNotification(::google::protobuf::internal::ConstantInitialized);

  PlayerlifecycleNotification(const PlayerlifecycleNotification& from);
  PlayerlifecycleNotification(PlayerlifecycleNotification&& from) noexcept
    : PlayerlifecycleNotification() {
    *this = ::std::move(from);
  }

  inline PlayerlifecycleNotification& operator=(const PlayerlifecycleNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerlifecycleNotification& operator=(PlayerlifecycleNotification&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerlifecycleNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerlifecycleNotification* internal_default_instance() {
    return reinterpret_cast<const PlayerlifecycleNotification*>(
               &_PlayerlifecycleNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(PlayerlifecycleNotification& a, PlayerlifecycleNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerlifecycleNotification* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerlifecycleNotification* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerlifecycleNotification* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerlifecycleNotification>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerlifecycleNotification& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayerlifecycleNotification& from) {
    PlayerlifecycleNotification::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerlifecycleNotification* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.PlayerlifecycleNotification";
  }
  protected:
  explicit PlayerlifecycleNotification(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlaygamiIdFieldNumber = 2,
    kCategoryFieldNumber = 3,
    kContentTypeFieldNumber = 1,
  };
  // string playgamiId = 2;
  void clear_playgamiid() ;
  const std::string& playgamiid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_playgamiid(Arg_&& arg, Args_... args);
  std::string* mutable_playgamiid();
  PROTOBUF_NODISCARD std::string* release_playgamiid();
  void set_allocated_playgamiid(std::string* ptr);

  private:
  const std::string& _internal_playgamiid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_playgamiid(
      const std::string& value);
  std::string* _internal_mutable_playgamiid();

  public:
  // string category = 3;
  void clear_category() ;
  const std::string& category() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  std::string* mutable_category();
  PROTOBUF_NODISCARD std::string* release_category();
  void set_allocated_category(std::string* ptr);

  private:
  const std::string& _internal_category() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_category(
      const std::string& value);
  std::string* _internal_mutable_category();

  public:
  // .Digit.PrimePlatform.Models.PlayerlifecycleContentType contentType = 1;
  void clear_contenttype() ;
  ::Digit::PrimePlatform::Models::PlayerlifecycleContentType contenttype() const;
  void set_contenttype(::Digit::PrimePlatform::Models::PlayerlifecycleContentType value);

  private:
  ::Digit::PrimePlatform::Models::PlayerlifecycleContentType _internal_contenttype() const;
  void _internal_set_contenttype(::Digit::PrimePlatform::Models::PlayerlifecycleContentType value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.PlayerlifecycleNotification)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 81, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr playgamiid_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    int contenttype_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class GameNewsModel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.GameNewsModel) */ {
 public:
  inline GameNewsModel() : GameNewsModel(nullptr) {}
  ~GameNewsModel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GameNewsModel(::google::protobuf::internal::ConstantInitialized);

  GameNewsModel(const GameNewsModel& from);
  GameNewsModel(GameNewsModel&& from) noexcept
    : GameNewsModel() {
    *this = ::std::move(from);
  }

  inline GameNewsModel& operator=(const GameNewsModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameNewsModel& operator=(GameNewsModel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameNewsModel& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameNewsModel* internal_default_instance() {
    return reinterpret_cast<const GameNewsModel*>(
               &_GameNewsModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(GameNewsModel& a, GameNewsModel& b) {
    a.Swap(&b);
  }
  inline void Swap(GameNewsModel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameNewsModel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameNewsModel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GameNewsModel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameNewsModel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GameNewsModel& from) {
    GameNewsModel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameNewsModel* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.GameNewsModel";
  }
  protected:
  explicit GameNewsModel(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartDateFieldNumber = 5,
    kEndDateFieldNumber = 6,
    kMetadataFieldNumber = 7,
    kNewsIdFieldNumber = 1,
    kPriorityFieldNumber = 2,
    kPinnedFieldNumber = 3,
    kImportantFieldNumber = 4,
    kIsPlayerlifecycleFieldNumber = 8,
  };
  // .google.protobuf.Timestamp startDate = 5;
  bool has_startdate() const;
  void clear_startdate() ;
  const ::google::protobuf::Timestamp& startdate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_startdate();
  ::google::protobuf::Timestamp* mutable_startdate();
  void set_allocated_startdate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_startdate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_startdate();

  private:
  const ::google::protobuf::Timestamp& _internal_startdate() const;
  ::google::protobuf::Timestamp* _internal_mutable_startdate();

  public:
  // .google.protobuf.Timestamp endDate = 6;
  bool has_enddate() const;
  void clear_enddate() ;
  const ::google::protobuf::Timestamp& enddate() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_enddate();
  ::google::protobuf::Timestamp* mutable_enddate();
  void set_allocated_enddate(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_enddate(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_enddate();

  private:
  const ::google::protobuf::Timestamp& _internal_enddate() const;
  ::google::protobuf::Timestamp* _internal_mutable_enddate();

  public:
  // .Digit.PrimePlatform.Models.GameNewsMetadata metadata = 7;
  bool has_metadata() const;
  void clear_metadata() ;
  const ::Digit::PrimePlatform::Models::GameNewsMetadata& metadata() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::GameNewsMetadata* release_metadata();
  ::Digit::PrimePlatform::Models::GameNewsMetadata* mutable_metadata();
  void set_allocated_metadata(::Digit::PrimePlatform::Models::GameNewsMetadata* value);
  void unsafe_arena_set_allocated_metadata(::Digit::PrimePlatform::Models::GameNewsMetadata* value);
  ::Digit::PrimePlatform::Models::GameNewsMetadata* unsafe_arena_release_metadata();

  private:
  const ::Digit::PrimePlatform::Models::GameNewsMetadata& _internal_metadata() const;
  ::Digit::PrimePlatform::Models::GameNewsMetadata* _internal_mutable_metadata();

  public:
  // int32 newsId = 1;
  void clear_newsid() ;
  ::int32_t newsid() const;
  void set_newsid(::int32_t value);

  private:
  ::int32_t _internal_newsid() const;
  void _internal_set_newsid(::int32_t value);

  public:
  // int32 priority = 2;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // bool pinned = 3;
  void clear_pinned() ;
  bool pinned() const;
  void set_pinned(bool value);

  private:
  bool _internal_pinned() const;
  void _internal_set_pinned(bool value);

  public:
  // bool important = 4;
  void clear_important() ;
  bool important() const;
  void set_important(bool value);

  private:
  bool _internal_important() const;
  void _internal_set_important(bool value);

  public:
  // bool isPlayerlifecycle = 8;
  void clear_isplayerlifecycle() ;
  bool isplayerlifecycle() const;
  void set_isplayerlifecycle(bool value);

  private:
  bool _internal_isplayerlifecycle() const;
  void _internal_set_isplayerlifecycle(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.GameNewsModel)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::Timestamp* startdate_;
    ::google::protobuf::Timestamp* enddate_;
    ::Digit::PrimePlatform::Models::GameNewsMetadata* metadata_;
    ::int32_t newsid_;
    ::int32_t priority_;
    bool pinned_;
    bool important_;
    bool isplayerlifecycle_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class GameNewsHolder final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.GameNewsHolder) */ {
 public:
  inline GameNewsHolder() : GameNewsHolder(nullptr) {}
  ~GameNewsHolder() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GameNewsHolder(::google::protobuf::internal::ConstantInitialized);

  GameNewsHolder(const GameNewsHolder& from);
  GameNewsHolder(GameNewsHolder&& from) noexcept
    : GameNewsHolder() {
    *this = ::std::move(from);
  }

  inline GameNewsHolder& operator=(const GameNewsHolder& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameNewsHolder& operator=(GameNewsHolder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameNewsHolder& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameNewsHolder* internal_default_instance() {
    return reinterpret_cast<const GameNewsHolder*>(
               &_GameNewsHolder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GameNewsHolder& a, GameNewsHolder& b) {
    a.Swap(&b);
  }
  inline void Swap(GameNewsHolder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameNewsHolder* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameNewsHolder* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GameNewsHolder>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameNewsHolder& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GameNewsHolder& from) {
    GameNewsHolder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameNewsHolder* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.GameNewsHolder";
  }
  protected:
  explicit GameNewsHolder(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewsItemsFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Models.GameNewsModel newsItems = 1;
  int newsitems_size() const;
  private:
  int _internal_newsitems_size() const;

  public:
  void clear_newsitems() ;
  ::Digit::PrimePlatform::Models::GameNewsModel* mutable_newsitems(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::GameNewsModel >*
      mutable_newsitems();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::GameNewsModel>& _internal_newsitems() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::GameNewsModel>* _internal_mutable_newsitems();
  public:
  const ::Digit::PrimePlatform::Models::GameNewsModel& newsitems(int index) const;
  ::Digit::PrimePlatform::Models::GameNewsModel* add_newsitems();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::GameNewsModel >&
      newsitems() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.GameNewsHolder)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::GameNewsModel > newsitems_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class GameNewsMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.GameNewsMetadata) */ {
 public:
  inline GameNewsMetadata() : GameNewsMetadata(nullptr) {}
  ~GameNewsMetadata() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GameNewsMetadata(::google::protobuf::internal::ConstantInitialized);

  GameNewsMetadata(const GameNewsMetadata& from);
  GameNewsMetadata(GameNewsMetadata&& from) noexcept
    : GameNewsMetadata() {
    *this = ::std::move(from);
  }

  inline GameNewsMetadata& operator=(const GameNewsMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameNewsMetadata& operator=(GameNewsMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameNewsMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const GameNewsMetadata* internal_default_instance() {
    return reinterpret_cast<const GameNewsMetadata*>(
               &_GameNewsMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GameNewsMetadata& a, GameNewsMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(GameNewsMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameNewsMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameNewsMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GameNewsMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameNewsMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GameNewsMetadata& from) {
    GameNewsMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameNewsMetadata* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.GameNewsMetadata";
  }
  protected:
  explicit GameNewsMetadata(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAssetIdFieldNumber = 1,
    kAssetFilenameFieldNumber = 2,
  };
  // string assetId = 1;
  void clear_assetid() ;
  const std::string& assetid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_assetid(Arg_&& arg, Args_... args);
  std::string* mutable_assetid();
  PROTOBUF_NODISCARD std::string* release_assetid();
  void set_allocated_assetid(std::string* ptr);

  private:
  const std::string& _internal_assetid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_assetid(
      const std::string& value);
  std::string* _internal_mutable_assetid();

  public:
  // string assetFilename = 2;
  void clear_assetfilename() ;
  const std::string& assetfilename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_assetfilename(Arg_&& arg, Args_... args);
  std::string* mutable_assetfilename();
  PROTOBUF_NODISCARD std::string* release_assetfilename();
  void set_allocated_assetfilename(std::string* ptr);

  private:
  const std::string& _internal_assetfilename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_assetfilename(
      const std::string& value);
  std::string* _internal_mutable_assetfilename();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.GameNewsMetadata)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 72, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr assetid_;
    ::google::protobuf::internal::ArenaStringPtr assetfilename_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class Notifications final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.Notifications) */ {
 public:
  inline Notifications() : Notifications(nullptr) {}
  ~Notifications() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Notifications(::google::protobuf::internal::ConstantInitialized);

  Notifications(const Notifications& from);
  Notifications(Notifications&& from) noexcept
    : Notifications() {
    *this = ::std::move(from);
  }

  inline Notifications& operator=(const Notifications& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notifications& operator=(Notifications&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Notifications& default_instance() {
    return *internal_default_instance();
  }
  static inline const Notifications* internal_default_instance() {
    return reinterpret_cast<const Notifications*>(
               &_Notifications_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(Notifications& a, Notifications& b) {
    a.Swap(&b);
  }
  inline void Swap(Notifications* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Notifications* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Notifications* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Notifications>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Notifications& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Notifications& from) {
    Notifications::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notifications* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.Notifications";
  }
  protected:
  explicit Notifications(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTournamentNotificationsFieldNumber = 1,
    kLeaderboardNotificationsFieldNumber = 2,
    kPlayerlifecycleNotificationsFieldNumber = 3,
  };
  // repeated .Digit.PrimePlatform.Models.EventNotification tournamentNotifications = 1;
  int tournamentnotifications_size() const;
  private:
  int _internal_tournamentnotifications_size() const;

  public:
  void clear_tournamentnotifications() ;
  ::Digit::PrimePlatform::Models::EventNotification* mutable_tournamentnotifications(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >*
      mutable_tournamentnotifications();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>& _internal_tournamentnotifications() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>* _internal_mutable_tournamentnotifications();
  public:
  const ::Digit::PrimePlatform::Models::EventNotification& tournamentnotifications(int index) const;
  ::Digit::PrimePlatform::Models::EventNotification* add_tournamentnotifications();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >&
      tournamentnotifications() const;
  // repeated .Digit.PrimePlatform.Models.EventNotification leaderboardNotifications = 2;
  int leaderboardnotifications_size() const;
  private:
  int _internal_leaderboardnotifications_size() const;

  public:
  void clear_leaderboardnotifications() ;
  ::Digit::PrimePlatform::Models::EventNotification* mutable_leaderboardnotifications(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >*
      mutable_leaderboardnotifications();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>& _internal_leaderboardnotifications() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>* _internal_mutable_leaderboardnotifications();
  public:
  const ::Digit::PrimePlatform::Models::EventNotification& leaderboardnotifications(int index) const;
  ::Digit::PrimePlatform::Models::EventNotification* add_leaderboardnotifications();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >&
      leaderboardnotifications() const;
  // repeated .Digit.PrimePlatform.Models.PlayerlifecycleNotification playerlifecycleNotifications = 3;
  int playerlifecyclenotifications_size() const;
  private:
  int _internal_playerlifecyclenotifications_size() const;

  public:
  void clear_playerlifecyclenotifications() ;
  ::Digit::PrimePlatform::Models::PlayerlifecycleNotification* mutable_playerlifecyclenotifications(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerlifecycleNotification >*
      mutable_playerlifecyclenotifications();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerlifecycleNotification>& _internal_playerlifecyclenotifications() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerlifecycleNotification>* _internal_mutable_playerlifecyclenotifications();
  public:
  const ::Digit::PrimePlatform::Models::PlayerlifecycleNotification& playerlifecyclenotifications(int index) const;
  ::Digit::PrimePlatform::Models::PlayerlifecycleNotification* add_playerlifecyclenotifications();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerlifecycleNotification >&
      playerlifecyclenotifications() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.Notifications)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 3, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification > tournamentnotifications_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification > leaderboardnotifications_;
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerlifecycleNotification > playerlifecyclenotifications_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class PlatformUserProfile final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.PlatformUserProfile) */ {
 public:
  inline PlatformUserProfile() : PlatformUserProfile(nullptr) {}
  ~PlatformUserProfile() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlatformUserProfile(::google::protobuf::internal::ConstantInitialized);

  PlatformUserProfile(const PlatformUserProfile& from);
  PlatformUserProfile(PlatformUserProfile&& from) noexcept
    : PlatformUserProfile() {
    *this = ::std::move(from);
  }

  inline PlatformUserProfile& operator=(const PlatformUserProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlatformUserProfile& operator=(PlatformUserProfile&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlatformUserProfile& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlatformUserProfile* internal_default_instance() {
    return reinterpret_cast<const PlatformUserProfile*>(
               &_PlatformUserProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(PlatformUserProfile& a, PlatformUserProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(PlatformUserProfile* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlatformUserProfile* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlatformUserProfile* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlatformUserProfile>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlatformUserProfile& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlatformUserProfile& from) {
    PlatformUserProfile::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlatformUserProfile* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.PlatformUserProfile";
  }
  protected:
  explicit PlatformUserProfile(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* ptr);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.PlatformUserProfile)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 68, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class PlatformUserProfileResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.PlatformUserProfileResponse) */ {
 public:
  inline PlatformUserProfileResponse() : PlatformUserProfileResponse(nullptr) {}
  ~PlatformUserProfileResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlatformUserProfileResponse(::google::protobuf::internal::ConstantInitialized);

  PlatformUserProfileResponse(const PlatformUserProfileResponse& from);
  PlatformUserProfileResponse(PlatformUserProfileResponse&& from) noexcept
    : PlatformUserProfileResponse() {
    *this = ::std::move(from);
  }

  inline PlatformUserProfileResponse& operator=(const PlatformUserProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlatformUserProfileResponse& operator=(PlatformUserProfileResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlatformUserProfileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlatformUserProfileResponse* internal_default_instance() {
    return reinterpret_cast<const PlatformUserProfileResponse*>(
               &_PlatformUserProfileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(PlatformUserProfileResponse& a, PlatformUserProfileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PlatformUserProfileResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlatformUserProfileResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlatformUserProfileResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlatformUserProfileResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlatformUserProfileResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlatformUserProfileResponse& from) {
    PlatformUserProfileResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlatformUserProfileResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.PlatformUserProfileResponse";
  }
  protected:
  explicit PlatformUserProfileResponse(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerProfilesFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Models.PlatformUserProfile playerProfiles = 1;
  int playerprofiles_size() const;
  private:
  int _internal_playerprofiles_size() const;

  public:
  void clear_playerprofiles() ;
  ::Digit::PrimePlatform::Models::PlatformUserProfile* mutable_playerprofiles(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlatformUserProfile >*
      mutable_playerprofiles();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlatformUserProfile>& _internal_playerprofiles() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlatformUserProfile>* _internal_mutable_playerprofiles();
  public:
  const ::Digit::PrimePlatform::Models::PlatformUserProfile& playerprofiles(int index) const;
  ::Digit::PrimePlatform::Models::PlatformUserProfile* add_playerprofiles();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlatformUserProfile >&
      playerprofiles() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.PlatformUserProfileResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlatformUserProfile > playerprofiles_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class PlayerStats final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.PlayerStats) */ {
 public:
  inline PlayerStats() : PlayerStats(nullptr) {}
  ~PlayerStats() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerStats(::google::protobuf::internal::ConstantInitialized);

  PlayerStats(const PlayerStats& from);
  PlayerStats(PlayerStats&& from) noexcept
    : PlayerStats() {
    *this = ::std::move(from);
  }

  inline PlayerStats& operator=(const PlayerStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerStats& operator=(PlayerStats&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerStats* internal_default_instance() {
    return reinterpret_cast<const PlayerStats*>(
               &_PlayerStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(PlayerStats& a, PlayerStats& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerStats* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerStats* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerStats* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerStats>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerStats& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayerStats& from) {
    PlayerStats::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerStats* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.PlayerStats";
  }
  protected:
  explicit PlayerStats(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGroupsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Models.PlayerStatsGroup groups = 2;
  int groups_size() const;
  private:
  int _internal_groups_size() const;

  public:
  void clear_groups() ;
  ::Digit::PrimePlatform::Models::PlayerStatsGroup* mutable_groups(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsGroup >*
      mutable_groups();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsGroup>& _internal_groups() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsGroup>* _internal_mutable_groups();
  public:
  const ::Digit::PrimePlatform::Models::PlayerStatsGroup& groups(int index) const;
  ::Digit::PrimePlatform::Models::PlayerStatsGroup* add_groups();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsGroup >&
      groups() const;
  // string accountId = 1;
  void clear_accountid() ;
  const std::string& accountid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_accountid(Arg_&& arg, Args_... args);
  std::string* mutable_accountid();
  PROTOBUF_NODISCARD std::string* release_accountid();
  void set_allocated_accountid(std::string* ptr);

  private:
  const std::string& _internal_accountid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_accountid(
      const std::string& value);
  std::string* _internal_mutable_accountid();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.PlayerStats)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsGroup > groups_;
    ::google::protobuf::internal::ArenaStringPtr accountid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class PlayerStatsGroup final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.PlayerStatsGroup) */ {
 public:
  inline PlayerStatsGroup() : PlayerStatsGroup(nullptr) {}
  ~PlayerStatsGroup() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerStatsGroup(::google::protobuf::internal::ConstantInitialized);

  PlayerStatsGroup(const PlayerStatsGroup& from);
  PlayerStatsGroup(PlayerStatsGroup&& from) noexcept
    : PlayerStatsGroup() {
    *this = ::std::move(from);
  }

  inline PlayerStatsGroup& operator=(const PlayerStatsGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerStatsGroup& operator=(PlayerStatsGroup&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerStatsGroup& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerStatsGroup* internal_default_instance() {
    return reinterpret_cast<const PlayerStatsGroup*>(
               &_PlayerStatsGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(PlayerStatsGroup& a, PlayerStatsGroup& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerStatsGroup* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerStatsGroup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerStatsGroup* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerStatsGroup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerStatsGroup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayerStatsGroup& from) {
    PlayerStatsGroup::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerStatsGroup* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.PlayerStatsGroup";
  }
  protected:
  explicit PlayerStatsGroup(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Models.PlayerStatsEntry entries = 2;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::Digit::PrimePlatform::Models::PlayerStatsEntry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsEntry >*
      mutable_entries();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsEntry>* _internal_mutable_entries();
  public:
  const ::Digit::PrimePlatform::Models::PlayerStatsEntry& entries(int index) const;
  ::Digit::PrimePlatform::Models::PlayerStatsEntry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsEntry >&
      entries() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.PlayerStatsGroup)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 56, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsEntry > entries_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class PlayerStatsEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.PlayerStatsEntry) */ {
 public:
  inline PlayerStatsEntry() : PlayerStatsEntry(nullptr) {}
  ~PlayerStatsEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerStatsEntry(::google::protobuf::internal::ConstantInitialized);

  PlayerStatsEntry(const PlayerStatsEntry& from);
  PlayerStatsEntry(PlayerStatsEntry&& from) noexcept
    : PlayerStatsEntry() {
    *this = ::std::move(from);
  }

  inline PlayerStatsEntry& operator=(const PlayerStatsEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerStatsEntry& operator=(PlayerStatsEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerStatsEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerStatsEntry* internal_default_instance() {
    return reinterpret_cast<const PlayerStatsEntry*>(
               &_PlayerStatsEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(PlayerStatsEntry& a, PlayerStatsEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerStatsEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerStatsEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerStatsEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerStatsEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerStatsEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayerStatsEntry& from) {
    PlayerStatsEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerStatsEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.PlayerStatsEntry";
  }
  protected:
  explicit PlayerStatsEntry(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatIdFieldNumber = 1,
    kPriorityFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // string statId = 1;
  void clear_statid() ;
  const std::string& statid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_statid(Arg_&& arg, Args_... args);
  std::string* mutable_statid();
  PROTOBUF_NODISCARD std::string* release_statid();
  void set_allocated_statid(std::string* ptr);

  private:
  const std::string& _internal_statid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_statid(
      const std::string& value);
  std::string* _internal_mutable_statid();

  public:
  // int32 priority = 2;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // float value = 3;
  void clear_value() ;
  float value() const;
  void set_value(float value);

  private:
  float _internal_value() const;
  void _internal_set_value(float value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.PlayerStatsEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 58, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr statid_;
    ::int32_t priority_;
    float value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class CacheHints final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.CacheHints) */ {
 public:
  inline CacheHints() : CacheHints(nullptr) {}
  ~CacheHints() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CacheHints(::google::protobuf::internal::ConstantInitialized);

  CacheHints(const CacheHints& from);
  CacheHints(CacheHints&& from) noexcept
    : CacheHints() {
    *this = ::std::move(from);
  }

  inline CacheHints& operator=(const CacheHints& from) {
    CopyFrom(from);
    return *this;
  }
  inline CacheHints& operator=(CacheHints&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CacheHints& default_instance() {
    return *internal_default_instance();
  }
  static inline const CacheHints* internal_default_instance() {
    return reinterpret_cast<const CacheHints*>(
               &_CacheHints_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CacheHints& a, CacheHints& b) {
    a.Swap(&b);
  }
  inline void Swap(CacheHints* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CacheHints* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CacheHints* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CacheHints>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CacheHints& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CacheHints& from) {
    CacheHints::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CacheHints* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.CacheHints";
  }
  protected:
  explicit CacheHints(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTranslationCacheUpdateFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Models.TranslationCacheUpdate translationCacheUpdate = 1;
  int translationcacheupdate_size() const;
  private:
  int _internal_translationcacheupdate_size() const;

  public:
  void clear_translationcacheupdate() ;
  ::Digit::PrimePlatform::Models::TranslationCacheUpdate* mutable_translationcacheupdate(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::TranslationCacheUpdate >*
      mutable_translationcacheupdate();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::TranslationCacheUpdate>& _internal_translationcacheupdate() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::TranslationCacheUpdate>* _internal_mutable_translationcacheupdate();
  public:
  const ::Digit::PrimePlatform::Models::TranslationCacheUpdate& translationcacheupdate(int index) const;
  ::Digit::PrimePlatform::Models::TranslationCacheUpdate* add_translationcacheupdate();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::TranslationCacheUpdate >&
      translationcacheupdate() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.CacheHints)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::TranslationCacheUpdate > translationcacheupdate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class Product final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.Product) */ {
 public:
  inline Product() : Product(nullptr) {}
  ~Product() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Product(::google::protobuf::internal::ConstantInitialized);

  Product(const Product& from);
  Product(Product&& from) noexcept
    : Product() {
    *this = ::std::move(from);
  }

  inline Product& operator=(const Product& from) {
    CopyFrom(from);
    return *this;
  }
  inline Product& operator=(Product&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Product& default_instance() {
    return *internal_default_instance();
  }
  static inline const Product* internal_default_instance() {
    return reinterpret_cast<const Product*>(
               &_Product_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(Product& a, Product& b) {
    a.Swap(&b);
  }
  inline void Swap(Product* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Product* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Product* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Product>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Product& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Product& from) {
    Product::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Product* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.Product";
  }
  protected:
  explicit Product(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstancesFieldNumber = 5,
    kNameFieldNumber = 2,
    kCodeFieldNumber = 3,
    kIdFieldNumber = 1,
    kStatusFieldNumber = 4,
  };
  // repeated .Digit.PrimePlatform.Models.Instance instances = 5;
  int instances_size() const;
  private:
  int _internal_instances_size() const;

  public:
  void clear_instances() ;
  ::Digit::PrimePlatform::Models::Instance* mutable_instances(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Instance >*
      mutable_instances();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Instance>& _internal_instances() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Instance>* _internal_mutable_instances();
  public:
  const ::Digit::PrimePlatform::Models::Instance& instances(int index) const;
  ::Digit::PrimePlatform::Models::Instance* add_instances();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Instance >&
      instances() const;
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string code = 3;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* ptr);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 status = 4;
  void clear_status() ;
  ::uint32_t status() const;
  void set_status(::uint32_t value);

  private:
  ::uint32_t _internal_status() const;
  void _internal_set_status(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.Product)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 51, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Instance > instances_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::uint32_t id_;
    ::uint32_t status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class ProductInfoHolder final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.ProductInfoHolder) */ {
 public:
  inline ProductInfoHolder() : ProductInfoHolder(nullptr) {}
  ~ProductInfoHolder() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ProductInfoHolder(::google::protobuf::internal::ConstantInitialized);

  ProductInfoHolder(const ProductInfoHolder& from);
  ProductInfoHolder(ProductInfoHolder&& from) noexcept
    : ProductInfoHolder() {
    *this = ::std::move(from);
  }

  inline ProductInfoHolder& operator=(const ProductInfoHolder& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductInfoHolder& operator=(ProductInfoHolder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductInfoHolder& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductInfoHolder* internal_default_instance() {
    return reinterpret_cast<const ProductInfoHolder*>(
               &_ProductInfoHolder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(ProductInfoHolder& a, ProductInfoHolder& b) {
    a.Swap(&b);
  }
  inline void Swap(ProductInfoHolder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductInfoHolder* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProductInfoHolder* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProductInfoHolder>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProductInfoHolder& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ProductInfoHolder& from) {
    ProductInfoHolder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductInfoHolder* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.ProductInfoHolder";
  }
  protected:
  explicit ProductInfoHolder(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
    kProductFieldNumber = 2,
    kCacheHintsFieldNumber = 3,
  };
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* ptr);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // .Digit.PrimePlatform.Models.Product product = 2;
  bool has_product() const;
  void clear_product() ;
  const ::Digit::PrimePlatform::Models::Product& product() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::Product* release_product();
  ::Digit::PrimePlatform::Models::Product* mutable_product();
  void set_allocated_product(::Digit::PrimePlatform::Models::Product* value);
  void unsafe_arena_set_allocated_product(::Digit::PrimePlatform::Models::Product* value);
  ::Digit::PrimePlatform::Models::Product* unsafe_arena_release_product();

  private:
  const ::Digit::PrimePlatform::Models::Product& _internal_product() const;
  ::Digit::PrimePlatform::Models::Product* _internal_mutable_product();

  public:
  // .Digit.PrimePlatform.Models.CacheHints cacheHints = 3;
  bool has_cachehints() const;
  void clear_cachehints() ;
  const ::Digit::PrimePlatform::Models::CacheHints& cachehints() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::CacheHints* release_cachehints();
  ::Digit::PrimePlatform::Models::CacheHints* mutable_cachehints();
  void set_allocated_cachehints(::Digit::PrimePlatform::Models::CacheHints* value);
  void unsafe_arena_set_allocated_cachehints(::Digit::PrimePlatform::Models::CacheHints* value);
  ::Digit::PrimePlatform::Models::CacheHints* unsafe_arena_release_cachehints();

  private:
  const ::Digit::PrimePlatform::Models::CacheHints& _internal_cachehints() const;
  ::Digit::PrimePlatform::Models::CacheHints* _internal_mutable_cachehints();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.ProductInfoHolder)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 60, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::Digit::PrimePlatform::Models::Product* product_;
    ::Digit::PrimePlatform::Models::CacheHints* cachehints_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class Region final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.Region) */ {
 public:
  inline Region() : Region(nullptr) {}
  ~Region() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Region(::google::protobuf::internal::ConstantInitialized);

  Region(const Region& from);
  Region(Region&& from) noexcept
    : Region() {
    *this = ::std::move(from);
  }

  inline Region& operator=(const Region& from) {
    CopyFrom(from);
    return *this;
  }
  inline Region& operator=(Region&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Region& default_instance() {
    return *internal_default_instance();
  }
  static inline const Region* internal_default_instance() {
    return reinterpret_cast<const Region*>(
               &_Region_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(Region& a, Region& b) {
    a.Swap(&b);
  }
  inline void Swap(Region* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Region* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Region* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Region>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Region& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Region& from) {
    Region::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Region* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.Region";
  }
  protected:
  explicit Region(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kNumFieldNumber = 3,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* ptr);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* ptr);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // uint32 num = 3;
  void clear_num() ;
  ::uint32_t num() const;
  void set_num(::uint32_t value);

  private:
  ::uint32_t _internal_num() const;
  void _internal_set_num(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.Region)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 55, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::uint32_t num_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class Instance final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.Instance) */ {
 public:
  inline Instance() : Instance(nullptr) {}
  ~Instance() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Instance(::google::protobuf::internal::ConstantInitialized);

  Instance(const Instance& from);
  Instance(Instance&& from) noexcept
    : Instance() {
    *this = ::std::move(from);
  }

  inline Instance& operator=(const Instance& from) {
    CopyFrom(from);
    return *this;
  }
  inline Instance& operator=(Instance&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Instance& default_instance() {
    return *internal_default_instance();
  }
  static inline const Instance* internal_default_instance() {
    return reinterpret_cast<const Instance*>(
               &_Instance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(Instance& a, Instance& b) {
    a.Swap(&b);
  }
  inline void Swap(Instance* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Instance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Instance* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Instance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Instance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Instance& from) {
    Instance::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Instance* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.Instance";
  }
  protected:
  explicit Instance(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kRegionFieldNumber = 4,
    kPlayerTransferStateFieldNumber = 7,
    kIdFieldNumber = 1,
    kPriorityFieldNumber = 3,
    kMaintenanceFieldNumber = 6,
    kStatusFieldNumber = 5,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .Digit.PrimePlatform.Models.Region region = 4;
  bool has_region() const;
  void clear_region() ;
  const ::Digit::PrimePlatform::Models::Region& region() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::Region* release_region();
  ::Digit::PrimePlatform::Models::Region* mutable_region();
  void set_allocated_region(::Digit::PrimePlatform::Models::Region* value);
  void unsafe_arena_set_allocated_region(::Digit::PrimePlatform::Models::Region* value);
  ::Digit::PrimePlatform::Models::Region* unsafe_arena_release_region();

  private:
  const ::Digit::PrimePlatform::Models::Region& _internal_region() const;
  ::Digit::PrimePlatform::Models::Region* _internal_mutable_region();

  public:
  // .Digit.PrimePlatform.Models.PlayerTransferState playerTransferState = 7;
  bool has_playertransferstate() const;
  void clear_playertransferstate() ;
  const ::Digit::PrimePlatform::Models::PlayerTransferState& playertransferstate() const;
  PROTOBUF_NODISCARD ::Digit::PrimePlatform::Models::PlayerTransferState* release_playertransferstate();
  ::Digit::PrimePlatform::Models::PlayerTransferState* mutable_playertransferstate();
  void set_allocated_playertransferstate(::Digit::PrimePlatform::Models::PlayerTransferState* value);
  void unsafe_arena_set_allocated_playertransferstate(::Digit::PrimePlatform::Models::PlayerTransferState* value);
  ::Digit::PrimePlatform::Models::PlayerTransferState* unsafe_arena_release_playertransferstate();

  private:
  const ::Digit::PrimePlatform::Models::PlayerTransferState& _internal_playertransferstate() const;
  ::Digit::PrimePlatform::Models::PlayerTransferState* _internal_mutable_playertransferstate();

  public:
  // uint32 id = 1;
  void clear_id() ;
  ::uint32_t id() const;
  void set_id(::uint32_t value);

  private:
  ::uint32_t _internal_id() const;
  void _internal_set_id(::uint32_t value);

  public:
  // uint32 priority = 3;
  void clear_priority() ;
  ::uint32_t priority() const;
  void set_priority(::uint32_t value);

  private:
  ::uint32_t _internal_priority() const;
  void _internal_set_priority(::uint32_t value);

  public:
  // int64 maintenance = 6;
  void clear_maintenance() ;
  ::int64_t maintenance() const;
  void set_maintenance(::int64_t value);

  private:
  ::int64_t _internal_maintenance() const;
  void _internal_set_maintenance(::int64_t value);

  public:
  // int32 status = 5;
  void clear_status() ;
  ::int32_t status() const;
  void set_status(::int32_t value);

  private:
  ::int32_t _internal_status() const;
  void _internal_set_status(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.Instance)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7, 2, 48, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::Digit::PrimePlatform::Models::Region* region_;
    ::Digit::PrimePlatform::Models::PlayerTransferState* playertransferstate_;
    ::uint32_t id_;
    ::uint32_t priority_;
    ::int64_t maintenance_;
    ::int32_t status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class PlayerTransferState final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.PlayerTransferState) */ {
 public:
  inline PlayerTransferState() : PlayerTransferState(nullptr) {}
  ~PlayerTransferState() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerTransferState(::google::protobuf::internal::ConstantInitialized);

  PlayerTransferState(const PlayerTransferState& from);
  PlayerTransferState(PlayerTransferState&& from) noexcept
    : PlayerTransferState() {
    *this = ::std::move(from);
  }

  inline PlayerTransferState& operator=(const PlayerTransferState& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerTransferState& operator=(PlayerTransferState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerTransferState& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerTransferState* internal_default_instance() {
    return reinterpret_cast<const PlayerTransferState*>(
               &_PlayerTransferState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(PlayerTransferState& a, PlayerTransferState& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerTransferState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerTransferState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerTransferState* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PlayerTransferState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerTransferState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PlayerTransferState& from) {
    PlayerTransferState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerTransferState* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.PlayerTransferState";
  }
  protected:
  explicit PlayerTransferState(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTransferInFieldNumber = 1,
    kTransferOutFieldNumber = 2,
    kAuthenticatedFieldNumber = 3,
  };
  // bool transferIn = 1;
  void clear_transferin() ;
  bool transferin() const;
  void set_transferin(bool value);

  private:
  bool _internal_transferin() const;
  void _internal_set_transferin(bool value);

  public:
  // bool transferOut = 2;
  void clear_transferout() ;
  bool transferout() const;
  void set_transferout(bool value);

  private:
  bool _internal_transferout() const;
  void _internal_set_transferout(bool value);

  public:
  // bool authenticated = 3;
  void clear_authenticated() ;
  bool authenticated() const;
  void set_authenticated(bool value);

  private:
  bool _internal_authenticated() const;
  void _internal_set_authenticated(bool value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.PlayerTransferState)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    bool transferin_;
    bool transferout_;
    bool authenticated_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class TranslationCacheUpdate final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.TranslationCacheUpdate) */ {
 public:
  inline TranslationCacheUpdate() : TranslationCacheUpdate(nullptr) {}
  ~TranslationCacheUpdate() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TranslationCacheUpdate(::google::protobuf::internal::ConstantInitialized);

  TranslationCacheUpdate(const TranslationCacheUpdate& from);
  TranslationCacheUpdate(TranslationCacheUpdate&& from) noexcept
    : TranslationCacheUpdate() {
    *this = ::std::move(from);
  }

  inline TranslationCacheUpdate& operator=(const TranslationCacheUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline TranslationCacheUpdate& operator=(TranslationCacheUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TranslationCacheUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const TranslationCacheUpdate* internal_default_instance() {
    return reinterpret_cast<const TranslationCacheUpdate*>(
               &_TranslationCacheUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(TranslationCacheUpdate& a, TranslationCacheUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(TranslationCacheUpdate* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TranslationCacheUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TranslationCacheUpdate* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TranslationCacheUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TranslationCacheUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TranslationCacheUpdate& from) {
    TranslationCacheUpdate::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TranslationCacheUpdate* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.TranslationCacheUpdate";
  }
  protected:
  explicit TranslationCacheUpdate(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSectionFieldNumber = 1,
    kUpdatedAtFieldNumber = 2,
  };
  // string section = 1;
  void clear_section() ;
  const std::string& section() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_section(Arg_&& arg, Args_... args);
  std::string* mutable_section();
  PROTOBUF_NODISCARD std::string* release_section();
  void set_allocated_section(std::string* ptr);

  private:
  const std::string& _internal_section() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_section(
      const std::string& value);
  std::string* _internal_mutable_section();

  public:
  // .google.protobuf.Timestamp updatedAt = 2;
  bool has_updatedat() const;
  void clear_updatedat() ;
  const ::google::protobuf::Timestamp& updatedat() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updatedat();
  ::google::protobuf::Timestamp* mutable_updatedat();
  void set_allocated_updatedat(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updatedat(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updatedat();

  private:
  const ::google::protobuf::Timestamp& _internal_updatedat() const;
  ::google::protobuf::Timestamp* _internal_mutable_updatedat();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.TranslationCacheUpdate)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 65, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr section_;
    ::google::protobuf::Timestamp* updatedat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class MinigameHolder final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.MinigameHolder) */ {
 public:
  inline MinigameHolder() : MinigameHolder(nullptr) {}
  ~MinigameHolder() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MinigameHolder(::google::protobuf::internal::ConstantInitialized);

  MinigameHolder(const MinigameHolder& from);
  MinigameHolder(MinigameHolder&& from) noexcept
    : MinigameHolder() {
    *this = ::std::move(from);
  }

  inline MinigameHolder& operator=(const MinigameHolder& from) {
    CopyFrom(from);
    return *this;
  }
  inline MinigameHolder& operator=(MinigameHolder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MinigameHolder& default_instance() {
    return *internal_default_instance();
  }
  static inline const MinigameHolder* internal_default_instance() {
    return reinterpret_cast<const MinigameHolder*>(
               &_MinigameHolder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(MinigameHolder& a, MinigameHolder& b) {
    a.Swap(&b);
  }
  inline void Swap(MinigameHolder* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MinigameHolder* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MinigameHolder* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MinigameHolder>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MinigameHolder& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MinigameHolder& from) {
    MinigameHolder::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MinigameHolder* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.MinigameHolder";
  }
  protected:
  explicit MinigameHolder(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGamesFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Models.Minigame games = 1;
  int games_size() const;
  private:
  int _internal_games_size() const;

  public:
  void clear_games() ;
  ::Digit::PrimePlatform::Models::Minigame* mutable_games(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Minigame >*
      mutable_games();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Minigame>& _internal_games() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Minigame>* _internal_mutable_games();
  public:
  const ::Digit::PrimePlatform::Models::Minigame& games(int index) const;
  ::Digit::PrimePlatform::Models::Minigame* add_games();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Minigame >&
      games() const;
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.MinigameHolder)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Minigame > games_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class Minigame final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.Minigame) */ {
 public:
  inline Minigame() : Minigame(nullptr) {}
  ~Minigame() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Minigame(::google::protobuf::internal::ConstantInitialized);

  Minigame(const Minigame& from);
  Minigame(Minigame&& from) noexcept
    : Minigame() {
    *this = ::std::move(from);
  }

  inline Minigame& operator=(const Minigame& from) {
    CopyFrom(from);
    return *this;
  }
  inline Minigame& operator=(Minigame&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Minigame& default_instance() {
    return *internal_default_instance();
  }
  static inline const Minigame* internal_default_instance() {
    return reinterpret_cast<const Minigame*>(
               &_Minigame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(Minigame& a, Minigame& b) {
    a.Swap(&b);
  }
  inline void Swap(Minigame* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Minigame* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Minigame* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Minigame>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Minigame& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Minigame& from) {
    Minigame::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Minigame* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.Minigame";
  }
  protected:
  explicit Minigame(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStagesFieldNumber = 2,
    kConfigIdFieldNumber = 1,
  };
  // repeated .Digit.PrimePlatform.Models.MinigameStage stages = 2;
  int stages_size() const;
  private:
  int _internal_stages_size() const;

  public:
  void clear_stages() ;
  ::Digit::PrimePlatform::Models::MinigameStage* mutable_stages(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::MinigameStage >*
      mutable_stages();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::MinigameStage>& _internal_stages() const;
  ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::MinigameStage>* _internal_mutable_stages();
  public:
  const ::Digit::PrimePlatform::Models::MinigameStage& stages(int index) const;
  ::Digit::PrimePlatform::Models::MinigameStage* add_stages();
  const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::MinigameStage >&
      stages() const;
  // string configId = 1;
  void clear_configid() ;
  const std::string& configid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_configid(Arg_&& arg, Args_... args);
  std::string* mutable_configid();
  PROTOBUF_NODISCARD std::string* release_configid();
  void set_allocated_configid(std::string* ptr);

  private:
  const std::string& _internal_configid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_configid(
      const std::string& value);
  std::string* _internal_mutable_configid();

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.Minigame)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 52, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::MinigameStage > stages_;
    ::google::protobuf::internal::ArenaStringPtr configid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};// -------------------------------------------------------------------

class MinigameStage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.PrimePlatform.Models.MinigameStage) */ {
 public:
  inline MinigameStage() : MinigameStage(nullptr) {}
  ~MinigameStage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR MinigameStage(::google::protobuf::internal::ConstantInitialized);

  MinigameStage(const MinigameStage& from);
  MinigameStage(MinigameStage&& from) noexcept
    : MinigameStage() {
    *this = ::std::move(from);
  }

  inline MinigameStage& operator=(const MinigameStage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MinigameStage& operator=(MinigameStage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MinigameStage& default_instance() {
    return *internal_default_instance();
  }
  static inline const MinigameStage* internal_default_instance() {
    return reinterpret_cast<const MinigameStage*>(
               &_MinigameStage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(MinigameStage& a, MinigameStage& b) {
    a.Swap(&b);
  }
  inline void Swap(MinigameStage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MinigameStage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MinigameStage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MinigameStage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MinigameStage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const MinigameStage& from) {
    MinigameStage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MinigameStage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.PrimePlatform.Models.MinigameStage";
  }
  protected:
  explicit MinigameStage(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRewardsFieldNumber = 3,
    kConfigIdFieldNumber = 1,
    kLockedFieldNumber = 2,
    kScoreFieldNumber = 4,
    kPriorityFieldNumber = 5,
  };
  // repeated uint32 rewards = 3;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;

  public:
  void clear_rewards() ;
  ::uint32_t rewards(int index) const;
  void set_rewards(int index, ::uint32_t value);
  void add_rewards(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& rewards() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_rewards();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_rewards() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_rewards();

  public:
  // string configId = 1;
  void clear_configid() ;
  const std::string& configid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_configid(Arg_&& arg, Args_... args);
  std::string* mutable_configid();
  PROTOBUF_NODISCARD std::string* release_configid();
  void set_allocated_configid(std::string* ptr);

  private:
  const std::string& _internal_configid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_configid(
      const std::string& value);
  std::string* _internal_mutable_configid();

  public:
  // bool locked = 2;
  void clear_locked() ;
  bool locked() const;
  void set_locked(bool value);

  private:
  bool _internal_locked() const;
  void _internal_set_locked(bool value);

  public:
  // uint32 score = 4;
  void clear_score() ;
  ::uint32_t score() const;
  void set_score(::uint32_t value);

  private:
  ::uint32_t _internal_score() const;
  void _internal_set_score(::uint32_t value);

  public:
  // uint32 priority = 5;
  void clear_priority() ;
  ::uint32_t priority() const;
  void set_priority(::uint32_t value);

  private:
  ::uint32_t _internal_priority() const;
  void _internal_set_priority(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.PrimePlatform.Models.MinigameStage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 57, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::uint32_t> rewards_;
    mutable ::google::protobuf::internal::CachedSize _rewards_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr configid_;
    bool locked_;
    ::uint32_t score_;
    ::uint32_t priority_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrimePlatform_2eModels_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// EventEntryData

// bool isRegistered = 1;
inline void EventEntryData::clear_isregistered() {
  _impl_.isregistered_ = false;
}
inline bool EventEntryData::isregistered() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventEntryData.isRegistered)
  return _internal_isregistered();
}
inline void EventEntryData::set_isregistered(bool value) {
  _internal_set_isregistered(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventEntryData.isRegistered)
}
inline bool EventEntryData::_internal_isregistered() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isregistered_;
}
inline void EventEntryData::_internal_set_isregistered(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isregistered_ = value;
}

// bool canClaim = 2;
inline void EventEntryData::clear_canclaim() {
  _impl_.canclaim_ = false;
}
inline bool EventEntryData::canclaim() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventEntryData.canClaim)
  return _internal_canclaim();
}
inline void EventEntryData::set_canclaim(bool value) {
  _internal_set_canclaim(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventEntryData.canClaim)
}
inline bool EventEntryData::_internal_canclaim() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.canclaim_;
}
inline void EventEntryData::_internal_set_canclaim(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.canclaim_ = value;
}

// int32 lastClaimedRewardIndex = 3;
inline void EventEntryData::clear_lastclaimedrewardindex() {
  _impl_.lastclaimedrewardindex_ = 0;
}
inline ::int32_t EventEntryData::lastclaimedrewardindex() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventEntryData.lastClaimedRewardIndex)
  return _internal_lastclaimedrewardindex();
}
inline void EventEntryData::set_lastclaimedrewardindex(::int32_t value) {
  _internal_set_lastclaimedrewardindex(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventEntryData.lastClaimedRewardIndex)
}
inline ::int32_t EventEntryData::_internal_lastclaimedrewardindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lastclaimedrewardindex_;
}
inline void EventEntryData::_internal_set_lastclaimedrewardindex(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lastclaimedrewardindex_ = value;
}

// .Digit.PrimePlatform.Models.JoinForbidden joinForbidden = 4;
inline void EventEntryData::clear_joinforbidden() {
  _impl_.joinforbidden_ = 0;
}
inline ::Digit::PrimePlatform::Models::JoinForbidden EventEntryData::joinforbidden() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventEntryData.joinForbidden)
  return _internal_joinforbidden();
}
inline void EventEntryData::set_joinforbidden(::Digit::PrimePlatform::Models::JoinForbidden value) {
  _internal_set_joinforbidden(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventEntryData.joinForbidden)
}
inline ::Digit::PrimePlatform::Models::JoinForbidden EventEntryData::_internal_joinforbidden() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::PrimePlatform::Models::JoinForbidden>(_impl_.joinforbidden_);
}
inline void EventEntryData::_internal_set_joinforbidden(::Digit::PrimePlatform::Models::JoinForbidden value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.joinforbidden_ = value;
}

// -------------------------------------------------------------------

// EventHighlights

// int32 type = 1;
inline void EventHighlights::clear_type() {
  _impl_.type_ = 0;
}
inline ::int32_t EventHighlights::type() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventHighlights.type)
  return _internal_type();
}
inline void EventHighlights::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventHighlights.type)
}
inline ::int32_t EventHighlights::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void EventHighlights::_internal_set_type(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// repeated int64 nodeIds = 2;
inline int EventHighlights::_internal_nodeids_size() const {
  return _internal_nodeids().size();
}
inline int EventHighlights::nodeids_size() const {
  return _internal_nodeids_size();
}
inline void EventHighlights::clear_nodeids() {
  _internal_mutable_nodeids()->Clear();
}
inline ::int64_t EventHighlights::nodeids(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventHighlights.nodeIds)
  return _internal_nodeids().Get(index);
}
inline void EventHighlights::set_nodeids(int index, ::int64_t value) {
  _internal_mutable_nodeids()->Set(index, value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventHighlights.nodeIds)
}
inline void EventHighlights::add_nodeids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodeids()->Add(value);
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventHighlights.nodeIds)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& EventHighlights::nodeids() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventHighlights.nodeIds)
  return _internal_nodeids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventHighlights::mutable_nodeids() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventHighlights.nodeIds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_nodeids();
}

inline const ::google::protobuf::RepeatedField<::int64_t>& EventHighlights::_internal_nodeids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nodeids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventHighlights::_internal_mutable_nodeids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.nodeids_;
}

// repeated int64 specialIds = 3;
inline int EventHighlights::_internal_specialids_size() const {
  return _internal_specialids().size();
}
inline int EventHighlights::specialids_size() const {
  return _internal_specialids_size();
}
inline void EventHighlights::clear_specialids() {
  _internal_mutable_specialids()->Clear();
}
inline ::int64_t EventHighlights::specialids(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventHighlights.specialIds)
  return _internal_specialids().Get(index);
}
inline void EventHighlights::set_specialids(int index, ::int64_t value) {
  _internal_mutable_specialids()->Set(index, value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventHighlights.specialIds)
}
inline void EventHighlights::add_specialids(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_specialids()->Add(value);
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventHighlights.specialIds)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& EventHighlights::specialids() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventHighlights.specialIds)
  return _internal_specialids();
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventHighlights::mutable_specialids() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventHighlights.specialIds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_specialids();
}

inline const ::google::protobuf::RepeatedField<::int64_t>& EventHighlights::_internal_specialids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.specialids_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventHighlights::_internal_mutable_specialids() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.specialids_;
}

// string calloutAssetId = 4;
inline void EventHighlights::clear_calloutassetid() {
  _impl_.calloutassetid_.ClearToEmpty();
}
inline const std::string& EventHighlights::calloutassetid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventHighlights.calloutAssetId)
  return _internal_calloutassetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventHighlights::set_calloutassetid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.calloutassetid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventHighlights.calloutAssetId)
}
inline std::string* EventHighlights::mutable_calloutassetid() {
  std::string* _s = _internal_mutable_calloutassetid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventHighlights.calloutAssetId)
  return _s;
}
inline const std::string& EventHighlights::_internal_calloutassetid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.calloutassetid_.Get();
}
inline void EventHighlights::_internal_set_calloutassetid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.calloutassetid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventHighlights::_internal_mutable_calloutassetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.calloutassetid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventHighlights::release_calloutassetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventHighlights.calloutAssetId)
  return _impl_.calloutassetid_.Release();
}
inline void EventHighlights::set_allocated_calloutassetid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.calloutassetid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.calloutassetid_.IsDefault()) {
          _impl_.calloutassetid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventHighlights.calloutAssetId)
}

// -------------------------------------------------------------------

// EventMetadata

// bool isAutoRegister = 1;
inline void EventMetadata::clear_isautoregister() {
  _impl_.isautoregister_ = false;
}
inline bool EventMetadata::isautoregister() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.isAutoRegister)
  return _internal_isautoregister();
}
inline void EventMetadata::set_isautoregister(bool value) {
  _internal_set_isautoregister(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.isAutoRegister)
}
inline bool EventMetadata::_internal_isautoregister() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isautoregister_;
}
inline void EventMetadata::_internal_set_isautoregister(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isautoregister_ = value;
}

// bool autoReward = 2;
inline void EventMetadata::clear_autoreward() {
  _impl_.autoreward_ = false;
}
inline bool EventMetadata::autoreward() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.autoReward)
  return _internal_autoreward();
}
inline void EventMetadata::set_autoreward(bool value) {
  _internal_set_autoreward(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.autoReward)
}
inline bool EventMetadata::_internal_autoreward() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.autoreward_;
}
inline void EventMetadata::_internal_set_autoreward(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.autoreward_ = value;
}

// bool immediateReward = 3;
inline void EventMetadata::clear_immediatereward() {
  _impl_.immediatereward_ = false;
}
inline bool EventMetadata::immediatereward() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.immediateReward)
  return _internal_immediatereward();
}
inline void EventMetadata::set_immediatereward(bool value) {
  _internal_set_immediatereward(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.immediateReward)
}
inline bool EventMetadata::_internal_immediatereward() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.immediatereward_;
}
inline void EventMetadata::_internal_set_immediatereward(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.immediatereward_ = value;
}

// bool canShowcase = 4;
inline void EventMetadata::clear_canshowcase() {
  _impl_.canshowcase_ = false;
}
inline bool EventMetadata::canshowcase() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.canShowcase)
  return _internal_canshowcase();
}
inline void EventMetadata::set_canshowcase(bool value) {
  _internal_set_canshowcase(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.canShowcase)
}
inline bool EventMetadata::_internal_canshowcase() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.canshowcase_;
}
inline void EventMetadata::_internal_set_canshowcase(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.canshowcase_ = value;
}

// string iconAssetId = 5;
inline void EventMetadata::clear_iconassetid() {
  _impl_.iconassetid_.ClearToEmpty();
}
inline const std::string& EventMetadata::iconassetid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.iconAssetId)
  return _internal_iconassetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_iconassetid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iconassetid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.iconAssetId)
}
inline std::string* EventMetadata::mutable_iconassetid() {
  std::string* _s = _internal_mutable_iconassetid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.iconAssetId)
  return _s;
}
inline const std::string& EventMetadata::_internal_iconassetid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iconassetid_.Get();
}
inline void EventMetadata::_internal_set_iconassetid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iconassetid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_iconassetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.iconassetid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_iconassetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.iconAssetId)
  return _impl_.iconassetid_.Release();
}
inline void EventMetadata::set_allocated_iconassetid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.iconassetid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.iconassetid_.IsDefault()) {
          _impl_.iconassetid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.iconAssetId)
}

// string iconAssetFilename = 6;
inline void EventMetadata::clear_iconassetfilename() {
  _impl_.iconassetfilename_.ClearToEmpty();
}
inline const std::string& EventMetadata::iconassetfilename() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.iconAssetFilename)
  return _internal_iconassetfilename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_iconassetfilename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iconassetfilename_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.iconAssetFilename)
}
inline std::string* EventMetadata::mutable_iconassetfilename() {
  std::string* _s = _internal_mutable_iconassetfilename();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.iconAssetFilename)
  return _s;
}
inline const std::string& EventMetadata::_internal_iconassetfilename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iconassetfilename_.Get();
}
inline void EventMetadata::_internal_set_iconassetfilename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iconassetfilename_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_iconassetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.iconassetfilename_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_iconassetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.iconAssetFilename)
  return _impl_.iconassetfilename_.Release();
}
inline void EventMetadata::set_allocated_iconassetfilename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.iconassetfilename_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.iconassetfilename_.IsDefault()) {
          _impl_.iconassetfilename_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.iconAssetFilename)
}

// string visualAsset = 7;
inline void EventMetadata::clear_visualasset() {
  _impl_.visualasset_.ClearToEmpty();
}
inline const std::string& EventMetadata::visualasset() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.visualAsset)
  return _internal_visualasset();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_visualasset(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.visualasset_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.visualAsset)
}
inline std::string* EventMetadata::mutable_visualasset() {
  std::string* _s = _internal_mutable_visualasset();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.visualAsset)
  return _s;
}
inline const std::string& EventMetadata::_internal_visualasset() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.visualasset_.Get();
}
inline void EventMetadata::_internal_set_visualasset(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.visualasset_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_visualasset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.visualasset_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_visualasset() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.visualAsset)
  return _impl_.visualasset_.Release();
}
inline void EventMetadata::set_allocated_visualasset(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.visualasset_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.visualasset_.IsDefault()) {
          _impl_.visualasset_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.visualAsset)
}

// string visualAssetFilename = 8;
inline void EventMetadata::clear_visualassetfilename() {
  _impl_.visualassetfilename_.ClearToEmpty();
}
inline const std::string& EventMetadata::visualassetfilename() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.visualAssetFilename)
  return _internal_visualassetfilename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_visualassetfilename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.visualassetfilename_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.visualAssetFilename)
}
inline std::string* EventMetadata::mutable_visualassetfilename() {
  std::string* _s = _internal_mutable_visualassetfilename();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.visualAssetFilename)
  return _s;
}
inline const std::string& EventMetadata::_internal_visualassetfilename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.visualassetfilename_.Get();
}
inline void EventMetadata::_internal_set_visualassetfilename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.visualassetfilename_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_visualassetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.visualassetfilename_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_visualassetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.visualAssetFilename)
  return _impl_.visualassetfilename_.Release();
}
inline void EventMetadata::set_allocated_visualassetfilename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.visualassetfilename_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.visualassetfilename_.IsDefault()) {
          _impl_.visualassetfilename_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.visualAssetFilename)
}

// repeated .Digit.PrimePlatform.Models.EventScoringInfo scoringInfo = 9;
inline int EventMetadata::_internal_scoringinfo_size() const {
  return _internal_scoringinfo().size();
}
inline int EventMetadata::scoringinfo_size() const {
  return _internal_scoringinfo_size();
}
inline void EventMetadata::clear_scoringinfo() {
  _internal_mutable_scoringinfo()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventScoringInfo* EventMetadata::mutable_scoringinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.scoringInfo)
  return _internal_mutable_scoringinfo()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventScoringInfo >*
EventMetadata::mutable_scoringinfo() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventMetadata.scoringInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_scoringinfo();
}
inline const ::Digit::PrimePlatform::Models::EventScoringInfo& EventMetadata::scoringinfo(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.scoringInfo)
    return _internal_scoringinfo().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventScoringInfo* EventMetadata::add_scoringinfo() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventScoringInfo* _add = _internal_mutable_scoringinfo()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventMetadata.scoringInfo)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventScoringInfo >&
EventMetadata::scoringinfo() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventMetadata.scoringInfo)
  return _internal_scoringinfo();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventScoringInfo>&
EventMetadata::_internal_scoringinfo() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scoringinfo_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventScoringInfo>*
EventMetadata::_internal_mutable_scoringinfo() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.scoringinfo_;
}

// int64 cta = 10;
inline void EventMetadata::clear_cta() {
  _impl_.cta_ = ::int64_t{0};
}
inline ::int64_t EventMetadata::cta() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.cta)
  return _internal_cta();
}
inline void EventMetadata::set_cta(::int64_t value) {
  _internal_set_cta(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.cta)
}
inline ::int64_t EventMetadata::_internal_cta() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cta_;
}
inline void EventMetadata::_internal_set_cta(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cta_ = value;
}

// int64 priority = 11;
inline void EventMetadata::clear_priority() {
  _impl_.priority_ = ::int64_t{0};
}
inline ::int64_t EventMetadata::priority() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.priority)
  return _internal_priority();
}
inline void EventMetadata::set_priority(::int64_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.priority)
}
inline ::int64_t EventMetadata::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void EventMetadata::_internal_set_priority(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// repeated .Digit.PrimePlatform.Models.EventHighlights highlights = 12;
inline int EventMetadata::_internal_highlights_size() const {
  return _internal_highlights().size();
}
inline int EventMetadata::highlights_size() const {
  return _internal_highlights_size();
}
inline void EventMetadata::clear_highlights() {
  _internal_mutable_highlights()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventHighlights* EventMetadata::mutable_highlights(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.highlights)
  return _internal_mutable_highlights()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventHighlights >*
EventMetadata::mutable_highlights() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventMetadata.highlights)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_highlights();
}
inline const ::Digit::PrimePlatform::Models::EventHighlights& EventMetadata::highlights(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.highlights)
    return _internal_highlights().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventHighlights* EventMetadata::add_highlights() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventHighlights* _add = _internal_mutable_highlights()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventMetadata.highlights)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventHighlights >&
EventMetadata::highlights() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventMetadata.highlights)
  return _internal_highlights();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventHighlights>&
EventMetadata::_internal_highlights() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.highlights_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventHighlights>*
EventMetadata::_internal_mutable_highlights() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.highlights_;
}

// .Digit.PrimePlatform.Content.Bucket bucket = 13;
inline bool EventMetadata::has_bucket() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.bucket_ != nullptr);
  return value;
}
inline const ::Digit::PrimePlatform::Content::Bucket& EventMetadata::_internal_bucket() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::Bucket* p = _impl_.bucket_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::Bucket&>(::Digit::PrimePlatform::Content::_Bucket_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::Bucket& EventMetadata::bucket() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.bucket)
  return _internal_bucket();
}
inline void EventMetadata::unsafe_arena_set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bucket_);
  }
  _impl_.bucket_ = reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventMetadata.bucket)
}
inline ::Digit::PrimePlatform::Content::Bucket* EventMetadata::release_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::Bucket* released = _impl_.bucket_;
  _impl_.bucket_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::Bucket* EventMetadata::unsafe_arena_release_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.bucket)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Content::Bucket* temp = _impl_.bucket_;
  _impl_.bucket_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::Bucket* EventMetadata::_internal_mutable_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.bucket_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::Bucket>(GetArenaForAllocation());
    _impl_.bucket_ = reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(p);
  }
  return _impl_.bucket_;
}
inline ::Digit::PrimePlatform::Content::Bucket* EventMetadata::mutable_bucket() {
  ::Digit::PrimePlatform::Content::Bucket* _msg = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.bucket)
  return _msg;
}
inline void EventMetadata::set_allocated_bucket(::Digit::PrimePlatform::Content::Bucket* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.bucket_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.bucket_ = reinterpret_cast<::Digit::PrimePlatform::Content::Bucket*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.bucket)
}

// string unlockItemId = 14;
inline void EventMetadata::clear_unlockitemid() {
  _impl_.unlockitemid_.ClearToEmpty();
}
inline const std::string& EventMetadata::unlockitemid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.unlockItemId)
  return _internal_unlockitemid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_unlockitemid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.unlockitemid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.unlockItemId)
}
inline std::string* EventMetadata::mutable_unlockitemid() {
  std::string* _s = _internal_mutable_unlockitemid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.unlockItemId)
  return _s;
}
inline const std::string& EventMetadata::_internal_unlockitemid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.unlockitemid_.Get();
}
inline void EventMetadata::_internal_set_unlockitemid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.unlockitemid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_unlockitemid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.unlockitemid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_unlockitemid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.unlockItemId)
  return _impl_.unlockitemid_.Release();
}
inline void EventMetadata::set_allocated_unlockitemid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.unlockitemid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.unlockitemid_.IsDefault()) {
          _impl_.unlockitemid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.unlockItemId)
}

// bool isUniqueWinner = 15;
inline void EventMetadata::clear_isuniquewinner() {
  _impl_.isuniquewinner_ = false;
}
inline bool EventMetadata::isuniquewinner() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.isUniqueWinner)
  return _internal_isuniquewinner();
}
inline void EventMetadata::set_isuniquewinner(bool value) {
  _internal_set_isuniquewinner(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.isUniqueWinner)
}
inline bool EventMetadata::_internal_isuniquewinner() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isuniquewinner_;
}
inline void EventMetadata::_internal_set_isuniquewinner(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isuniquewinner_ = value;
}

// bool isCrossServer = 16;
inline void EventMetadata::clear_iscrossserver() {
  _impl_.iscrossserver_ = false;
}
inline bool EventMetadata::iscrossserver() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.isCrossServer)
  return _internal_iscrossserver();
}
inline void EventMetadata::set_iscrossserver(bool value) {
  _internal_set_iscrossserver(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.isCrossServer)
}
inline bool EventMetadata::_internal_iscrossserver() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.iscrossserver_;
}
inline void EventMetadata::_internal_set_iscrossserver(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.iscrossserver_ = value;
}

// .Digit.PrimePlatform.Content.Resource serverTransferCost = 17;
inline bool EventMetadata::has_servertransfercost() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.servertransfercost_ != nullptr);
  return value;
}
inline const ::Digit::PrimePlatform::Content::Resource& EventMetadata::_internal_servertransfercost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Content::Resource* p = _impl_.servertransfercost_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Content::Resource&>(::Digit::PrimePlatform::Content::_Resource_default_instance_);
}
inline const ::Digit::PrimePlatform::Content::Resource& EventMetadata::servertransfercost() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.serverTransferCost)
  return _internal_servertransfercost();
}
inline void EventMetadata::unsafe_arena_set_allocated_servertransfercost(::Digit::PrimePlatform::Content::Resource* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.servertransfercost_);
  }
  _impl_.servertransfercost_ = reinterpret_cast<::Digit::PrimePlatform::Content::Resource*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventMetadata.serverTransferCost)
}
inline ::Digit::PrimePlatform::Content::Resource* EventMetadata::release_servertransfercost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Content::Resource* released = _impl_.servertransfercost_;
  _impl_.servertransfercost_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Content::Resource* EventMetadata::unsafe_arena_release_servertransfercost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.serverTransferCost)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Content::Resource* temp = _impl_.servertransfercost_;
  _impl_.servertransfercost_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Content::Resource* EventMetadata::_internal_mutable_servertransfercost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.servertransfercost_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Content::Resource>(GetArenaForAllocation());
    _impl_.servertransfercost_ = reinterpret_cast<::Digit::PrimePlatform::Content::Resource*>(p);
  }
  return _impl_.servertransfercost_;
}
inline ::Digit::PrimePlatform::Content::Resource* EventMetadata::mutable_servertransfercost() {
  ::Digit::PrimePlatform::Content::Resource* _msg = _internal_mutable_servertransfercost();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.serverTransferCost)
  return _msg;
}
inline void EventMetadata::set_allocated_servertransfercost(::Digit::PrimePlatform::Content::Resource* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.servertransfercost_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.servertransfercost_ = reinterpret_cast<::Digit::PrimePlatform::Content::Resource*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.serverTransferCost)
}

// repeated .Digit.PrimePlatform.Models.RepeatedInt32 groupInstances = 18;
inline int EventMetadata::_internal_groupinstances_size() const {
  return _internal_groupinstances().size();
}
inline int EventMetadata::groupinstances_size() const {
  return _internal_groupinstances_size();
}
inline void EventMetadata::clear_groupinstances() {
  _internal_mutable_groupinstances()->Clear();
}
inline ::Digit::PrimePlatform::Models::RepeatedInt32* EventMetadata::mutable_groupinstances(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.groupInstances)
  return _internal_mutable_groupinstances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::RepeatedInt32 >*
EventMetadata::mutable_groupinstances() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventMetadata.groupInstances)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_groupinstances();
}
inline const ::Digit::PrimePlatform::Models::RepeatedInt32& EventMetadata::groupinstances(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.groupInstances)
    return _internal_groupinstances().Get(index);
}
inline ::Digit::PrimePlatform::Models::RepeatedInt32* EventMetadata::add_groupinstances() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::RepeatedInt32* _add = _internal_mutable_groupinstances()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventMetadata.groupInstances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::RepeatedInt32 >&
EventMetadata::groupinstances() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventMetadata.groupInstances)
  return _internal_groupinstances();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::RepeatedInt32>&
EventMetadata::_internal_groupinstances() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.groupinstances_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::RepeatedInt32>*
EventMetadata::_internal_mutable_groupinstances() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.groupinstances_;
}

// bool respectPriority = 19;
inline void EventMetadata::clear_respectpriority() {
  _impl_.respectpriority_ = false;
}
inline bool EventMetadata::respectpriority() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.respectPriority)
  return _internal_respectpriority();
}
inline void EventMetadata::set_respectpriority(bool value) {
  _internal_set_respectpriority(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.respectPriority)
}
inline bool EventMetadata::_internal_respectpriority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.respectpriority_;
}
inline void EventMetadata::_internal_set_respectpriority(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.respectpriority_ = value;
}

// string visualVideoId = 20;
inline void EventMetadata::clear_visualvideoid() {
  _impl_.visualvideoid_.ClearToEmpty();
}
inline const std::string& EventMetadata::visualvideoid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.visualVideoId)
  return _internal_visualvideoid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_visualvideoid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.visualvideoid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.visualVideoId)
}
inline std::string* EventMetadata::mutable_visualvideoid() {
  std::string* _s = _internal_mutable_visualvideoid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.visualVideoId)
  return _s;
}
inline const std::string& EventMetadata::_internal_visualvideoid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.visualvideoid_.Get();
}
inline void EventMetadata::_internal_set_visualvideoid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.visualvideoid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_visualvideoid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.visualvideoid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_visualvideoid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.visualVideoId)
  return _impl_.visualvideoid_.Release();
}
inline void EventMetadata::set_allocated_visualvideoid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.visualvideoid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.visualvideoid_.IsDefault()) {
          _impl_.visualvideoid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.visualVideoId)
}

// .Digit.PrimePlatform.Models.EventVideoAssets visualVideoAssets = 21;
inline bool EventMetadata::has_visualvideoassets() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.visualvideoassets_ != nullptr);
  return value;
}
inline void EventMetadata::clear_visualvideoassets() {
  if (_impl_.visualvideoassets_ != nullptr) _impl_.visualvideoassets_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Digit::PrimePlatform::Models::EventVideoAssets& EventMetadata::_internal_visualvideoassets() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventVideoAssets* p = _impl_.visualvideoassets_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventVideoAssets&>(::Digit::PrimePlatform::Models::_EventVideoAssets_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventVideoAssets& EventMetadata::visualvideoassets() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.visualVideoAssets)
  return _internal_visualvideoassets();
}
inline void EventMetadata::unsafe_arena_set_allocated_visualvideoassets(::Digit::PrimePlatform::Models::EventVideoAssets* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.visualvideoassets_);
  }
  _impl_.visualvideoassets_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventVideoAssets*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventMetadata.visualVideoAssets)
}
inline ::Digit::PrimePlatform::Models::EventVideoAssets* EventMetadata::release_visualvideoassets() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::EventVideoAssets* released = _impl_.visualvideoassets_;
  _impl_.visualvideoassets_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventVideoAssets* EventMetadata::unsafe_arena_release_visualvideoassets() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.visualVideoAssets)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::EventVideoAssets* temp = _impl_.visualvideoassets_;
  _impl_.visualvideoassets_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventVideoAssets* EventMetadata::_internal_mutable_visualvideoassets() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.visualvideoassets_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventVideoAssets>(GetArenaForAllocation());
    _impl_.visualvideoassets_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventVideoAssets*>(p);
  }
  return _impl_.visualvideoassets_;
}
inline ::Digit::PrimePlatform::Models::EventVideoAssets* EventMetadata::mutable_visualvideoassets() {
  ::Digit::PrimePlatform::Models::EventVideoAssets* _msg = _internal_mutable_visualvideoassets();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.visualVideoAssets)
  return _msg;
}
inline void EventMetadata::set_allocated_visualvideoassets(::Digit::PrimePlatform::Models::EventVideoAssets* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventVideoAssets*>(_impl_.visualvideoassets_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventVideoAssets*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.visualvideoassets_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventVideoAssets*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.visualVideoAssets)
}

// string battlePassLink = 22;
inline void EventMetadata::clear_battlepasslink() {
  _impl_.battlepasslink_.ClearToEmpty();
}
inline const std::string& EventMetadata::battlepasslink() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.battlePassLink)
  return _internal_battlepasslink();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_battlepasslink(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.battlepasslink_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.battlePassLink)
}
inline std::string* EventMetadata::mutable_battlepasslink() {
  std::string* _s = _internal_mutable_battlepasslink();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.battlePassLink)
  return _s;
}
inline const std::string& EventMetadata::_internal_battlepasslink() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battlepasslink_.Get();
}
inline void EventMetadata::_internal_set_battlepasslink(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.battlepasslink_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_battlepasslink() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.battlepasslink_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_battlepasslink() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.battlePassLink)
  return _impl_.battlepasslink_.Release();
}
inline void EventMetadata::set_allocated_battlepasslink(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battlepasslink_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.battlepasslink_.IsDefault()) {
          _impl_.battlepasslink_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.battlePassLink)
}

// string battlePassResourceId = 23;
inline void EventMetadata::clear_battlepassresourceid() {
  _impl_.battlepassresourceid_.ClearToEmpty();
}
inline const std::string& EventMetadata::battlepassresourceid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.battlePassResourceId)
  return _internal_battlepassresourceid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventMetadata::set_battlepassresourceid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.battlepassresourceid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.battlePassResourceId)
}
inline std::string* EventMetadata::mutable_battlepassresourceid() {
  std::string* _s = _internal_mutable_battlepassresourceid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventMetadata.battlePassResourceId)
  return _s;
}
inline const std::string& EventMetadata::_internal_battlepassresourceid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.battlepassresourceid_.Get();
}
inline void EventMetadata::_internal_set_battlepassresourceid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.battlepassresourceid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventMetadata::_internal_mutable_battlepassresourceid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.battlepassresourceid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventMetadata::release_battlepassresourceid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventMetadata.battlePassResourceId)
  return _impl_.battlepassresourceid_.Release();
}
inline void EventMetadata::set_allocated_battlepassresourceid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.battlepassresourceid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.battlepassresourceid_.IsDefault()) {
          _impl_.battlepassresourceid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventMetadata.battlePassResourceId)
}

// .Digit.PrimePlatform.Models.BattlePassType battlePassType = 24;
inline void EventMetadata::clear_battlepasstype() {
  _impl_.battlepasstype_ = 0;
}
inline ::Digit::PrimePlatform::Models::BattlePassType EventMetadata::battlepasstype() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.battlePassType)
  return _internal_battlepasstype();
}
inline void EventMetadata::set_battlepasstype(::Digit::PrimePlatform::Models::BattlePassType value) {
  _internal_set_battlepasstype(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.battlePassType)
}
inline ::Digit::PrimePlatform::Models::BattlePassType EventMetadata::_internal_battlepasstype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::PrimePlatform::Models::BattlePassType>(_impl_.battlepasstype_);
}
inline void EventMetadata::_internal_set_battlepasstype(::Digit::PrimePlatform::Models::BattlePassType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.battlepasstype_ = value;
}

// bool minigameLock = 25;
inline void EventMetadata::clear_minigamelock() {
  _impl_.minigamelock_ = false;
}
inline bool EventMetadata::minigamelock() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.minigameLock)
  return _internal_minigamelock();
}
inline void EventMetadata::set_minigamelock(bool value) {
  _internal_set_minigamelock(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.minigameLock)
}
inline bool EventMetadata::_internal_minigamelock() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minigamelock_;
}
inline void EventMetadata::_internal_set_minigamelock(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minigamelock_ = value;
}

// uint32 minigameLevelMin = 26;
inline void EventMetadata::clear_minigamelevelmin() {
  _impl_.minigamelevelmin_ = 0u;
}
inline ::uint32_t EventMetadata::minigamelevelmin() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.minigameLevelMin)
  return _internal_minigamelevelmin();
}
inline void EventMetadata::set_minigamelevelmin(::uint32_t value) {
  _internal_set_minigamelevelmin(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.minigameLevelMin)
}
inline ::uint32_t EventMetadata::_internal_minigamelevelmin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minigamelevelmin_;
}
inline void EventMetadata::_internal_set_minigamelevelmin(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minigamelevelmin_ = value;
}

// uint32 minigameLevelMax = 27;
inline void EventMetadata::clear_minigamelevelmax() {
  _impl_.minigamelevelmax_ = 0u;
}
inline ::uint32_t EventMetadata::minigamelevelmax() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventMetadata.minigameLevelMax)
  return _internal_minigamelevelmax();
}
inline void EventMetadata::set_minigamelevelmax(::uint32_t value) {
  _internal_set_minigamelevelmax(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventMetadata.minigameLevelMax)
}
inline ::uint32_t EventMetadata::_internal_minigamelevelmax() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.minigamelevelmax_;
}
inline void EventMetadata::_internal_set_minigamelevelmax(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.minigamelevelmax_ = value;
}

// -------------------------------------------------------------------

// EventModel

// .Digit.PrimePlatform.Models.EventRank ranks = 12;
inline bool EventModel::has_ranks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ranks_ != nullptr);
  return value;
}
inline void EventModel::clear_ranks() {
  if (_impl_.ranks_ != nullptr) _impl_.ranks_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::Digit::PrimePlatform::Models::EventRank& EventModel::_internal_ranks() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventRank* p = _impl_.ranks_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventRank&>(::Digit::PrimePlatform::Models::_EventRank_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventRank& EventModel::ranks() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.ranks)
  return _internal_ranks();
}
inline void EventModel::unsafe_arena_set_allocated_ranks(::Digit::PrimePlatform::Models::EventRank* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ranks_);
  }
  _impl_.ranks_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventModel.ranks)
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::release_ranks() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Digit::PrimePlatform::Models::EventRank* released = _impl_.ranks_;
  _impl_.ranks_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::unsafe_arena_release_ranks() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.ranks)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::Digit::PrimePlatform::Models::EventRank* temp = _impl_.ranks_;
  _impl_.ranks_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::_internal_mutable_ranks() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.ranks_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventRank>(GetArenaForAllocation());
    _impl_.ranks_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(p);
  }
  return _impl_.ranks_;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::mutable_ranks() {
  ::Digit::PrimePlatform::Models::EventRank* _msg = _internal_mutable_ranks();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.ranks)
  return _msg;
}
inline void EventModel::set_allocated_ranks(::Digit::PrimePlatform::Models::EventRank* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(_impl_.ranks_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.ranks_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.ranks)
}

// string configId = 1;
inline void EventModel::clear_configid() {
  _impl_.configid_.ClearToEmpty();
}
inline const std::string& EventModel::configid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.configId)
  return _internal_configid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventModel::set_configid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventModel.configId)
}
inline std::string* EventModel::mutable_configid() {
  std::string* _s = _internal_mutable_configid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.configId)
  return _s;
}
inline const std::string& EventModel::_internal_configid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configid_.Get();
}
inline void EventModel::_internal_set_configid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventModel::_internal_mutable_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.configid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventModel::release_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.configId)
  return _impl_.configid_.Release();
}
inline void EventModel::set_allocated_configid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.configid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.configid_.IsDefault()) {
          _impl_.configid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.configId)
}

// string source = 2;
inline void EventModel::clear_source() {
  _impl_.source_.ClearToEmpty();
}
inline const std::string& EventModel::source() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventModel::set_source(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventModel.source)
}
inline std::string* EventModel::mutable_source() {
  std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.source)
  return _s;
}
inline const std::string& EventModel::_internal_source() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.source_.Get();
}
inline void EventModel::_internal_set_source(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.source_.Set(value, GetArenaForAllocation());
}
inline std::string* EventModel::_internal_mutable_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.source_.Mutable( GetArenaForAllocation());
}
inline std::string* EventModel::release_source() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.source)
  return _impl_.source_.Release();
}
inline void EventModel::set_allocated_source(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.source_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_.IsDefault()) {
          _impl_.source_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.source)
}

// string eventType = 3;
inline void EventModel::clear_eventtype() {
  _impl_.eventtype_.ClearToEmpty();
}
inline const std::string& EventModel::eventtype() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.eventType)
  return _internal_eventtype();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventModel::set_eventtype(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.eventtype_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventModel.eventType)
}
inline std::string* EventModel::mutable_eventtype() {
  std::string* _s = _internal_mutable_eventtype();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.eventType)
  return _s;
}
inline const std::string& EventModel::_internal_eventtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.eventtype_.Get();
}
inline void EventModel::_internal_set_eventtype(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.eventtype_.Set(value, GetArenaForAllocation());
}
inline std::string* EventModel::_internal_mutable_eventtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.eventtype_.Mutable( GetArenaForAllocation());
}
inline std::string* EventModel::release_eventtype() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.eventType)
  return _impl_.eventtype_.Release();
}
inline void EventModel::set_allocated_eventtype(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.eventtype_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.eventtype_.IsDefault()) {
          _impl_.eventtype_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.eventType)
}

// .Digit.PrimePlatform.Models.EventCategories category = 4;
inline void EventModel::clear_category() {
  _impl_.category_ = 0;
}
inline ::Digit::PrimePlatform::Models::EventCategories EventModel::category() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.category)
  return _internal_category();
}
inline void EventModel::set_category(::Digit::PrimePlatform::Models::EventCategories value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventModel.category)
}
inline ::Digit::PrimePlatform::Models::EventCategories EventModel::_internal_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::PrimePlatform::Models::EventCategories>(_impl_.category_);
}
inline void EventModel::_internal_set_category(::Digit::PrimePlatform::Models::EventCategories value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_ = value;
}

// .Digit.PrimePlatform.Models.PlacementType placementType = 5;
inline void EventModel::clear_placementtype() {
  _impl_.placementtype_ = 0;
}
inline ::Digit::PrimePlatform::Models::PlacementType EventModel::placementtype() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.placementType)
  return _internal_placementtype();
}
inline void EventModel::set_placementtype(::Digit::PrimePlatform::Models::PlacementType value) {
  _internal_set_placementtype(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventModel.placementType)
}
inline ::Digit::PrimePlatform::Models::PlacementType EventModel::_internal_placementtype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::PrimePlatform::Models::PlacementType>(_impl_.placementtype_);
}
inline void EventModel::_internal_set_placementtype(::Digit::PrimePlatform::Models::PlacementType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.placementtype_ = value;
}

// .Digit.PrimePlatform.Models.EventSchedule schedule = 6;
inline bool EventModel::has_schedule() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.schedule_ != nullptr);
  return value;
}
inline void EventModel::clear_schedule() {
  if (_impl_.schedule_ != nullptr) _impl_.schedule_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Models::EventSchedule& EventModel::_internal_schedule() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventSchedule* p = _impl_.schedule_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventSchedule&>(::Digit::PrimePlatform::Models::_EventSchedule_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventSchedule& EventModel::schedule() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.schedule)
  return _internal_schedule();
}
inline void EventModel::unsafe_arena_set_allocated_schedule(::Digit::PrimePlatform::Models::EventSchedule* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.schedule_);
  }
  _impl_.schedule_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventSchedule*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventModel.schedule)
}
inline ::Digit::PrimePlatform::Models::EventSchedule* EventModel::release_schedule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::EventSchedule* released = _impl_.schedule_;
  _impl_.schedule_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventSchedule* EventModel::unsafe_arena_release_schedule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.schedule)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::EventSchedule* temp = _impl_.schedule_;
  _impl_.schedule_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventSchedule* EventModel::_internal_mutable_schedule() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.schedule_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventSchedule>(GetArenaForAllocation());
    _impl_.schedule_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventSchedule*>(p);
  }
  return _impl_.schedule_;
}
inline ::Digit::PrimePlatform::Models::EventSchedule* EventModel::mutable_schedule() {
  ::Digit::PrimePlatform::Models::EventSchedule* _msg = _internal_mutable_schedule();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.schedule)
  return _msg;
}
inline void EventModel::set_allocated_schedule(::Digit::PrimePlatform::Models::EventSchedule* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventSchedule*>(_impl_.schedule_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventSchedule*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.schedule_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventSchedule*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.schedule)
}

// .Digit.PrimePlatform.Models.EventMetadata metaData = 7;
inline bool EventModel::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void EventModel::clear_metadata() {
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Digit::PrimePlatform::Models::EventMetadata& EventModel::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventMetadata&>(::Digit::PrimePlatform::Models::_EventMetadata_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventMetadata& EventModel::metadata() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.metaData)
  return _internal_metadata();
}
inline void EventModel::unsafe_arena_set_allocated_metadata(::Digit::PrimePlatform::Models::EventMetadata* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventModel.metaData)
}
inline ::Digit::PrimePlatform::Models::EventMetadata* EventModel::release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::EventMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventMetadata* EventModel::unsafe_arena_release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.metaData)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::EventMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventMetadata* EventModel::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventMetadata>(GetArenaForAllocation());
    _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::Digit::PrimePlatform::Models::EventMetadata* EventModel::mutable_metadata() {
  ::Digit::PrimePlatform::Models::EventMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.metaData)
  return _msg;
}
inline void EventModel::set_allocated_metadata(::Digit::PrimePlatform::Models::EventMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventMetadata*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventMetadata*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.metaData)
}

// string groupName = 8;
inline void EventModel::clear_groupname() {
  _impl_.groupname_.ClearToEmpty();
}
inline const std::string& EventModel::groupname() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.groupName)
  return _internal_groupname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventModel::set_groupname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.groupname_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventModel.groupName)
}
inline std::string* EventModel::mutable_groupname() {
  std::string* _s = _internal_mutable_groupname();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.groupName)
  return _s;
}
inline const std::string& EventModel::_internal_groupname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.groupname_.Get();
}
inline void EventModel::_internal_set_groupname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.groupname_.Set(value, GetArenaForAllocation());
}
inline std::string* EventModel::_internal_mutable_groupname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.groupname_.Mutable( GetArenaForAllocation());
}
inline std::string* EventModel::release_groupname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.groupName)
  return _impl_.groupname_.Release();
}
inline void EventModel::set_allocated_groupname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.groupname_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.groupname_.IsDefault()) {
          _impl_.groupname_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.groupName)
}

// repeated .Digit.PrimePlatform.Models.EventSegment segments = 9;
inline int EventModel::_internal_segments_size() const {
  return _internal_segments().size();
}
inline int EventModel::segments_size() const {
  return _internal_segments_size();
}
inline void EventModel::clear_segments() {
  _internal_mutable_segments()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventSegment* EventModel::mutable_segments(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.segments)
  return _internal_mutable_segments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventSegment >*
EventModel::mutable_segments() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventModel.segments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_segments();
}
inline const ::Digit::PrimePlatform::Models::EventSegment& EventModel::segments(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.segments)
    return _internal_segments().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventSegment* EventModel::add_segments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventSegment* _add = _internal_mutable_segments()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventModel.segments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventSegment >&
EventModel::segments() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventModel.segments)
  return _internal_segments();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventSegment>&
EventModel::_internal_segments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.segments_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventSegment>*
EventModel::_internal_mutable_segments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.segments_;
}

// .Digit.PrimePlatform.Models.EventRank ranking = 10;
inline bool EventModel::has_ranking() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ranking_ != nullptr);
  return value;
}
inline void EventModel::clear_ranking() {
  if (_impl_.ranking_ != nullptr) _impl_.ranking_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Digit::PrimePlatform::Models::EventRank& EventModel::_internal_ranking() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventRank* p = _impl_.ranking_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventRank&>(::Digit::PrimePlatform::Models::_EventRank_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventRank& EventModel::ranking() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.ranking)
  return _internal_ranking();
}
inline void EventModel::unsafe_arena_set_allocated_ranking(::Digit::PrimePlatform::Models::EventRank* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ranking_);
  }
  _impl_.ranking_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventModel.ranking)
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::release_ranking() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::EventRank* released = _impl_.ranking_;
  _impl_.ranking_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::unsafe_arena_release_ranking() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.ranking)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::EventRank* temp = _impl_.ranking_;
  _impl_.ranking_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::_internal_mutable_ranking() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.ranking_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventRank>(GetArenaForAllocation());
    _impl_.ranking_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(p);
  }
  return _impl_.ranking_;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventModel::mutable_ranking() {
  ::Digit::PrimePlatform::Models::EventRank* _msg = _internal_mutable_ranking();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.ranking)
  return _msg;
}
inline void EventModel::set_allocated_ranking(::Digit::PrimePlatform::Models::EventRank* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(_impl_.ranking_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.ranking_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.ranking)
}

// .Digit.PrimePlatform.Models.EventEntryData entryData = 11;
inline bool EventModel::has_entrydata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entrydata_ != nullptr);
  return value;
}
inline void EventModel::clear_entrydata() {
  if (_impl_.entrydata_ != nullptr) _impl_.entrydata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::Digit::PrimePlatform::Models::EventEntryData& EventModel::_internal_entrydata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventEntryData* p = _impl_.entrydata_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventEntryData&>(::Digit::PrimePlatform::Models::_EventEntryData_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventEntryData& EventModel::entrydata() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.entryData)
  return _internal_entrydata();
}
inline void EventModel::unsafe_arena_set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entrydata_);
  }
  _impl_.entrydata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventModel.entryData)
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventModel::release_entrydata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Digit::PrimePlatform::Models::EventEntryData* released = _impl_.entrydata_;
  _impl_.entrydata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventModel::unsafe_arena_release_entrydata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.entryData)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::Digit::PrimePlatform::Models::EventEntryData* temp = _impl_.entrydata_;
  _impl_.entrydata_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventModel::_internal_mutable_entrydata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.entrydata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventEntryData>(GetArenaForAllocation());
    _impl_.entrydata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(p);
  }
  return _impl_.entrydata_;
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventModel::mutable_entrydata() {
  ::Digit::PrimePlatform::Models::EventEntryData* _msg = _internal_mutable_entrydata();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.entryData)
  return _msg;
}
inline void EventModel::set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(_impl_.entrydata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.entrydata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.entryData)
}

// repeated .Digit.PrimePlatform.Content.Resource joinCost = 13;
inline int EventModel::_internal_joincost_size() const {
  return _internal_joincost().size();
}
inline int EventModel::joincost_size() const {
  return _internal_joincost_size();
}
inline ::Digit::PrimePlatform::Content::Resource* EventModel::mutable_joincost(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.joinCost)
  return _internal_mutable_joincost()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >*
EventModel::mutable_joincost() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventModel.joinCost)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_joincost();
}
inline const ::Digit::PrimePlatform::Content::Resource& EventModel::joincost(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.joinCost)
    return _internal_joincost().Get(index);
}
inline ::Digit::PrimePlatform::Content::Resource* EventModel::add_joincost() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Content::Resource* _add = _internal_mutable_joincost()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventModel.joinCost)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Content::Resource >&
EventModel::joincost() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventModel.joinCost)
  return _internal_joincost();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>&
EventModel::_internal_joincost() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.joincost_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Content::Resource>*
EventModel::_internal_mutable_joincost() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.joincost_;
}

// string categoryGroupId = 14;
inline void EventModel::clear_categorygroupid() {
  _impl_.categorygroupid_.ClearToEmpty();
}
inline const std::string& EventModel::categorygroupid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventModel.categoryGroupId)
  return _internal_categorygroupid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventModel::set_categorygroupid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.categorygroupid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventModel.categoryGroupId)
}
inline std::string* EventModel::mutable_categorygroupid() {
  std::string* _s = _internal_mutable_categorygroupid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventModel.categoryGroupId)
  return _s;
}
inline const std::string& EventModel::_internal_categorygroupid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.categorygroupid_.Get();
}
inline void EventModel::_internal_set_categorygroupid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.categorygroupid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventModel::_internal_mutable_categorygroupid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.categorygroupid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventModel::release_categorygroupid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventModel.categoryGroupId)
  return _impl_.categorygroupid_.Release();
}
inline void EventModel::set_allocated_categorygroupid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.categorygroupid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.categorygroupid_.IsDefault()) {
          _impl_.categorygroupid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventModel.categoryGroupId)
}

// -------------------------------------------------------------------

// EventRank

// string id = 1;
inline void EventRank::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& EventRank::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRank.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventRank::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRank.id)
}
inline std::string* EventRank::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventRank.id)
  return _s;
}
inline const std::string& EventRank::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void EventRank::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* EventRank::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* EventRank::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventRank.id)
  return _impl_.id_.Release();
}
inline void EventRank::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventRank.id)
}

// int32 position = 2;
inline void EventRank::clear_position() {
  _impl_.position_ = 0;
}
inline ::int32_t EventRank::position() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRank.position)
  return _internal_position();
}
inline void EventRank::set_position(::int32_t value) {
  _internal_set_position(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRank.position)
}
inline ::int32_t EventRank::_internal_position() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_;
}
inline void EventRank::_internal_set_position(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.position_ = value;
}

// int32 rank = 3;
inline void EventRank::clear_rank() {
  _impl_.rank_ = 0;
}
inline ::int32_t EventRank::rank() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRank.rank)
  return _internal_rank();
}
inline void EventRank::set_rank(::int32_t value) {
  _internal_set_rank(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRank.rank)
}
inline ::int32_t EventRank::_internal_rank() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rank_;
}
inline void EventRank::_internal_set_rank(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rank_ = value;
}

// float score = 4;
inline void EventRank::clear_score() {
  _impl_.score_ = 0;
}
inline float EventRank::score() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRank.score)
  return _internal_score();
}
inline void EventRank::set_score(float value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRank.score)
}
inline float EventRank::_internal_score() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.score_;
}
inline void EventRank::_internal_set_score(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.score_ = value;
}

// int32 delta = 5;
inline void EventRank::clear_delta() {
  _impl_.delta_ = 0;
}
inline ::int32_t EventRank::delta() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRank.delta)
  return _internal_delta();
}
inline void EventRank::set_delta(::int32_t value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRank.delta)
}
inline ::int32_t EventRank::_internal_delta() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.delta_;
}
inline void EventRank::_internal_set_delta(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.delta_ = value;
}

// int32 instanceId = 6;
inline void EventRank::clear_instanceid() {
  _impl_.instanceid_ = 0;
}
inline ::int32_t EventRank::instanceid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRank.instanceId)
  return _internal_instanceid();
}
inline void EventRank::set_instanceid(::int32_t value) {
  _internal_set_instanceid(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRank.instanceId)
}
inline ::int32_t EventRank::_internal_instanceid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instanceid_;
}
inline void EventRank::_internal_set_instanceid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.instanceid_ = value;
}

// double scoreDouble = 7;
inline void EventRank::clear_scoredouble() {
  _impl_.scoredouble_ = 0;
}
inline double EventRank::scoredouble() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRank.scoreDouble)
  return _internal_scoredouble();
}
inline void EventRank::set_scoredouble(double value) {
  _internal_set_scoredouble(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRank.scoreDouble)
}
inline double EventRank::_internal_scoredouble() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.scoredouble_;
}
inline void EventRank::_internal_set_scoredouble(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.scoredouble_ = value;
}

// -------------------------------------------------------------------

// EventRanking

// repeated .Digit.PrimePlatform.Models.EventRank ranks = 1;
inline int EventRanking::_internal_ranks_size() const {
  return _internal_ranks().size();
}
inline int EventRanking::ranks_size() const {
  return _internal_ranks_size();
}
inline void EventRanking::clear_ranks() {
  _internal_mutable_ranks()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventRank* EventRanking::mutable_ranks(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventRanking.ranks)
  return _internal_mutable_ranks()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventRank >*
EventRanking::mutable_ranks() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventRanking.ranks)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_ranks();
}
inline const ::Digit::PrimePlatform::Models::EventRank& EventRanking::ranks(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRanking.ranks)
    return _internal_ranks().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventRank* EventRanking::add_ranks() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventRank* _add = _internal_mutable_ranks()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventRanking.ranks)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventRank >&
EventRanking::ranks() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventRanking.ranks)
  return _internal_ranks();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventRank>&
EventRanking::_internal_ranks() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ranks_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventRank>*
EventRanking::_internal_mutable_ranks() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.ranks_;
}

// string configId = 2;
inline void EventRanking::clear_configid() {
  _impl_.configid_.ClearToEmpty();
}
inline const std::string& EventRanking::configid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventRanking.configId)
  return _internal_configid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventRanking::set_configid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventRanking.configId)
}
inline std::string* EventRanking::mutable_configid() {
  std::string* _s = _internal_mutable_configid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventRanking.configId)
  return _s;
}
inline const std::string& EventRanking::_internal_configid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configid_.Get();
}
inline void EventRanking::_internal_set_configid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventRanking::_internal_mutable_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.configid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventRanking::release_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventRanking.configId)
  return _impl_.configid_.Release();
}
inline void EventRanking::set_allocated_configid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.configid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.configid_.IsDefault()) {
          _impl_.configid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventRanking.configId)
}

// -------------------------------------------------------------------

// EventReward

// repeated int64 position = 1;
inline int EventReward::_internal_position_size() const {
  return _internal_position().size();
}
inline int EventReward::position_size() const {
  return _internal_position_size();
}
inline void EventReward::clear_position() {
  _internal_mutable_position()->Clear();
}
inline ::int64_t EventReward::position(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventReward.position)
  return _internal_position().Get(index);
}
inline void EventReward::set_position(int index, ::int64_t value) {
  _internal_mutable_position()->Set(index, value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventReward.position)
}
inline void EventReward::add_position(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_position()->Add(value);
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventReward.position)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& EventReward::position() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventReward.position)
  return _internal_position();
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventReward::mutable_position() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventReward.position)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_position();
}

inline const ::google::protobuf::RepeatedField<::int64_t>& EventReward::_internal_position() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.position_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventReward::_internal_mutable_position() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.position_;
}

// int64 amount = 2;
inline void EventReward::clear_amount() {
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t EventReward::amount() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventReward.amount)
  return _internal_amount();
}
inline void EventReward::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventReward.amount)
}
inline ::int64_t EventReward::_internal_amount() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.amount_;
}
inline void EventReward::_internal_set_amount(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.amount_ = value;
}

// string type = 3;
inline void EventReward::clear_type() {
  _impl_.type_.ClearToEmpty();
}
inline const std::string& EventReward::type() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventReward.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventReward::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventReward.type)
}
inline std::string* EventReward::mutable_type() {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventReward.type)
  return _s;
}
inline const std::string& EventReward::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void EventReward::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArenaForAllocation());
}
inline std::string* EventReward::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArenaForAllocation());
}
inline std::string* EventReward::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventReward.type)
  return _impl_.type_.Release();
}
inline void EventReward::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventReward.type)
}

// string level = 4;
inline void EventReward::clear_level() {
  _impl_.level_.ClearToEmpty();
}
inline const std::string& EventReward::level() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventReward.level)
  return _internal_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventReward::set_level(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventReward.level)
}
inline std::string* EventReward::mutable_level() {
  std::string* _s = _internal_mutable_level();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventReward.level)
  return _s;
}
inline const std::string& EventReward::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.level_.Get();
}
inline void EventReward::_internal_set_level(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_.Set(value, GetArenaForAllocation());
}
inline std::string* EventReward::_internal_mutable_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.level_.Mutable( GetArenaForAllocation());
}
inline std::string* EventReward::release_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventReward.level)
  return _impl_.level_.Release();
}
inline void EventReward::set_allocated_level(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.level_.IsDefault()) {
          _impl_.level_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventReward.level)
}

// -------------------------------------------------------------------

// EventSchedule

// string term = 1;
inline void EventSchedule::clear_term() {
  _impl_.term_.ClearToEmpty();
}
inline const std::string& EventSchedule::term() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.term)
  return _internal_term();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventSchedule::set_term(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventSchedule.term)
}
inline std::string* EventSchedule::mutable_term() {
  std::string* _s = _internal_mutable_term();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSchedule.term)
  return _s;
}
inline const std::string& EventSchedule::_internal_term() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.term_.Get();
}
inline void EventSchedule::_internal_set_term(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.term_.Set(value, GetArenaForAllocation());
}
inline std::string* EventSchedule::_internal_mutable_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.term_.Mutable( GetArenaForAllocation());
}
inline std::string* EventSchedule::release_term() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSchedule.term)
  return _impl_.term_.Release();
}
inline void EventSchedule::set_allocated_term(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.term_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.term_.IsDefault()) {
          _impl_.term_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSchedule.term)
}

// int32 roundNumber = 2;
inline void EventSchedule::clear_roundnumber() {
  _impl_.roundnumber_ = 0;
}
inline ::int32_t EventSchedule::roundnumber() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.roundNumber)
  return _internal_roundnumber();
}
inline void EventSchedule::set_roundnumber(::int32_t value) {
  _internal_set_roundnumber(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventSchedule.roundNumber)
}
inline ::int32_t EventSchedule::_internal_roundnumber() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roundnumber_;
}
inline void EventSchedule::_internal_set_roundnumber(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.roundnumber_ = value;
}

// .google.protobuf.Timestamp announce = 3;
inline bool EventSchedule::has_announce() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.announce_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventSchedule::_internal_announce() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.announce_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventSchedule::announce() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.announce)
  return _internal_announce();
}
inline void EventSchedule::unsafe_arena_set_allocated_announce(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.announce_);
  }
  _impl_.announce_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventSchedule.announce)
}
inline ::google::protobuf::Timestamp* EventSchedule::release_announce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.announce_;
  _impl_.announce_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EventSchedule::unsafe_arena_release_announce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSchedule.announce)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.announce_;
  _impl_.announce_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EventSchedule::_internal_mutable_announce() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.announce_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.announce_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.announce_;
}
inline ::google::protobuf::Timestamp* EventSchedule::mutable_announce() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_announce();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSchedule.announce)
  return _msg;
}
inline void EventSchedule::set_allocated_announce(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.announce_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.announce_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSchedule.announce)
}

// .google.protobuf.Timestamp start = 4;
inline bool EventSchedule::has_start() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventSchedule::_internal_start() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.start_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventSchedule::start() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.start)
  return _internal_start();
}
inline void EventSchedule::unsafe_arena_set_allocated_start(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }
  _impl_.start_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventSchedule.start)
}
inline ::google::protobuf::Timestamp* EventSchedule::release_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.start_;
  _impl_.start_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EventSchedule::unsafe_arena_release_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSchedule.start)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.start_;
  _impl_.start_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EventSchedule::_internal_mutable_start() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.start_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.start_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_;
}
inline ::google::protobuf::Timestamp* EventSchedule::mutable_start() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSchedule.start)
  return _msg;
}
inline void EventSchedule::set_allocated_start(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.start_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSchedule.start)
}

// .google.protobuf.Timestamp display = 5;
inline bool EventSchedule::has_display() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.display_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventSchedule::_internal_display() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.display_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventSchedule::display() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.display)
  return _internal_display();
}
inline void EventSchedule::unsafe_arena_set_allocated_display(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.display_);
  }
  _impl_.display_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventSchedule.display)
}
inline ::google::protobuf::Timestamp* EventSchedule::release_display() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.display_;
  _impl_.display_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EventSchedule::unsafe_arena_release_display() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSchedule.display)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.display_;
  _impl_.display_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EventSchedule::_internal_mutable_display() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.display_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.display_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.display_;
}
inline ::google::protobuf::Timestamp* EventSchedule::mutable_display() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_display();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSchedule.display)
  return _msg;
}
inline void EventSchedule::set_allocated_display(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.display_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.display_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSchedule.display)
}

// .google.protobuf.Timestamp delay = 6;
inline bool EventSchedule::has_delay() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.delay_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventSchedule::_internal_delay() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.delay_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventSchedule::delay() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.delay)
  return _internal_delay();
}
inline void EventSchedule::unsafe_arena_set_allocated_delay(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.delay_);
  }
  _impl_.delay_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventSchedule.delay)
}
inline ::google::protobuf::Timestamp* EventSchedule::release_delay() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.delay_;
  _impl_.delay_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EventSchedule::unsafe_arena_release_delay() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSchedule.delay)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.delay_;
  _impl_.delay_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EventSchedule::_internal_mutable_delay() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.delay_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.delay_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.delay_;
}
inline ::google::protobuf::Timestamp* EventSchedule::mutable_delay() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_delay();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSchedule.delay)
  return _msg;
}
inline void EventSchedule::set_allocated_delay(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.delay_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.delay_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSchedule.delay)
}

// .google.protobuf.Timestamp end = 7;
inline bool EventSchedule::has_end() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventSchedule::_internal_end() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.end_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventSchedule::end() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.end)
  return _internal_end();
}
inline void EventSchedule::unsafe_arena_set_allocated_end(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }
  _impl_.end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventSchedule.end)
}
inline ::google::protobuf::Timestamp* EventSchedule::release_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* released = _impl_.end_;
  _impl_.end_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EventSchedule::unsafe_arena_release_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSchedule.end)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* temp = _impl_.end_;
  _impl_.end_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EventSchedule::_internal_mutable_end() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.end_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.end_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_;
}
inline ::google::protobuf::Timestamp* EventSchedule::mutable_end() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSchedule.end)
  return _msg;
}
inline void EventSchedule::set_allocated_end(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.end_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSchedule.end)
}

// .google.protobuf.Timestamp nextStart = 8;
inline bool EventSchedule::has_nextstart() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.nextstart_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventSchedule::_internal_nextstart() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.nextstart_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventSchedule::nextstart() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSchedule.nextStart)
  return _internal_nextstart();
}
inline void EventSchedule::unsafe_arena_set_allocated_nextstart(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nextstart_);
  }
  _impl_.nextstart_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventSchedule.nextStart)
}
inline ::google::protobuf::Timestamp* EventSchedule::release_nextstart() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* released = _impl_.nextstart_;
  _impl_.nextstart_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EventSchedule::unsafe_arena_release_nextstart() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSchedule.nextStart)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* temp = _impl_.nextstart_;
  _impl_.nextstart_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EventSchedule::_internal_mutable_nextstart() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.nextstart_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.nextstart_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.nextstart_;
}
inline ::google::protobuf::Timestamp* EventSchedule::mutable_nextstart() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_nextstart();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSchedule.nextStart)
  return _msg;
}
inline void EventSchedule::set_allocated_nextstart(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.nextstart_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.nextstart_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSchedule.nextStart)
}

// -------------------------------------------------------------------

// EventScoringInfo

// int32 id = 1;
inline void EventScoringInfo::clear_id() {
  _impl_.id_ = 0;
}
inline ::int32_t EventScoringInfo::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventScoringInfo.id)
  return _internal_id();
}
inline void EventScoringInfo::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventScoringInfo.id)
}
inline ::int32_t EventScoringInfo::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void EventScoringInfo::_internal_set_id(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string icon = 2;
inline void EventScoringInfo::clear_icon() {
  _impl_.icon_.ClearToEmpty();
}
inline const std::string& EventScoringInfo::icon() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventScoringInfo.icon)
  return _internal_icon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventScoringInfo::set_icon(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.icon_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventScoringInfo.icon)
}
inline std::string* EventScoringInfo::mutable_icon() {
  std::string* _s = _internal_mutable_icon();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventScoringInfo.icon)
  return _s;
}
inline const std::string& EventScoringInfo::_internal_icon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.icon_.Get();
}
inline void EventScoringInfo::_internal_set_icon(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.icon_.Set(value, GetArenaForAllocation());
}
inline std::string* EventScoringInfo::_internal_mutable_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.icon_.Mutable( GetArenaForAllocation());
}
inline std::string* EventScoringInfo::release_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventScoringInfo.icon)
  return _impl_.icon_.Release();
}
inline void EventScoringInfo::set_allocated_icon(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.icon_.IsDefault()) {
          _impl_.icon_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventScoringInfo.icon)
}

// -------------------------------------------------------------------

// Events

// repeated .Digit.PrimePlatform.Models.EventModel tournaments = 1;
inline int Events::_internal_tournaments_size() const {
  return _internal_tournaments().size();
}
inline int Events::tournaments_size() const {
  return _internal_tournaments_size();
}
inline void Events::clear_tournaments() {
  _internal_mutable_tournaments()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventModel* Events::mutable_tournaments(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Events.tournaments)
  return _internal_mutable_tournaments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventModel >*
Events::mutable_tournaments() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.Events.tournaments)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tournaments();
}
inline const ::Digit::PrimePlatform::Models::EventModel& Events::tournaments(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Events.tournaments)
    return _internal_tournaments().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventModel* Events::add_tournaments() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventModel* _add = _internal_mutable_tournaments()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.Events.tournaments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventModel >&
Events::tournaments() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.Events.tournaments)
  return _internal_tournaments();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventModel>&
Events::_internal_tournaments() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tournaments_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventModel>*
Events::_internal_mutable_tournaments() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tournaments_;
}

// repeated int32 categories = 2;
inline int Events::_internal_categories_size() const {
  return _internal_categories().size();
}
inline int Events::categories_size() const {
  return _internal_categories_size();
}
inline void Events::clear_categories() {
  _internal_mutable_categories()->Clear();
}
inline ::int32_t Events::categories(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Events.categories)
  return _internal_categories().Get(index);
}
inline void Events::set_categories(int index, ::int32_t value) {
  _internal_mutable_categories()->Set(index, value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Events.categories)
}
inline void Events::add_categories(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_categories()->Add(value);
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.Events.categories)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Events::categories() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.Events.categories)
  return _internal_categories();
}
inline ::google::protobuf::RepeatedField<::int32_t>* Events::mutable_categories() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.Events.categories)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_categories();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& Events::_internal_categories() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.categories_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* Events::_internal_mutable_categories() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.categories_;
}

// -------------------------------------------------------------------

// EventNotification

// string configId = 1;
inline void EventNotification::clear_configid() {
  _impl_.configid_.ClearToEmpty();
}
inline const std::string& EventNotification::configid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventNotification.configId)
  return _internal_configid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventNotification::set_configid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventNotification.configId)
}
inline std::string* EventNotification::mutable_configid() {
  std::string* _s = _internal_mutable_configid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventNotification.configId)
  return _s;
}
inline const std::string& EventNotification::_internal_configid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configid_.Get();
}
inline void EventNotification::_internal_set_configid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(value, GetArenaForAllocation());
}
inline std::string* EventNotification::_internal_mutable_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.configid_.Mutable( GetArenaForAllocation());
}
inline std::string* EventNotification::release_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventNotification.configId)
  return _impl_.configid_.Release();
}
inline void EventNotification::set_allocated_configid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.configid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.configid_.IsDefault()) {
          _impl_.configid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventNotification.configId)
}

// .google.protobuf.Timestamp modified = 2;
inline bool EventNotification::has_modified() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.modified_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EventNotification::_internal_modified() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.modified_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EventNotification::modified() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventNotification.modified)
  return _internal_modified();
}
inline void EventNotification::unsafe_arena_set_allocated_modified(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_);
  }
  _impl_.modified_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventNotification.modified)
}
inline ::google::protobuf::Timestamp* EventNotification::release_modified() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.modified_;
  _impl_.modified_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EventNotification::unsafe_arena_release_modified() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventNotification.modified)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.modified_;
  _impl_.modified_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EventNotification::_internal_mutable_modified() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.modified_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.modified_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.modified_;
}
inline ::google::protobuf::Timestamp* EventNotification::mutable_modified() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_modified();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventNotification.modified)
  return _msg;
}
inline void EventNotification::set_allocated_modified(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.modified_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.modified_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventNotification.modified)
}

// .Digit.PrimePlatform.Models.EventRank playerRank = 3;
inline bool EventNotification::has_playerrank() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.playerrank_ != nullptr);
  return value;
}
inline void EventNotification::clear_playerrank() {
  if (_impl_.playerrank_ != nullptr) _impl_.playerrank_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Digit::PrimePlatform::Models::EventRank& EventNotification::_internal_playerrank() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventRank* p = _impl_.playerrank_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventRank&>(::Digit::PrimePlatform::Models::_EventRank_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventRank& EventNotification::playerrank() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventNotification.playerRank)
  return _internal_playerrank();
}
inline void EventNotification::unsafe_arena_set_allocated_playerrank(::Digit::PrimePlatform::Models::EventRank* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.playerrank_);
  }
  _impl_.playerrank_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventNotification.playerRank)
}
inline ::Digit::PrimePlatform::Models::EventRank* EventNotification::release_playerrank() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::EventRank* released = _impl_.playerrank_;
  _impl_.playerrank_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventNotification::unsafe_arena_release_playerrank() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventNotification.playerRank)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::EventRank* temp = _impl_.playerrank_;
  _impl_.playerrank_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventNotification::_internal_mutable_playerrank() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.playerrank_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventRank>(GetArenaForAllocation());
    _impl_.playerrank_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(p);
  }
  return _impl_.playerrank_;
}
inline ::Digit::PrimePlatform::Models::EventRank* EventNotification::mutable_playerrank() {
  ::Digit::PrimePlatform::Models::EventRank* _msg = _internal_mutable_playerrank();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventNotification.playerRank)
  return _msg;
}
inline void EventNotification::set_allocated_playerrank(::Digit::PrimePlatform::Models::EventRank* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(_impl_.playerrank_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.playerrank_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventRank*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventNotification.playerRank)
}

// .Digit.PrimePlatform.Models.EventEntryData entryData = 4;
inline bool EventNotification::has_entrydata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entrydata_ != nullptr);
  return value;
}
inline void EventNotification::clear_entrydata() {
  if (_impl_.entrydata_ != nullptr) _impl_.entrydata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Digit::PrimePlatform::Models::EventEntryData& EventNotification::_internal_entrydata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventEntryData* p = _impl_.entrydata_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventEntryData&>(::Digit::PrimePlatform::Models::_EventEntryData_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventEntryData& EventNotification::entrydata() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventNotification.entryData)
  return _internal_entrydata();
}
inline void EventNotification::unsafe_arena_set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entrydata_);
  }
  _impl_.entrydata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventNotification.entryData)
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventNotification::release_entrydata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::EventEntryData* released = _impl_.entrydata_;
  _impl_.entrydata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventNotification::unsafe_arena_release_entrydata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventNotification.entryData)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::EventEntryData* temp = _impl_.entrydata_;
  _impl_.entrydata_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventNotification::_internal_mutable_entrydata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.entrydata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventEntryData>(GetArenaForAllocation());
    _impl_.entrydata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(p);
  }
  return _impl_.entrydata_;
}
inline ::Digit::PrimePlatform::Models::EventEntryData* EventNotification::mutable_entrydata() {
  ::Digit::PrimePlatform::Models::EventEntryData* _msg = _internal_mutable_entrydata();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventNotification.entryData)
  return _msg;
}
inline void EventNotification::set_allocated_entrydata(::Digit::PrimePlatform::Models::EventEntryData* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(_impl_.entrydata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.entrydata_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventEntryData*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventNotification.entryData)
}

// -------------------------------------------------------------------

// EventSegment

// .Digit.PrimePlatform.Models.SegmentType type = 1;
inline void EventSegment::clear_type() {
  _impl_.type_ = 0;
}
inline ::Digit::PrimePlatform::Models::SegmentType EventSegment::type() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSegment.type)
  return _internal_type();
}
inline void EventSegment::set_type(::Digit::PrimePlatform::Models::SegmentType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventSegment.type)
}
inline ::Digit::PrimePlatform::Models::SegmentType EventSegment::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::PrimePlatform::Models::SegmentType>(_impl_.type_);
}
inline void EventSegment::_internal_set_type(::Digit::PrimePlatform::Models::SegmentType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// repeated int64 values = 2;
inline int EventSegment::_internal_values_size() const {
  return _internal_values().size();
}
inline int EventSegment::values_size() const {
  return _internal_values_size();
}
inline void EventSegment::clear_values() {
  _internal_mutable_values()->Clear();
}
inline ::int64_t EventSegment::values(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSegment.values)
  return _internal_values().Get(index);
}
inline void EventSegment::set_values(int index, ::int64_t value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventSegment.values)
}
inline void EventSegment::add_values(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventSegment.values)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& EventSegment::values() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventSegment.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventSegment::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventSegment.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}

inline const ::google::protobuf::RepeatedField<::int64_t>& EventSegment::_internal_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* EventSegment::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// repeated .Digit.PrimePlatform.Models.EventReward rewards = 3;
inline int EventSegment::_internal_rewards_size() const {
  return _internal_rewards().size();
}
inline int EventSegment::rewards_size() const {
  return _internal_rewards_size();
}
inline void EventSegment::clear_rewards() {
  _internal_mutable_rewards()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventReward* EventSegment::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSegment.rewards)
  return _internal_mutable_rewards()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventReward >*
EventSegment::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.EventSegment.rewards)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rewards();
}
inline const ::Digit::PrimePlatform::Models::EventReward& EventSegment::rewards(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSegment.rewards)
    return _internal_rewards().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventReward* EventSegment::add_rewards() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventReward* _add = _internal_mutable_rewards()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.EventSegment.rewards)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventReward >&
EventSegment::rewards() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.EventSegment.rewards)
  return _internal_rewards();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventReward>&
EventSegment::_internal_rewards() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rewards_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventReward>*
EventSegment::_internal_mutable_rewards() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rewards_;
}

// .Digit.PrimePlatform.Models.EventReward uniqueWinner = 4;
inline bool EventSegment::has_uniquewinner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.uniquewinner_ != nullptr);
  return value;
}
inline void EventSegment::clear_uniquewinner() {
  if (_impl_.uniquewinner_ != nullptr) _impl_.uniquewinner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Models::EventReward& EventSegment::_internal_uniquewinner() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::EventReward* p = _impl_.uniquewinner_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::EventReward&>(::Digit::PrimePlatform::Models::_EventReward_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::EventReward& EventSegment::uniquewinner() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventSegment.uniqueWinner)
  return _internal_uniquewinner();
}
inline void EventSegment::unsafe_arena_set_allocated_uniquewinner(::Digit::PrimePlatform::Models::EventReward* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.uniquewinner_);
  }
  _impl_.uniquewinner_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventReward*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.EventSegment.uniqueWinner)
}
inline ::Digit::PrimePlatform::Models::EventReward* EventSegment::release_uniquewinner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::EventReward* released = _impl_.uniquewinner_;
  _impl_.uniquewinner_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::EventReward* EventSegment::unsafe_arena_release_uniquewinner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventSegment.uniqueWinner)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::EventReward* temp = _impl_.uniquewinner_;
  _impl_.uniquewinner_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::EventReward* EventSegment::_internal_mutable_uniquewinner() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.uniquewinner_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::EventReward>(GetArenaForAllocation());
    _impl_.uniquewinner_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventReward*>(p);
  }
  return _impl_.uniquewinner_;
}
inline ::Digit::PrimePlatform::Models::EventReward* EventSegment::mutable_uniquewinner() {
  ::Digit::PrimePlatform::Models::EventReward* _msg = _internal_mutable_uniquewinner();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventSegment.uniqueWinner)
  return _msg;
}
inline void EventSegment::set_allocated_uniquewinner(::Digit::PrimePlatform::Models::EventReward* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::EventReward*>(_impl_.uniquewinner_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::EventReward*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.uniquewinner_ = reinterpret_cast<::Digit::PrimePlatform::Models::EventReward*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventSegment.uniqueWinner)
}

// -------------------------------------------------------------------

// EventVideoAssets

// string en = 1;
inline void EventVideoAssets::clear_en() {
  _impl_.en_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::en() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.en)
  return _internal_en();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_en(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.en_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.en)
}
inline std::string* EventVideoAssets::mutable_en() {
  std::string* _s = _internal_mutable_en();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.en)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_en() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.en_.Get();
}
inline void EventVideoAssets::_internal_set_en(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.en_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_en() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.en_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_en() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.en)
  return _impl_.en_.Release();
}
inline void EventVideoAssets::set_allocated_en(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.en_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.en_.IsDefault()) {
          _impl_.en_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.en)
}

// string es = 2;
inline void EventVideoAssets::clear_es() {
  _impl_.es_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::es() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.es)
  return _internal_es();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_es(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.es_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.es)
}
inline std::string* EventVideoAssets::mutable_es() {
  std::string* _s = _internal_mutable_es();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.es)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_es() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.es_.Get();
}
inline void EventVideoAssets::_internal_set_es(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.es_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_es() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.es_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_es() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.es)
  return _impl_.es_.Release();
}
inline void EventVideoAssets::set_allocated_es(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.es_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.es_.IsDefault()) {
          _impl_.es_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.es)
}

// string fr = 3;
inline void EventVideoAssets::clear_fr() {
  _impl_.fr_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::fr() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.fr)
  return _internal_fr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_fr(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fr_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.fr)
}
inline std::string* EventVideoAssets::mutable_fr() {
  std::string* _s = _internal_mutable_fr();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.fr)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_fr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.fr_.Get();
}
inline void EventVideoAssets::_internal_set_fr(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.fr_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_fr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.fr_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_fr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.fr)
  return _impl_.fr_.Release();
}
inline void EventVideoAssets::set_allocated_fr(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.fr_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fr_.IsDefault()) {
          _impl_.fr_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.fr)
}

// string de = 4;
inline void EventVideoAssets::clear_de() {
  _impl_.de_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::de() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.de)
  return _internal_de();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_de(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.de_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.de)
}
inline std::string* EventVideoAssets::mutable_de() {
  std::string* _s = _internal_mutable_de();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.de)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_de() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.de_.Get();
}
inline void EventVideoAssets::_internal_set_de(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.de_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_de() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.de_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_de() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.de)
  return _impl_.de_.Release();
}
inline void EventVideoAssets::set_allocated_de(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.de_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.de_.IsDefault()) {
          _impl_.de_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.de)
}

// string it = 5;
inline void EventVideoAssets::clear_it() {
  _impl_.it_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::it() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.it)
  return _internal_it();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_it(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.it_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.it)
}
inline std::string* EventVideoAssets::mutable_it() {
  std::string* _s = _internal_mutable_it();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.it)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_it() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.it_.Get();
}
inline void EventVideoAssets::_internal_set_it(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.it_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_it() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.it_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_it() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.it)
  return _impl_.it_.Release();
}
inline void EventVideoAssets::set_allocated_it(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.it_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.it_.IsDefault()) {
          _impl_.it_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.it)
}

// string ja = 6;
inline void EventVideoAssets::clear_ja() {
  _impl_.ja_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::ja() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.ja)
  return _internal_ja();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_ja(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ja_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.ja)
}
inline std::string* EventVideoAssets::mutable_ja() {
  std::string* _s = _internal_mutable_ja();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.ja)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_ja() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ja_.Get();
}
inline void EventVideoAssets::_internal_set_ja(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ja_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_ja() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ja_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_ja() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.ja)
  return _impl_.ja_.Release();
}
inline void EventVideoAssets::set_allocated_ja(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ja_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ja_.IsDefault()) {
          _impl_.ja_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.ja)
}

// string pt = 7;
inline void EventVideoAssets::clear_pt() {
  _impl_.pt_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::pt() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.pt)
  return _internal_pt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_pt(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pt_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.pt)
}
inline std::string* EventVideoAssets::mutable_pt() {
  std::string* _s = _internal_mutable_pt();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.pt)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_pt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pt_.Get();
}
inline void EventVideoAssets::_internal_set_pt(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pt_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_pt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.pt_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_pt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.pt)
  return _impl_.pt_.Release();
}
inline void EventVideoAssets::set_allocated_pt(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.pt_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pt_.IsDefault()) {
          _impl_.pt_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.pt)
}

// string ru = 8;
inline void EventVideoAssets::clear_ru() {
  _impl_.ru_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::ru() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.ru)
  return _internal_ru();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_ru(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ru_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.ru)
}
inline std::string* EventVideoAssets::mutable_ru() {
  std::string* _s = _internal_mutable_ru();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.ru)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_ru() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ru_.Get();
}
inline void EventVideoAssets::_internal_set_ru(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ru_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_ru() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ru_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_ru() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.ru)
  return _impl_.ru_.Release();
}
inline void EventVideoAssets::set_allocated_ru(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ru_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ru_.IsDefault()) {
          _impl_.ru_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.ru)
}

// string cn = 9;
inline void EventVideoAssets::clear_cn() {
  _impl_.cn_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::cn() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.cn)
  return _internal_cn();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_cn(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cn_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.cn)
}
inline std::string* EventVideoAssets::mutable_cn() {
  std::string* _s = _internal_mutable_cn();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.cn)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_cn() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cn_.Get();
}
inline void EventVideoAssets::_internal_set_cn(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cn_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_cn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.cn_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_cn() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.cn)
  return _impl_.cn_.Release();
}
inline void EventVideoAssets::set_allocated_cn(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cn_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.cn_.IsDefault()) {
          _impl_.cn_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.cn)
}

// string ko = 10;
inline void EventVideoAssets::clear_ko() {
  _impl_.ko_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::ko() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.ko)
  return _internal_ko();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_ko(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ko_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.ko)
}
inline std::string* EventVideoAssets::mutable_ko() {
  std::string* _s = _internal_mutable_ko();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.ko)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_ko() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ko_.Get();
}
inline void EventVideoAssets::_internal_set_ko(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ko_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_ko() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ko_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_ko() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.ko)
  return _impl_.ko_.Release();
}
inline void EventVideoAssets::set_allocated_ko(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ko_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ko_.IsDefault()) {
          _impl_.ko_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.ko)
}

// string hk = 11;
inline void EventVideoAssets::clear_hk() {
  _impl_.hk_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::hk() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.hk)
  return _internal_hk();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_hk(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hk_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.hk)
}
inline std::string* EventVideoAssets::mutable_hk() {
  std::string* _s = _internal_mutable_hk();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.hk)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_hk() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.hk_.Get();
}
inline void EventVideoAssets::_internal_set_hk(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hk_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_hk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.hk_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_hk() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.hk)
  return _impl_.hk_.Release();
}
inline void EventVideoAssets::set_allocated_hk(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.hk_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hk_.IsDefault()) {
          _impl_.hk_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.hk)
}

// string tr = 12;
inline void EventVideoAssets::clear_tr() {
  _impl_.tr_.ClearToEmpty();
}
inline const std::string& EventVideoAssets::tr() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.EventVideoAssets.tr)
  return _internal_tr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EventVideoAssets::set_tr(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tr_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.EventVideoAssets.tr)
}
inline std::string* EventVideoAssets::mutable_tr() {
  std::string* _s = _internal_mutable_tr();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.EventVideoAssets.tr)
  return _s;
}
inline const std::string& EventVideoAssets::_internal_tr() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tr_.Get();
}
inline void EventVideoAssets::_internal_set_tr(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.tr_.Set(value, GetArenaForAllocation());
}
inline std::string* EventVideoAssets::_internal_mutable_tr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.tr_.Mutable( GetArenaForAllocation());
}
inline std::string* EventVideoAssets::release_tr() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.EventVideoAssets.tr)
  return _impl_.tr_.Release();
}
inline void EventVideoAssets::set_allocated_tr(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.tr_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tr_.IsDefault()) {
          _impl_.tr_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.EventVideoAssets.tr)
}

// -------------------------------------------------------------------

// RepeatedInt32

// repeated int32 values = 1;
inline int RepeatedInt32::_internal_values_size() const {
  return _internal_values().size();
}
inline int RepeatedInt32::values_size() const {
  return _internal_values_size();
}
inline void RepeatedInt32::clear_values() {
  _internal_mutable_values()->Clear();
}
inline ::int32_t RepeatedInt32::values(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.RepeatedInt32.values)
  return _internal_values().Get(index);
}
inline void RepeatedInt32::set_values(int index, ::int32_t value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.RepeatedInt32.values)
}
inline void RepeatedInt32::add_values(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.RepeatedInt32.values)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& RepeatedInt32::values() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.RepeatedInt32.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<::int32_t>* RepeatedInt32::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.RepeatedInt32.values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& RepeatedInt32::_internal_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* RepeatedInt32::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// PlayerlifecycleNotification

// .Digit.PrimePlatform.Models.PlayerlifecycleContentType contentType = 1;
inline void PlayerlifecycleNotification::clear_contenttype() {
  _impl_.contenttype_ = 0;
}
inline ::Digit::PrimePlatform::Models::PlayerlifecycleContentType PlayerlifecycleNotification::contenttype() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerlifecycleNotification.contentType)
  return _internal_contenttype();
}
inline void PlayerlifecycleNotification::set_contenttype(::Digit::PrimePlatform::Models::PlayerlifecycleContentType value) {
  _internal_set_contenttype(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerlifecycleNotification.contentType)
}
inline ::Digit::PrimePlatform::Models::PlayerlifecycleContentType PlayerlifecycleNotification::_internal_contenttype() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Digit::PrimePlatform::Models::PlayerlifecycleContentType>(_impl_.contenttype_);
}
inline void PlayerlifecycleNotification::_internal_set_contenttype(::Digit::PrimePlatform::Models::PlayerlifecycleContentType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.contenttype_ = value;
}

// string playgamiId = 2;
inline void PlayerlifecycleNotification::clear_playgamiid() {
  _impl_.playgamiid_.ClearToEmpty();
}
inline const std::string& PlayerlifecycleNotification::playgamiid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerlifecycleNotification.playgamiId)
  return _internal_playgamiid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerlifecycleNotification::set_playgamiid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.playgamiid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerlifecycleNotification.playgamiId)
}
inline std::string* PlayerlifecycleNotification::mutable_playgamiid() {
  std::string* _s = _internal_mutable_playgamiid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlayerlifecycleNotification.playgamiId)
  return _s;
}
inline const std::string& PlayerlifecycleNotification::_internal_playgamiid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.playgamiid_.Get();
}
inline void PlayerlifecycleNotification::_internal_set_playgamiid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.playgamiid_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayerlifecycleNotification::_internal_mutable_playgamiid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.playgamiid_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayerlifecycleNotification::release_playgamiid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.PlayerlifecycleNotification.playgamiId)
  return _impl_.playgamiid_.Release();
}
inline void PlayerlifecycleNotification::set_allocated_playgamiid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.playgamiid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.playgamiid_.IsDefault()) {
          _impl_.playgamiid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.PlayerlifecycleNotification.playgamiId)
}

// string category = 3;
inline void PlayerlifecycleNotification::clear_category() {
  _impl_.category_.ClearToEmpty();
}
inline const std::string& PlayerlifecycleNotification::category() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerlifecycleNotification.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerlifecycleNotification::set_category(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerlifecycleNotification.category)
}
inline std::string* PlayerlifecycleNotification::mutable_category() {
  std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlayerlifecycleNotification.category)
  return _s;
}
inline const std::string& PlayerlifecycleNotification::_internal_category() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.category_.Get();
}
inline void PlayerlifecycleNotification::_internal_set_category(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.category_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayerlifecycleNotification::_internal_mutable_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.category_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayerlifecycleNotification::release_category() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.PlayerlifecycleNotification.category)
  return _impl_.category_.Release();
}
inline void PlayerlifecycleNotification::set_allocated_category(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.category_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.category_.IsDefault()) {
          _impl_.category_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.PlayerlifecycleNotification.category)
}

// -------------------------------------------------------------------

// GameNewsModel

// int32 newsId = 1;
inline void GameNewsModel::clear_newsid() {
  _impl_.newsid_ = 0;
}
inline ::int32_t GameNewsModel::newsid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.newsId)
  return _internal_newsid();
}
inline void GameNewsModel::set_newsid(::int32_t value) {
  _internal_set_newsid(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.GameNewsModel.newsId)
}
inline ::int32_t GameNewsModel::_internal_newsid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.newsid_;
}
inline void GameNewsModel::_internal_set_newsid(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.newsid_ = value;
}

// int32 priority = 2;
inline void GameNewsModel::clear_priority() {
  _impl_.priority_ = 0;
}
inline ::int32_t GameNewsModel::priority() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.priority)
  return _internal_priority();
}
inline void GameNewsModel::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.GameNewsModel.priority)
}
inline ::int32_t GameNewsModel::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void GameNewsModel::_internal_set_priority(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// bool pinned = 3;
inline void GameNewsModel::clear_pinned() {
  _impl_.pinned_ = false;
}
inline bool GameNewsModel::pinned() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.pinned)
  return _internal_pinned();
}
inline void GameNewsModel::set_pinned(bool value) {
  _internal_set_pinned(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.GameNewsModel.pinned)
}
inline bool GameNewsModel::_internal_pinned() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pinned_;
}
inline void GameNewsModel::_internal_set_pinned(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.pinned_ = value;
}

// bool important = 4;
inline void GameNewsModel::clear_important() {
  _impl_.important_ = false;
}
inline bool GameNewsModel::important() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.important)
  return _internal_important();
}
inline void GameNewsModel::set_important(bool value) {
  _internal_set_important(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.GameNewsModel.important)
}
inline bool GameNewsModel::_internal_important() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.important_;
}
inline void GameNewsModel::_internal_set_important(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.important_ = value;
}

// .google.protobuf.Timestamp startDate = 5;
inline bool GameNewsModel::has_startdate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.startdate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GameNewsModel::_internal_startdate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.startdate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GameNewsModel::startdate() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.startDate)
  return _internal_startdate();
}
inline void GameNewsModel::unsafe_arena_set_allocated_startdate(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.startdate_);
  }
  _impl_.startdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.GameNewsModel.startDate)
}
inline ::google::protobuf::Timestamp* GameNewsModel::release_startdate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.startdate_;
  _impl_.startdate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GameNewsModel::unsafe_arena_release_startdate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.GameNewsModel.startDate)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.startdate_;
  _impl_.startdate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GameNewsModel::_internal_mutable_startdate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.startdate_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.startdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.startdate_;
}
inline ::google::protobuf::Timestamp* GameNewsModel::mutable_startdate() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_startdate();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.GameNewsModel.startDate)
  return _msg;
}
inline void GameNewsModel::set_allocated_startdate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.startdate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.startdate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.GameNewsModel.startDate)
}

// .google.protobuf.Timestamp endDate = 6;
inline bool GameNewsModel::has_enddate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.enddate_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GameNewsModel::_internal_enddate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.enddate_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GameNewsModel::enddate() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.endDate)
  return _internal_enddate();
}
inline void GameNewsModel::unsafe_arena_set_allocated_enddate(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enddate_);
  }
  _impl_.enddate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.GameNewsModel.endDate)
}
inline ::google::protobuf::Timestamp* GameNewsModel::release_enddate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.enddate_;
  _impl_.enddate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GameNewsModel::unsafe_arena_release_enddate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.GameNewsModel.endDate)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.enddate_;
  _impl_.enddate_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GameNewsModel::_internal_mutable_enddate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.enddate_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.enddate_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.enddate_;
}
inline ::google::protobuf::Timestamp* GameNewsModel::mutable_enddate() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_enddate();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.GameNewsModel.endDate)
  return _msg;
}
inline void GameNewsModel::set_allocated_enddate(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.enddate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.enddate_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.GameNewsModel.endDate)
}

// .Digit.PrimePlatform.Models.GameNewsMetadata metadata = 7;
inline bool GameNewsModel::has_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.metadata_ != nullptr);
  return value;
}
inline void GameNewsModel::clear_metadata() {
  if (_impl_.metadata_ != nullptr) _impl_.metadata_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::Digit::PrimePlatform::Models::GameNewsMetadata& GameNewsModel::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::GameNewsMetadata* p = _impl_.metadata_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::GameNewsMetadata&>(::Digit::PrimePlatform::Models::_GameNewsMetadata_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::GameNewsMetadata& GameNewsModel::metadata() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.metadata)
  return _internal_metadata();
}
inline void GameNewsModel::unsafe_arena_set_allocated_metadata(::Digit::PrimePlatform::Models::GameNewsMetadata* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.metadata_);
  }
  _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Models::GameNewsMetadata*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.GameNewsModel.metadata)
}
inline ::Digit::PrimePlatform::Models::GameNewsMetadata* GameNewsModel::release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::GameNewsMetadata* released = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::GameNewsMetadata* GameNewsModel::unsafe_arena_release_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.GameNewsModel.metadata)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::Digit::PrimePlatform::Models::GameNewsMetadata* temp = _impl_.metadata_;
  _impl_.metadata_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::GameNewsMetadata* GameNewsModel::_internal_mutable_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.metadata_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::GameNewsMetadata>(GetArenaForAllocation());
    _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Models::GameNewsMetadata*>(p);
  }
  return _impl_.metadata_;
}
inline ::Digit::PrimePlatform::Models::GameNewsMetadata* GameNewsModel::mutable_metadata() {
  ::Digit::PrimePlatform::Models::GameNewsMetadata* _msg = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.GameNewsModel.metadata)
  return _msg;
}
inline void GameNewsModel::set_allocated_metadata(::Digit::PrimePlatform::Models::GameNewsMetadata* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::GameNewsMetadata*>(_impl_.metadata_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::GameNewsMetadata*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.metadata_ = reinterpret_cast<::Digit::PrimePlatform::Models::GameNewsMetadata*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.GameNewsModel.metadata)
}

// bool isPlayerlifecycle = 8;
inline void GameNewsModel::clear_isplayerlifecycle() {
  _impl_.isplayerlifecycle_ = false;
}
inline bool GameNewsModel::isplayerlifecycle() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsModel.isPlayerlifecycle)
  return _internal_isplayerlifecycle();
}
inline void GameNewsModel::set_isplayerlifecycle(bool value) {
  _internal_set_isplayerlifecycle(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.GameNewsModel.isPlayerlifecycle)
}
inline bool GameNewsModel::_internal_isplayerlifecycle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.isplayerlifecycle_;
}
inline void GameNewsModel::_internal_set_isplayerlifecycle(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.isplayerlifecycle_ = value;
}

// -------------------------------------------------------------------

// GameNewsHolder

// repeated .Digit.PrimePlatform.Models.GameNewsModel newsItems = 1;
inline int GameNewsHolder::_internal_newsitems_size() const {
  return _internal_newsitems().size();
}
inline int GameNewsHolder::newsitems_size() const {
  return _internal_newsitems_size();
}
inline void GameNewsHolder::clear_newsitems() {
  _internal_mutable_newsitems()->Clear();
}
inline ::Digit::PrimePlatform::Models::GameNewsModel* GameNewsHolder::mutable_newsitems(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.GameNewsHolder.newsItems)
  return _internal_mutable_newsitems()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::GameNewsModel >*
GameNewsHolder::mutable_newsitems() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.GameNewsHolder.newsItems)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_newsitems();
}
inline const ::Digit::PrimePlatform::Models::GameNewsModel& GameNewsHolder::newsitems(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsHolder.newsItems)
    return _internal_newsitems().Get(index);
}
inline ::Digit::PrimePlatform::Models::GameNewsModel* GameNewsHolder::add_newsitems() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::GameNewsModel* _add = _internal_mutable_newsitems()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.GameNewsHolder.newsItems)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::GameNewsModel >&
GameNewsHolder::newsitems() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.GameNewsHolder.newsItems)
  return _internal_newsitems();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::GameNewsModel>&
GameNewsHolder::_internal_newsitems() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.newsitems_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::GameNewsModel>*
GameNewsHolder::_internal_mutable_newsitems() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.newsitems_;
}

// -------------------------------------------------------------------

// GameNewsMetadata

// string assetId = 1;
inline void GameNewsMetadata::clear_assetid() {
  _impl_.assetid_.ClearToEmpty();
}
inline const std::string& GameNewsMetadata::assetid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsMetadata.assetId)
  return _internal_assetid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameNewsMetadata::set_assetid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.GameNewsMetadata.assetId)
}
inline std::string* GameNewsMetadata::mutable_assetid() {
  std::string* _s = _internal_mutable_assetid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.GameNewsMetadata.assetId)
  return _s;
}
inline const std::string& GameNewsMetadata::_internal_assetid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.assetid_.Get();
}
inline void GameNewsMetadata::_internal_set_assetid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetid_.Set(value, GetArenaForAllocation());
}
inline std::string* GameNewsMetadata::_internal_mutable_assetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.assetid_.Mutable( GetArenaForAllocation());
}
inline std::string* GameNewsMetadata::release_assetid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.GameNewsMetadata.assetId)
  return _impl_.assetid_.Release();
}
inline void GameNewsMetadata::set_allocated_assetid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.assetid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.assetid_.IsDefault()) {
          _impl_.assetid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.GameNewsMetadata.assetId)
}

// string assetFilename = 2;
inline void GameNewsMetadata::clear_assetfilename() {
  _impl_.assetfilename_.ClearToEmpty();
}
inline const std::string& GameNewsMetadata::assetfilename() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.GameNewsMetadata.assetFilename)
  return _internal_assetfilename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GameNewsMetadata::set_assetfilename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetfilename_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.GameNewsMetadata.assetFilename)
}
inline std::string* GameNewsMetadata::mutable_assetfilename() {
  std::string* _s = _internal_mutable_assetfilename();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.GameNewsMetadata.assetFilename)
  return _s;
}
inline const std::string& GameNewsMetadata::_internal_assetfilename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.assetfilename_.Get();
}
inline void GameNewsMetadata::_internal_set_assetfilename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.assetfilename_.Set(value, GetArenaForAllocation());
}
inline std::string* GameNewsMetadata::_internal_mutable_assetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.assetfilename_.Mutable( GetArenaForAllocation());
}
inline std::string* GameNewsMetadata::release_assetfilename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.GameNewsMetadata.assetFilename)
  return _impl_.assetfilename_.Release();
}
inline void GameNewsMetadata::set_allocated_assetfilename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.assetfilename_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.assetfilename_.IsDefault()) {
          _impl_.assetfilename_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.GameNewsMetadata.assetFilename)
}

// -------------------------------------------------------------------

// Notifications

// repeated .Digit.PrimePlatform.Models.EventNotification tournamentNotifications = 1;
inline int Notifications::_internal_tournamentnotifications_size() const {
  return _internal_tournamentnotifications().size();
}
inline int Notifications::tournamentnotifications_size() const {
  return _internal_tournamentnotifications_size();
}
inline void Notifications::clear_tournamentnotifications() {
  _internal_mutable_tournamentnotifications()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventNotification* Notifications::mutable_tournamentnotifications(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Notifications.tournamentNotifications)
  return _internal_mutable_tournamentnotifications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >*
Notifications::mutable_tournamentnotifications() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.Notifications.tournamentNotifications)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_tournamentnotifications();
}
inline const ::Digit::PrimePlatform::Models::EventNotification& Notifications::tournamentnotifications(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Notifications.tournamentNotifications)
    return _internal_tournamentnotifications().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventNotification* Notifications::add_tournamentnotifications() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventNotification* _add = _internal_mutable_tournamentnotifications()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.Notifications.tournamentNotifications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >&
Notifications::tournamentnotifications() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.Notifications.tournamentNotifications)
  return _internal_tournamentnotifications();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>&
Notifications::_internal_tournamentnotifications() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.tournamentnotifications_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>*
Notifications::_internal_mutable_tournamentnotifications() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.tournamentnotifications_;
}

// repeated .Digit.PrimePlatform.Models.EventNotification leaderboardNotifications = 2;
inline int Notifications::_internal_leaderboardnotifications_size() const {
  return _internal_leaderboardnotifications().size();
}
inline int Notifications::leaderboardnotifications_size() const {
  return _internal_leaderboardnotifications_size();
}
inline void Notifications::clear_leaderboardnotifications() {
  _internal_mutable_leaderboardnotifications()->Clear();
}
inline ::Digit::PrimePlatform::Models::EventNotification* Notifications::mutable_leaderboardnotifications(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Notifications.leaderboardNotifications)
  return _internal_mutable_leaderboardnotifications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >*
Notifications::mutable_leaderboardnotifications() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.Notifications.leaderboardNotifications)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_leaderboardnotifications();
}
inline const ::Digit::PrimePlatform::Models::EventNotification& Notifications::leaderboardnotifications(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Notifications.leaderboardNotifications)
    return _internal_leaderboardnotifications().Get(index);
}
inline ::Digit::PrimePlatform::Models::EventNotification* Notifications::add_leaderboardnotifications() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::EventNotification* _add = _internal_mutable_leaderboardnotifications()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.Notifications.leaderboardNotifications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::EventNotification >&
Notifications::leaderboardnotifications() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.Notifications.leaderboardNotifications)
  return _internal_leaderboardnotifications();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>&
Notifications::_internal_leaderboardnotifications() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.leaderboardnotifications_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::EventNotification>*
Notifications::_internal_mutable_leaderboardnotifications() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.leaderboardnotifications_;
}

// repeated .Digit.PrimePlatform.Models.PlayerlifecycleNotification playerlifecycleNotifications = 3;
inline int Notifications::_internal_playerlifecyclenotifications_size() const {
  return _internal_playerlifecyclenotifications().size();
}
inline int Notifications::playerlifecyclenotifications_size() const {
  return _internal_playerlifecyclenotifications_size();
}
inline void Notifications::clear_playerlifecyclenotifications() {
  _internal_mutable_playerlifecyclenotifications()->Clear();
}
inline ::Digit::PrimePlatform::Models::PlayerlifecycleNotification* Notifications::mutable_playerlifecyclenotifications(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Notifications.playerlifecycleNotifications)
  return _internal_mutable_playerlifecyclenotifications()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerlifecycleNotification >*
Notifications::mutable_playerlifecyclenotifications() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.Notifications.playerlifecycleNotifications)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_playerlifecyclenotifications();
}
inline const ::Digit::PrimePlatform::Models::PlayerlifecycleNotification& Notifications::playerlifecyclenotifications(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Notifications.playerlifecycleNotifications)
    return _internal_playerlifecyclenotifications().Get(index);
}
inline ::Digit::PrimePlatform::Models::PlayerlifecycleNotification* Notifications::add_playerlifecyclenotifications() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::PlayerlifecycleNotification* _add = _internal_mutable_playerlifecyclenotifications()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.Notifications.playerlifecycleNotifications)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerlifecycleNotification >&
Notifications::playerlifecyclenotifications() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.Notifications.playerlifecycleNotifications)
  return _internal_playerlifecyclenotifications();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerlifecycleNotification>&
Notifications::_internal_playerlifecyclenotifications() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.playerlifecyclenotifications_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerlifecycleNotification>*
Notifications::_internal_mutable_playerlifecyclenotifications() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.playerlifecyclenotifications_;
}

// -------------------------------------------------------------------

// PlatformUserProfile

// string accountId = 1;
inline void PlatformUserProfile::clear_accountid() {
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& PlatformUserProfile::accountid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlatformUserProfile.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlatformUserProfile::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlatformUserProfile.accountId)
}
inline std::string* PlatformUserProfile::mutable_accountid() {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlatformUserProfile.accountId)
  return _s;
}
inline const std::string& PlatformUserProfile::_internal_accountid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.accountid_.Get();
}
inline void PlatformUserProfile::_internal_set_accountid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accountid_.Set(value, GetArenaForAllocation());
}
inline std::string* PlatformUserProfile::_internal_mutable_accountid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.accountid_.Mutable( GetArenaForAllocation());
}
inline std::string* PlatformUserProfile::release_accountid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.PlatformUserProfile.accountId)
  return _impl_.accountid_.Release();
}
inline void PlatformUserProfile::set_allocated_accountid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.accountid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.PlatformUserProfile.accountId)
}

// string name = 2;
inline void PlatformUserProfile::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& PlatformUserProfile::name() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlatformUserProfile.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlatformUserProfile::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlatformUserProfile.name)
}
inline std::string* PlatformUserProfile::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlatformUserProfile.name)
  return _s;
}
inline const std::string& PlatformUserProfile::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void PlatformUserProfile::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* PlatformUserProfile::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* PlatformUserProfile::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.PlatformUserProfile.name)
  return _impl_.name_.Release();
}
inline void PlatformUserProfile::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.PlatformUserProfile.name)
}

// -------------------------------------------------------------------

// PlatformUserProfileResponse

// repeated .Digit.PrimePlatform.Models.PlatformUserProfile playerProfiles = 1;
inline int PlatformUserProfileResponse::_internal_playerprofiles_size() const {
  return _internal_playerprofiles().size();
}
inline int PlatformUserProfileResponse::playerprofiles_size() const {
  return _internal_playerprofiles_size();
}
inline void PlatformUserProfileResponse::clear_playerprofiles() {
  _internal_mutable_playerprofiles()->Clear();
}
inline ::Digit::PrimePlatform::Models::PlatformUserProfile* PlatformUserProfileResponse::mutable_playerprofiles(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlatformUserProfileResponse.playerProfiles)
  return _internal_mutable_playerprofiles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlatformUserProfile >*
PlatformUserProfileResponse::mutable_playerprofiles() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.PlatformUserProfileResponse.playerProfiles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_playerprofiles();
}
inline const ::Digit::PrimePlatform::Models::PlatformUserProfile& PlatformUserProfileResponse::playerprofiles(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlatformUserProfileResponse.playerProfiles)
    return _internal_playerprofiles().Get(index);
}
inline ::Digit::PrimePlatform::Models::PlatformUserProfile* PlatformUserProfileResponse::add_playerprofiles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::PlatformUserProfile* _add = _internal_mutable_playerprofiles()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.PlatformUserProfileResponse.playerProfiles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlatformUserProfile >&
PlatformUserProfileResponse::playerprofiles() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.PlatformUserProfileResponse.playerProfiles)
  return _internal_playerprofiles();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlatformUserProfile>&
PlatformUserProfileResponse::_internal_playerprofiles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.playerprofiles_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlatformUserProfile>*
PlatformUserProfileResponse::_internal_mutable_playerprofiles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.playerprofiles_;
}

// -------------------------------------------------------------------

// PlayerStats

// string accountId = 1;
inline void PlayerStats::clear_accountid() {
  _impl_.accountid_.ClearToEmpty();
}
inline const std::string& PlayerStats::accountid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerStats.accountId)
  return _internal_accountid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerStats::set_accountid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accountid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerStats.accountId)
}
inline std::string* PlayerStats::mutable_accountid() {
  std::string* _s = _internal_mutable_accountid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlayerStats.accountId)
  return _s;
}
inline const std::string& PlayerStats::_internal_accountid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.accountid_.Get();
}
inline void PlayerStats::_internal_set_accountid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.accountid_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayerStats::_internal_mutable_accountid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.accountid_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayerStats::release_accountid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.PlayerStats.accountId)
  return _impl_.accountid_.Release();
}
inline void PlayerStats::set_allocated_accountid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.accountid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.accountid_.IsDefault()) {
          _impl_.accountid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.PlayerStats.accountId)
}

// repeated .Digit.PrimePlatform.Models.PlayerStatsGroup groups = 2;
inline int PlayerStats::_internal_groups_size() const {
  return _internal_groups().size();
}
inline int PlayerStats::groups_size() const {
  return _internal_groups_size();
}
inline void PlayerStats::clear_groups() {
  _internal_mutable_groups()->Clear();
}
inline ::Digit::PrimePlatform::Models::PlayerStatsGroup* PlayerStats::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlayerStats.groups)
  return _internal_mutable_groups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsGroup >*
PlayerStats::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.PlayerStats.groups)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_groups();
}
inline const ::Digit::PrimePlatform::Models::PlayerStatsGroup& PlayerStats::groups(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerStats.groups)
    return _internal_groups().Get(index);
}
inline ::Digit::PrimePlatform::Models::PlayerStatsGroup* PlayerStats::add_groups() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::PlayerStatsGroup* _add = _internal_mutable_groups()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.PlayerStats.groups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsGroup >&
PlayerStats::groups() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.PlayerStats.groups)
  return _internal_groups();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsGroup>&
PlayerStats::_internal_groups() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.groups_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsGroup>*
PlayerStats::_internal_mutable_groups() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.groups_;
}

// -------------------------------------------------------------------

// PlayerStatsGroup

// string name = 1;
inline void PlayerStatsGroup::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& PlayerStatsGroup::name() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerStatsGroup.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerStatsGroup::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerStatsGroup.name)
}
inline std::string* PlayerStatsGroup::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlayerStatsGroup.name)
  return _s;
}
inline const std::string& PlayerStatsGroup::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void PlayerStatsGroup::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayerStatsGroup::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayerStatsGroup::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.PlayerStatsGroup.name)
  return _impl_.name_.Release();
}
inline void PlayerStatsGroup::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.PlayerStatsGroup.name)
}

// repeated .Digit.PrimePlatform.Models.PlayerStatsEntry entries = 2;
inline int PlayerStatsGroup::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int PlayerStatsGroup::entries_size() const {
  return _internal_entries_size();
}
inline void PlayerStatsGroup::clear_entries() {
  _internal_mutable_entries()->Clear();
}
inline ::Digit::PrimePlatform::Models::PlayerStatsEntry* PlayerStatsGroup::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlayerStatsGroup.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsEntry >*
PlayerStatsGroup::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.PlayerStatsGroup.entries)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_entries();
}
inline const ::Digit::PrimePlatform::Models::PlayerStatsEntry& PlayerStatsGroup::entries(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerStatsGroup.entries)
    return _internal_entries().Get(index);
}
inline ::Digit::PrimePlatform::Models::PlayerStatsEntry* PlayerStatsGroup::add_entries() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::PlayerStatsEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.PlayerStatsGroup.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::PlayerStatsEntry >&
PlayerStatsGroup::entries() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.PlayerStatsGroup.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsEntry>&
PlayerStatsGroup::_internal_entries() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::PlayerStatsEntry>*
PlayerStatsGroup::_internal_mutable_entries() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// PlayerStatsEntry

// string statId = 1;
inline void PlayerStatsEntry::clear_statid() {
  _impl_.statid_.ClearToEmpty();
}
inline const std::string& PlayerStatsEntry::statid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerStatsEntry.statId)
  return _internal_statid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PlayerStatsEntry::set_statid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.statid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerStatsEntry.statId)
}
inline std::string* PlayerStatsEntry::mutable_statid() {
  std::string* _s = _internal_mutable_statid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.PlayerStatsEntry.statId)
  return _s;
}
inline const std::string& PlayerStatsEntry::_internal_statid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.statid_.Get();
}
inline void PlayerStatsEntry::_internal_set_statid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.statid_.Set(value, GetArenaForAllocation());
}
inline std::string* PlayerStatsEntry::_internal_mutable_statid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.statid_.Mutable( GetArenaForAllocation());
}
inline std::string* PlayerStatsEntry::release_statid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.PlayerStatsEntry.statId)
  return _impl_.statid_.Release();
}
inline void PlayerStatsEntry::set_allocated_statid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.statid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.statid_.IsDefault()) {
          _impl_.statid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.PlayerStatsEntry.statId)
}

// int32 priority = 2;
inline void PlayerStatsEntry::clear_priority() {
  _impl_.priority_ = 0;
}
inline ::int32_t PlayerStatsEntry::priority() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerStatsEntry.priority)
  return _internal_priority();
}
inline void PlayerStatsEntry::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerStatsEntry.priority)
}
inline ::int32_t PlayerStatsEntry::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void PlayerStatsEntry::_internal_set_priority(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// float value = 3;
inline void PlayerStatsEntry::clear_value() {
  _impl_.value_ = 0;
}
inline float PlayerStatsEntry::value() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerStatsEntry.value)
  return _internal_value();
}
inline void PlayerStatsEntry::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerStatsEntry.value)
}
inline float PlayerStatsEntry::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void PlayerStatsEntry::_internal_set_value(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// CacheHints

// repeated .Digit.PrimePlatform.Models.TranslationCacheUpdate translationCacheUpdate = 1;
inline int CacheHints::_internal_translationcacheupdate_size() const {
  return _internal_translationcacheupdate().size();
}
inline int CacheHints::translationcacheupdate_size() const {
  return _internal_translationcacheupdate_size();
}
inline void CacheHints::clear_translationcacheupdate() {
  _internal_mutable_translationcacheupdate()->Clear();
}
inline ::Digit::PrimePlatform::Models::TranslationCacheUpdate* CacheHints::mutable_translationcacheupdate(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.CacheHints.translationCacheUpdate)
  return _internal_mutable_translationcacheupdate()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::TranslationCacheUpdate >*
CacheHints::mutable_translationcacheupdate() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.CacheHints.translationCacheUpdate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_translationcacheupdate();
}
inline const ::Digit::PrimePlatform::Models::TranslationCacheUpdate& CacheHints::translationcacheupdate(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.CacheHints.translationCacheUpdate)
    return _internal_translationcacheupdate().Get(index);
}
inline ::Digit::PrimePlatform::Models::TranslationCacheUpdate* CacheHints::add_translationcacheupdate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::TranslationCacheUpdate* _add = _internal_mutable_translationcacheupdate()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.CacheHints.translationCacheUpdate)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::TranslationCacheUpdate >&
CacheHints::translationcacheupdate() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.CacheHints.translationCacheUpdate)
  return _internal_translationcacheupdate();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::TranslationCacheUpdate>&
CacheHints::_internal_translationcacheupdate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.translationcacheupdate_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::TranslationCacheUpdate>*
CacheHints::_internal_mutable_translationcacheupdate() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.translationcacheupdate_;
}

// -------------------------------------------------------------------

// Product

// uint32 id = 1;
inline void Product::clear_id() {
  _impl_.id_ = 0u;
}
inline ::uint32_t Product::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Product.id)
  return _internal_id();
}
inline void Product::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Product.id)
}
inline ::uint32_t Product::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Product::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string name = 2;
inline void Product::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Product::name() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Product.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Product.name)
}
inline std::string* Product::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Product.name)
  return _s;
}
inline const std::string& Product::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Product::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Product::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* Product::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Product.name)
  return _impl_.name_.Release();
}
inline void Product::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Product.name)
}

// string code = 3;
inline void Product::clear_code() {
  _impl_.code_.ClearToEmpty();
}
inline const std::string& Product::code() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Product.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Product::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Product.code)
}
inline std::string* Product::mutable_code() {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Product.code)
  return _s;
}
inline const std::string& Product::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void Product::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArenaForAllocation());
}
inline std::string* Product::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArenaForAllocation());
}
inline std::string* Product::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Product.code)
  return _impl_.code_.Release();
}
inline void Product::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Product.code)
}

// uint32 status = 4;
inline void Product::clear_status() {
  _impl_.status_ = 0u;
}
inline ::uint32_t Product::status() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Product.status)
  return _internal_status();
}
inline void Product::set_status(::uint32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Product.status)
}
inline ::uint32_t Product::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void Product::_internal_set_status(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// repeated .Digit.PrimePlatform.Models.Instance instances = 5;
inline int Product::_internal_instances_size() const {
  return _internal_instances().size();
}
inline int Product::instances_size() const {
  return _internal_instances_size();
}
inline void Product::clear_instances() {
  _internal_mutable_instances()->Clear();
}
inline ::Digit::PrimePlatform::Models::Instance* Product::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Product.instances)
  return _internal_mutable_instances()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Instance >*
Product::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.Product.instances)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_instances();
}
inline const ::Digit::PrimePlatform::Models::Instance& Product::instances(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Product.instances)
    return _internal_instances().Get(index);
}
inline ::Digit::PrimePlatform::Models::Instance* Product::add_instances() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::Instance* _add = _internal_mutable_instances()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.Product.instances)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Instance >&
Product::instances() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.Product.instances)
  return _internal_instances();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Instance>&
Product::_internal_instances() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.instances_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Instance>*
Product::_internal_mutable_instances() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.instances_;
}

// -------------------------------------------------------------------

// ProductInfoHolder

// string version = 1;
inline void ProductInfoHolder::clear_version() {
  _impl_.version_.ClearToEmpty();
}
inline const std::string& ProductInfoHolder::version() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.ProductInfoHolder.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProductInfoHolder::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.ProductInfoHolder.version)
}
inline std::string* ProductInfoHolder::mutable_version() {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.ProductInfoHolder.version)
  return _s;
}
inline const std::string& ProductInfoHolder::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void ProductInfoHolder::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArenaForAllocation());
}
inline std::string* ProductInfoHolder::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArenaForAllocation());
}
inline std::string* ProductInfoHolder::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.ProductInfoHolder.version)
  return _impl_.version_.Release();
}
inline void ProductInfoHolder::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.ProductInfoHolder.version)
}

// .Digit.PrimePlatform.Models.Product product = 2;
inline bool ProductInfoHolder::has_product() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.product_ != nullptr);
  return value;
}
inline void ProductInfoHolder::clear_product() {
  if (_impl_.product_ != nullptr) _impl_.product_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Models::Product& ProductInfoHolder::_internal_product() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::Product* p = _impl_.product_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::Product&>(::Digit::PrimePlatform::Models::_Product_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::Product& ProductInfoHolder::product() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.ProductInfoHolder.product)
  return _internal_product();
}
inline void ProductInfoHolder::unsafe_arena_set_allocated_product(::Digit::PrimePlatform::Models::Product* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.product_);
  }
  _impl_.product_ = reinterpret_cast<::Digit::PrimePlatform::Models::Product*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.ProductInfoHolder.product)
}
inline ::Digit::PrimePlatform::Models::Product* ProductInfoHolder::release_product() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::Product* released = _impl_.product_;
  _impl_.product_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::Product* ProductInfoHolder::unsafe_arena_release_product() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.ProductInfoHolder.product)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::Product* temp = _impl_.product_;
  _impl_.product_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::Product* ProductInfoHolder::_internal_mutable_product() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.product_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::Product>(GetArenaForAllocation());
    _impl_.product_ = reinterpret_cast<::Digit::PrimePlatform::Models::Product*>(p);
  }
  return _impl_.product_;
}
inline ::Digit::PrimePlatform::Models::Product* ProductInfoHolder::mutable_product() {
  ::Digit::PrimePlatform::Models::Product* _msg = _internal_mutable_product();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.ProductInfoHolder.product)
  return _msg;
}
inline void ProductInfoHolder::set_allocated_product(::Digit::PrimePlatform::Models::Product* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::Product*>(_impl_.product_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::Product*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.product_ = reinterpret_cast<::Digit::PrimePlatform::Models::Product*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.ProductInfoHolder.product)
}

// .Digit.PrimePlatform.Models.CacheHints cacheHints = 3;
inline bool ProductInfoHolder::has_cachehints() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cachehints_ != nullptr);
  return value;
}
inline void ProductInfoHolder::clear_cachehints() {
  if (_impl_.cachehints_ != nullptr) _impl_.cachehints_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Digit::PrimePlatform::Models::CacheHints& ProductInfoHolder::_internal_cachehints() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::CacheHints* p = _impl_.cachehints_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::CacheHints&>(::Digit::PrimePlatform::Models::_CacheHints_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::CacheHints& ProductInfoHolder::cachehints() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.ProductInfoHolder.cacheHints)
  return _internal_cachehints();
}
inline void ProductInfoHolder::unsafe_arena_set_allocated_cachehints(::Digit::PrimePlatform::Models::CacheHints* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cachehints_);
  }
  _impl_.cachehints_ = reinterpret_cast<::Digit::PrimePlatform::Models::CacheHints*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.ProductInfoHolder.cacheHints)
}
inline ::Digit::PrimePlatform::Models::CacheHints* ProductInfoHolder::release_cachehints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::CacheHints* released = _impl_.cachehints_;
  _impl_.cachehints_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::CacheHints* ProductInfoHolder::unsafe_arena_release_cachehints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.ProductInfoHolder.cacheHints)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::CacheHints* temp = _impl_.cachehints_;
  _impl_.cachehints_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::CacheHints* ProductInfoHolder::_internal_mutable_cachehints() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cachehints_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::CacheHints>(GetArenaForAllocation());
    _impl_.cachehints_ = reinterpret_cast<::Digit::PrimePlatform::Models::CacheHints*>(p);
  }
  return _impl_.cachehints_;
}
inline ::Digit::PrimePlatform::Models::CacheHints* ProductInfoHolder::mutable_cachehints() {
  ::Digit::PrimePlatform::Models::CacheHints* _msg = _internal_mutable_cachehints();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.ProductInfoHolder.cacheHints)
  return _msg;
}
inline void ProductInfoHolder::set_allocated_cachehints(::Digit::PrimePlatform::Models::CacheHints* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::CacheHints*>(_impl_.cachehints_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::CacheHints*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cachehints_ = reinterpret_cast<::Digit::PrimePlatform::Models::CacheHints*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.ProductInfoHolder.cacheHints)
}

// -------------------------------------------------------------------

// Region

// string id = 1;
inline void Region::clear_id() {
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Region::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Region.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Region::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Region.id)
}
inline std::string* Region::mutable_id() {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Region.id)
  return _s;
}
inline const std::string& Region::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void Region::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArenaForAllocation());
}
inline std::string* Region::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArenaForAllocation());
}
inline std::string* Region::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Region.id)
  return _impl_.id_.Release();
}
inline void Region::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Region.id)
}

// string description = 2;
inline void Region::clear_description() {
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Region::description() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Region.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Region::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Region.description)
}
inline std::string* Region::mutable_description() {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Region.description)
  return _s;
}
inline const std::string& Region::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void Region::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArenaForAllocation());
}
inline std::string* Region::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArenaForAllocation());
}
inline std::string* Region::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Region.description)
  return _impl_.description_.Release();
}
inline void Region::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Region.description)
}

// uint32 num = 3;
inline void Region::clear_num() {
  _impl_.num_ = 0u;
}
inline ::uint32_t Region::num() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Region.num)
  return _internal_num();
}
inline void Region::set_num(::uint32_t value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Region.num)
}
inline ::uint32_t Region::_internal_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.num_;
}
inline void Region::_internal_set_num(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.num_ = value;
}

// -------------------------------------------------------------------

// Instance

// uint32 id = 1;
inline void Instance::clear_id() {
  _impl_.id_ = 0u;
}
inline ::uint32_t Instance::id() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Instance.id)
  return _internal_id();
}
inline void Instance::set_id(::uint32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Instance.id)
}
inline ::uint32_t Instance::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void Instance::_internal_set_id(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string name = 2;
inline void Instance::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Instance::name() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Instance.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Instance::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Instance.name)
}
inline std::string* Instance::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Instance.name)
  return _s;
}
inline const std::string& Instance::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void Instance::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* Instance::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* Instance::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Instance.name)
  return _impl_.name_.Release();
}
inline void Instance::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Instance.name)
}

// uint32 priority = 3;
inline void Instance::clear_priority() {
  _impl_.priority_ = 0u;
}
inline ::uint32_t Instance::priority() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Instance.priority)
  return _internal_priority();
}
inline void Instance::set_priority(::uint32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Instance.priority)
}
inline ::uint32_t Instance::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void Instance::_internal_set_priority(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// .Digit.PrimePlatform.Models.Region region = 4;
inline bool Instance::has_region() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.region_ != nullptr);
  return value;
}
inline void Instance::clear_region() {
  if (_impl_.region_ != nullptr) _impl_.region_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Digit::PrimePlatform::Models::Region& Instance::_internal_region() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::Region* p = _impl_.region_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::Region&>(::Digit::PrimePlatform::Models::_Region_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::Region& Instance::region() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Instance.region)
  return _internal_region();
}
inline void Instance::unsafe_arena_set_allocated_region(::Digit::PrimePlatform::Models::Region* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.region_);
  }
  _impl_.region_ = reinterpret_cast<::Digit::PrimePlatform::Models::Region*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.Instance.region)
}
inline ::Digit::PrimePlatform::Models::Region* Instance::release_region() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::Region* released = _impl_.region_;
  _impl_.region_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::Region* Instance::unsafe_arena_release_region() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Instance.region)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Digit::PrimePlatform::Models::Region* temp = _impl_.region_;
  _impl_.region_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::Region* Instance::_internal_mutable_region() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.region_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::Region>(GetArenaForAllocation());
    _impl_.region_ = reinterpret_cast<::Digit::PrimePlatform::Models::Region*>(p);
  }
  return _impl_.region_;
}
inline ::Digit::PrimePlatform::Models::Region* Instance::mutable_region() {
  ::Digit::PrimePlatform::Models::Region* _msg = _internal_mutable_region();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Instance.region)
  return _msg;
}
inline void Instance::set_allocated_region(::Digit::PrimePlatform::Models::Region* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::Region*>(_impl_.region_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::Region*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.region_ = reinterpret_cast<::Digit::PrimePlatform::Models::Region*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Instance.region)
}

// int32 status = 5;
inline void Instance::clear_status() {
  _impl_.status_ = 0;
}
inline ::int32_t Instance::status() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Instance.status)
  return _internal_status();
}
inline void Instance::set_status(::int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Instance.status)
}
inline ::int32_t Instance::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.status_;
}
inline void Instance::_internal_set_status(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// int64 maintenance = 6;
inline void Instance::clear_maintenance() {
  _impl_.maintenance_ = ::int64_t{0};
}
inline ::int64_t Instance::maintenance() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Instance.maintenance)
  return _internal_maintenance();
}
inline void Instance::set_maintenance(::int64_t value) {
  _internal_set_maintenance(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Instance.maintenance)
}
inline ::int64_t Instance::_internal_maintenance() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.maintenance_;
}
inline void Instance::_internal_set_maintenance(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.maintenance_ = value;
}

// .Digit.PrimePlatform.Models.PlayerTransferState playerTransferState = 7;
inline bool Instance::has_playertransferstate() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.playertransferstate_ != nullptr);
  return value;
}
inline void Instance::clear_playertransferstate() {
  if (_impl_.playertransferstate_ != nullptr) _impl_.playertransferstate_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::Digit::PrimePlatform::Models::PlayerTransferState& Instance::_internal_playertransferstate() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::Digit::PrimePlatform::Models::PlayerTransferState* p = _impl_.playertransferstate_;
  return p != nullptr ? *p : reinterpret_cast<const ::Digit::PrimePlatform::Models::PlayerTransferState&>(::Digit::PrimePlatform::Models::_PlayerTransferState_default_instance_);
}
inline const ::Digit::PrimePlatform::Models::PlayerTransferState& Instance::playertransferstate() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Instance.playerTransferState)
  return _internal_playertransferstate();
}
inline void Instance::unsafe_arena_set_allocated_playertransferstate(::Digit::PrimePlatform::Models::PlayerTransferState* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.playertransferstate_);
  }
  _impl_.playertransferstate_ = reinterpret_cast<::Digit::PrimePlatform::Models::PlayerTransferState*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.Instance.playerTransferState)
}
inline ::Digit::PrimePlatform::Models::PlayerTransferState* Instance::release_playertransferstate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::PlayerTransferState* released = _impl_.playertransferstate_;
  _impl_.playertransferstate_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::Digit::PrimePlatform::Models::PlayerTransferState* Instance::unsafe_arena_release_playertransferstate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Instance.playerTransferState)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::Digit::PrimePlatform::Models::PlayerTransferState* temp = _impl_.playertransferstate_;
  _impl_.playertransferstate_ = nullptr;
  return temp;
}
inline ::Digit::PrimePlatform::Models::PlayerTransferState* Instance::_internal_mutable_playertransferstate() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.playertransferstate_ == nullptr) {
    auto* p = CreateMaybeMessage<::Digit::PrimePlatform::Models::PlayerTransferState>(GetArenaForAllocation());
    _impl_.playertransferstate_ = reinterpret_cast<::Digit::PrimePlatform::Models::PlayerTransferState*>(p);
  }
  return _impl_.playertransferstate_;
}
inline ::Digit::PrimePlatform::Models::PlayerTransferState* Instance::mutable_playertransferstate() {
  ::Digit::PrimePlatform::Models::PlayerTransferState* _msg = _internal_mutable_playertransferstate();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Instance.playerTransferState)
  return _msg;
}
inline void Instance::set_allocated_playertransferstate(::Digit::PrimePlatform::Models::PlayerTransferState* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::Digit::PrimePlatform::Models::PlayerTransferState*>(_impl_.playertransferstate_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::Digit::PrimePlatform::Models::PlayerTransferState*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.playertransferstate_ = reinterpret_cast<::Digit::PrimePlatform::Models::PlayerTransferState*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Instance.playerTransferState)
}

// -------------------------------------------------------------------

// PlayerTransferState

// bool transferIn = 1;
inline void PlayerTransferState::clear_transferin() {
  _impl_.transferin_ = false;
}
inline bool PlayerTransferState::transferin() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerTransferState.transferIn)
  return _internal_transferin();
}
inline void PlayerTransferState::set_transferin(bool value) {
  _internal_set_transferin(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerTransferState.transferIn)
}
inline bool PlayerTransferState::_internal_transferin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transferin_;
}
inline void PlayerTransferState::_internal_set_transferin(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transferin_ = value;
}

// bool transferOut = 2;
inline void PlayerTransferState::clear_transferout() {
  _impl_.transferout_ = false;
}
inline bool PlayerTransferState::transferout() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerTransferState.transferOut)
  return _internal_transferout();
}
inline void PlayerTransferState::set_transferout(bool value) {
  _internal_set_transferout(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerTransferState.transferOut)
}
inline bool PlayerTransferState::_internal_transferout() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transferout_;
}
inline void PlayerTransferState::_internal_set_transferout(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transferout_ = value;
}

// bool authenticated = 3;
inline void PlayerTransferState::clear_authenticated() {
  _impl_.authenticated_ = false;
}
inline bool PlayerTransferState::authenticated() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.PlayerTransferState.authenticated)
  return _internal_authenticated();
}
inline void PlayerTransferState::set_authenticated(bool value) {
  _internal_set_authenticated(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.PlayerTransferState.authenticated)
}
inline bool PlayerTransferState::_internal_authenticated() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.authenticated_;
}
inline void PlayerTransferState::_internal_set_authenticated(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.authenticated_ = value;
}

// -------------------------------------------------------------------

// TranslationCacheUpdate

// string section = 1;
inline void TranslationCacheUpdate::clear_section() {
  _impl_.section_.ClearToEmpty();
}
inline const std::string& TranslationCacheUpdate::section() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.TranslationCacheUpdate.section)
  return _internal_section();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TranslationCacheUpdate::set_section(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.section_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.TranslationCacheUpdate.section)
}
inline std::string* TranslationCacheUpdate::mutable_section() {
  std::string* _s = _internal_mutable_section();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.TranslationCacheUpdate.section)
  return _s;
}
inline const std::string& TranslationCacheUpdate::_internal_section() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.section_.Get();
}
inline void TranslationCacheUpdate::_internal_set_section(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.section_.Set(value, GetArenaForAllocation());
}
inline std::string* TranslationCacheUpdate::_internal_mutable_section() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.section_.Mutable( GetArenaForAllocation());
}
inline std::string* TranslationCacheUpdate::release_section() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.TranslationCacheUpdate.section)
  return _impl_.section_.Release();
}
inline void TranslationCacheUpdate::set_allocated_section(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.section_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.section_.IsDefault()) {
          _impl_.section_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.TranslationCacheUpdate.section)
}

// .google.protobuf.Timestamp updatedAt = 2;
inline bool TranslationCacheUpdate::has_updatedat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updatedat_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TranslationCacheUpdate::_internal_updatedat() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updatedat_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TranslationCacheUpdate::updatedat() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.TranslationCacheUpdate.updatedAt)
  return _internal_updatedat();
}
inline void TranslationCacheUpdate::unsafe_arena_set_allocated_updatedat(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updatedat_);
  }
  _impl_.updatedat_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Digit.PrimePlatform.Models.TranslationCacheUpdate.updatedAt)
}
inline ::google::protobuf::Timestamp* TranslationCacheUpdate::release_updatedat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updatedat_;
  _impl_.updatedat_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* TranslationCacheUpdate::unsafe_arena_release_updatedat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.TranslationCacheUpdate.updatedAt)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updatedat_;
  _impl_.updatedat_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TranslationCacheUpdate::_internal_mutable_updatedat() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updatedat_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaForAllocation());
    _impl_.updatedat_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updatedat_;
}
inline ::google::protobuf::Timestamp* TranslationCacheUpdate::mutable_updatedat() {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updatedat();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.TranslationCacheUpdate.updatedAt)
  return _msg;
}
inline void TranslationCacheUpdate::set_allocated_updatedat(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updatedat_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updatedat_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.TranslationCacheUpdate.updatedAt)
}

// -------------------------------------------------------------------

// MinigameHolder

// repeated .Digit.PrimePlatform.Models.Minigame games = 1;
inline int MinigameHolder::_internal_games_size() const {
  return _internal_games().size();
}
inline int MinigameHolder::games_size() const {
  return _internal_games_size();
}
inline void MinigameHolder::clear_games() {
  _internal_mutable_games()->Clear();
}
inline ::Digit::PrimePlatform::Models::Minigame* MinigameHolder::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.MinigameHolder.games)
  return _internal_mutable_games()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Minigame >*
MinigameHolder::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.MinigameHolder.games)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_games();
}
inline const ::Digit::PrimePlatform::Models::Minigame& MinigameHolder::games(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.MinigameHolder.games)
    return _internal_games().Get(index);
}
inline ::Digit::PrimePlatform::Models::Minigame* MinigameHolder::add_games() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::Minigame* _add = _internal_mutable_games()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.MinigameHolder.games)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::Minigame >&
MinigameHolder::games() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.MinigameHolder.games)
  return _internal_games();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Minigame>&
MinigameHolder::_internal_games() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.games_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::Minigame>*
MinigameHolder::_internal_mutable_games() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.games_;
}

// -------------------------------------------------------------------

// Minigame

// string configId = 1;
inline void Minigame::clear_configid() {
  _impl_.configid_.ClearToEmpty();
}
inline const std::string& Minigame::configid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Minigame.configId)
  return _internal_configid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Minigame::set_configid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.Minigame.configId)
}
inline std::string* Minigame::mutable_configid() {
  std::string* _s = _internal_mutable_configid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Minigame.configId)
  return _s;
}
inline const std::string& Minigame::_internal_configid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configid_.Get();
}
inline void Minigame::_internal_set_configid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(value, GetArenaForAllocation());
}
inline std::string* Minigame::_internal_mutable_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.configid_.Mutable( GetArenaForAllocation());
}
inline std::string* Minigame::release_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.Minigame.configId)
  return _impl_.configid_.Release();
}
inline void Minigame::set_allocated_configid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.configid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.configid_.IsDefault()) {
          _impl_.configid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.Minigame.configId)
}

// repeated .Digit.PrimePlatform.Models.MinigameStage stages = 2;
inline int Minigame::_internal_stages_size() const {
  return _internal_stages().size();
}
inline int Minigame::stages_size() const {
  return _internal_stages_size();
}
inline void Minigame::clear_stages() {
  _internal_mutable_stages()->Clear();
}
inline ::Digit::PrimePlatform::Models::MinigameStage* Minigame::mutable_stages(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.Minigame.stages)
  return _internal_mutable_stages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::MinigameStage >*
Minigame::mutable_stages() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.Minigame.stages)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_stages();
}
inline const ::Digit::PrimePlatform::Models::MinigameStage& Minigame::stages(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.Minigame.stages)
    return _internal_stages().Get(index);
}
inline ::Digit::PrimePlatform::Models::MinigameStage* Minigame::add_stages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::PrimePlatform::Models::MinigameStage* _add = _internal_mutable_stages()->Add();
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.Minigame.stages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::PrimePlatform::Models::MinigameStage >&
Minigame::stages() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.Minigame.stages)
  return _internal_stages();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::MinigameStage>&
Minigame::_internal_stages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.stages_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::PrimePlatform::Models::MinigameStage>*
Minigame::_internal_mutable_stages() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.stages_;
}

// -------------------------------------------------------------------

// MinigameStage

// string configId = 1;
inline void MinigameStage::clear_configid() {
  _impl_.configid_.ClearToEmpty();
}
inline const std::string& MinigameStage::configid() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.MinigameStage.configId)
  return _internal_configid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MinigameStage::set_configid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.MinigameStage.configId)
}
inline std::string* MinigameStage::mutable_configid() {
  std::string* _s = _internal_mutable_configid();
  // @@protoc_insertion_point(field_mutable:Digit.PrimePlatform.Models.MinigameStage.configId)
  return _s;
}
inline const std::string& MinigameStage::_internal_configid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.configid_.Get();
}
inline void MinigameStage::_internal_set_configid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.configid_.Set(value, GetArenaForAllocation());
}
inline std::string* MinigameStage::_internal_mutable_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.configid_.Mutable( GetArenaForAllocation());
}
inline std::string* MinigameStage::release_configid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.PrimePlatform.Models.MinigameStage.configId)
  return _impl_.configid_.Release();
}
inline void MinigameStage::set_allocated_configid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.configid_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.configid_.IsDefault()) {
          _impl_.configid_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.PrimePlatform.Models.MinigameStage.configId)
}

// bool locked = 2;
inline void MinigameStage::clear_locked() {
  _impl_.locked_ = false;
}
inline bool MinigameStage::locked() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.MinigameStage.locked)
  return _internal_locked();
}
inline void MinigameStage::set_locked(bool value) {
  _internal_set_locked(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.MinigameStage.locked)
}
inline bool MinigameStage::_internal_locked() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.locked_;
}
inline void MinigameStage::_internal_set_locked(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.locked_ = value;
}

// repeated uint32 rewards = 3;
inline int MinigameStage::_internal_rewards_size() const {
  return _internal_rewards().size();
}
inline int MinigameStage::rewards_size() const {
  return _internal_rewards_size();
}
inline void MinigameStage::clear_rewards() {
  _internal_mutable_rewards()->Clear();
}
inline ::uint32_t MinigameStage::rewards(int index) const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.MinigameStage.rewards)
  return _internal_rewards().Get(index);
}
inline void MinigameStage::set_rewards(int index, ::uint32_t value) {
  _internal_mutable_rewards()->Set(index, value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.MinigameStage.rewards)
}
inline void MinigameStage::add_rewards(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_rewards()->Add(value);
  // @@protoc_insertion_point(field_add:Digit.PrimePlatform.Models.MinigameStage.rewards)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& MinigameStage::rewards() const {
  // @@protoc_insertion_point(field_list:Digit.PrimePlatform.Models.MinigameStage.rewards)
  return _internal_rewards();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MinigameStage::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:Digit.PrimePlatform.Models.MinigameStage.rewards)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_rewards();
}

inline const ::google::protobuf::RepeatedField<::uint32_t>& MinigameStage::_internal_rewards() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rewards_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* MinigameStage::_internal_mutable_rewards() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.rewards_;
}

// uint32 score = 4;
inline void MinigameStage::clear_score() {
  _impl_.score_ = 0u;
}
inline ::uint32_t MinigameStage::score() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.MinigameStage.score)
  return _internal_score();
}
inline void MinigameStage::set_score(::uint32_t value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.MinigameStage.score)
}
inline ::uint32_t MinigameStage::_internal_score() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.score_;
}
inline void MinigameStage::_internal_set_score(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.score_ = value;
}

// uint32 priority = 5;
inline void MinigameStage::clear_priority() {
  _impl_.priority_ = 0u;
}
inline ::uint32_t MinigameStage::priority() const {
  // @@protoc_insertion_point(field_get:Digit.PrimePlatform.Models.MinigameStage.priority)
  return _internal_priority();
}
inline void MinigameStage::set_priority(::uint32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:Digit.PrimePlatform.Models.MinigameStage.priority)
}
inline ::uint32_t MinigameStage::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void MinigameStage::_internal_set_priority(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Models
}  // namespace PrimePlatform
}  // namespace Digit


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Digit::PrimePlatform::Models::EventCategories> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Digit::PrimePlatform::Models::EventCategories>() {
  return ::Digit::PrimePlatform::Models::EventCategories_descriptor();
}
template <>
struct is_proto_enum<::Digit::PrimePlatform::Models::JoinForbidden> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Digit::PrimePlatform::Models::JoinForbidden>() {
  return ::Digit::PrimePlatform::Models::JoinForbidden_descriptor();
}
template <>
struct is_proto_enum<::Digit::PrimePlatform::Models::BattlePassType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Digit::PrimePlatform::Models::BattlePassType>() {
  return ::Digit::PrimePlatform::Models::BattlePassType_descriptor();
}
template <>
struct is_proto_enum<::Digit::PrimePlatform::Models::PlacementType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Digit::PrimePlatform::Models::PlacementType>() {
  return ::Digit::PrimePlatform::Models::PlacementType_descriptor();
}
template <>
struct is_proto_enum<::Digit::PrimePlatform::Models::SegmentType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Digit::PrimePlatform::Models::SegmentType>() {
  return ::Digit::PrimePlatform::Models::SegmentType_descriptor();
}
template <>
struct is_proto_enum<::Digit::PrimePlatform::Models::PlayerlifecycleContentType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Digit::PrimePlatform::Models::PlayerlifecycleContentType>() {
  return ::Digit::PrimePlatform::Models::PlayerlifecycleContentType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrimePlatform_2eModels_2eproto_2epb_2eh
