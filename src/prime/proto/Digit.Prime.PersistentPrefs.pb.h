// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Prime.PersistentPrefs.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrime_2ePersistentPrefs_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrime_2ePersistentPrefs_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Digit_2ePrime_2ePersistentPrefs_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Digit_2ePrime_2ePersistentPrefs_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Digit_2ePrime_2ePersistentPrefs_2eproto;
namespace Digit {
namespace Prime {
namespace PersistentPrefs {
class PersistentPref;
struct PersistentPrefDefaultTypeInternal;
extern PersistentPrefDefaultTypeInternal _PersistentPref_default_instance_;
class PersistentPrefsData;
struct PersistentPrefsDataDefaultTypeInternal;
extern PersistentPrefsDataDefaultTypeInternal _PersistentPrefsData_default_instance_;
class StringListPrefsData;
struct StringListPrefsDataDefaultTypeInternal;
extern StringListPrefsDataDefaultTypeInternal _StringListPrefsData_default_instance_;
}  // namespace PersistentPrefs
}  // namespace Prime
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Digit {
namespace Prime {
namespace PersistentPrefs {

// ===================================================================


// -------------------------------------------------------------------

class StringListPrefsData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.Prime.PersistentPrefs.StringListPrefsData) */ {
 public:
  inline StringListPrefsData() : StringListPrefsData(nullptr) {}
  ~StringListPrefsData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StringListPrefsData(::google::protobuf::internal::ConstantInitialized);

  StringListPrefsData(const StringListPrefsData& from);
  StringListPrefsData(StringListPrefsData&& from) noexcept
    : StringListPrefsData() {
    *this = ::std::move(from);
  }

  inline StringListPrefsData& operator=(const StringListPrefsData& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringListPrefsData& operator=(StringListPrefsData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StringListPrefsData& default_instance() {
    return *internal_default_instance();
  }
  static inline const StringListPrefsData* internal_default_instance() {
    return reinterpret_cast<const StringListPrefsData*>(
               &_StringListPrefsData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(StringListPrefsData& a, StringListPrefsData& b) {
    a.Swap(&b);
  }
  inline void Swap(StringListPrefsData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StringListPrefsData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StringListPrefsData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StringListPrefsData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StringListPrefsData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StringListPrefsData& from) {
    StringListPrefsData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringListPrefsData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Prime.PersistentPrefs.StringListPrefsData";
  }
  protected:
  explicit StringListPrefsData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kListFieldNumber = 1,
  };
  // repeated string list = 1;
  int list_size() const;
  private:
  int _internal_list_size() const;

  public:
  void clear_list() ;
  const std::string& list(int index) const;
  std::string* mutable_list(int index);
  void set_list(int index, const std::string& value);
  void set_list(int index, std::string&& value);
  void set_list(int index, const char* value);
  void set_list(int index, const char* value, std::size_t size);
  void set_list(int index, absl::string_view value);
  std::string* add_list();
  void add_list(const std::string& value);
  void add_list(std::string&& value);
  void add_list(const char* value);
  void add_list(const char* value, std::size_t size);
  void add_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_list();

  public:
  // @@protoc_insertion_point(class_scope:Digit.Prime.PersistentPrefs.StringListPrefsData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 60, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrime_2ePersistentPrefs_2eproto;
};// -------------------------------------------------------------------

class PersistentPref final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.Prime.PersistentPrefs.PersistentPref) */ {
 public:
  inline PersistentPref() : PersistentPref(nullptr) {}
  ~PersistentPref() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PersistentPref(::google::protobuf::internal::ConstantInitialized);

  PersistentPref(const PersistentPref& from);
  PersistentPref(PersistentPref&& from) noexcept
    : PersistentPref() {
    *this = ::std::move(from);
  }

  inline PersistentPref& operator=(const PersistentPref& from) {
    CopyFrom(from);
    return *this;
  }
  inline PersistentPref& operator=(PersistentPref&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PersistentPref& default_instance() {
    return *internal_default_instance();
  }
  static inline const PersistentPref* internal_default_instance() {
    return reinterpret_cast<const PersistentPref*>(
               &_PersistentPref_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PersistentPref& a, PersistentPref& b) {
    a.Swap(&b);
  }
  inline void Swap(PersistentPref* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PersistentPref* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PersistentPref* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PersistentPref>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PersistentPref& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PersistentPref& from) {
    PersistentPref::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PersistentPref* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Prime.PersistentPrefs.PersistentPref";
  }
  protected:
  explicit PersistentPref(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kKeyFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int64 key = 1;
  void clear_key() ;
  ::int64_t key() const;
  void set_key(::int64_t value);

  private:
  ::int64_t _internal_key() const;
  void _internal_set_key(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:Digit.Prime.PersistentPrefs.PersistentPref)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int64_t key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrime_2ePersistentPrefs_2eproto;
};// -------------------------------------------------------------------

class PersistentPrefsData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.Prime.PersistentPrefs.PersistentPrefsData) */ {
 public:
  inline PersistentPrefsData() : PersistentPrefsData(nullptr) {}
  ~PersistentPrefsData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PersistentPrefsData(::google::protobuf::internal::ConstantInitialized);

  PersistentPrefsData(const PersistentPrefsData& from);
  PersistentPrefsData(PersistentPrefsData&& from) noexcept
    : PersistentPrefsData() {
    *this = ::std::move(from);
  }

  inline PersistentPrefsData& operator=(const PersistentPrefsData& from) {
    CopyFrom(from);
    return *this;
  }
  inline PersistentPrefsData& operator=(PersistentPrefsData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PersistentPrefsData& default_instance() {
    return *internal_default_instance();
  }
  static inline const PersistentPrefsData* internal_default_instance() {
    return reinterpret_cast<const PersistentPrefsData*>(
               &_PersistentPrefsData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PersistentPrefsData& a, PersistentPrefsData& b) {
    a.Swap(&b);
  }
  inline void Swap(PersistentPrefsData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PersistentPrefsData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PersistentPrefsData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PersistentPrefsData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PersistentPrefsData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PersistentPrefsData& from) {
    PersistentPrefsData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PersistentPrefsData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Prime.PersistentPrefs.PersistentPrefsData";
  }
  protected:
  explicit PersistentPrefsData(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPreferencesFieldNumber = 2,
  };
  // repeated .Digit.Prime.PersistentPrefs.PersistentPref preferences = 2;
  int preferences_size() const;
  private:
  int _internal_preferences_size() const;

  public:
  void clear_preferences() ;
  ::Digit::Prime::PersistentPrefs::PersistentPref* mutable_preferences(int index);
  ::google::protobuf::RepeatedPtrField< ::Digit::Prime::PersistentPrefs::PersistentPref >*
      mutable_preferences();
  private:
  const ::google::protobuf::RepeatedPtrField<::Digit::Prime::PersistentPrefs::PersistentPref>& _internal_preferences() const;
  ::google::protobuf::RepeatedPtrField<::Digit::Prime::PersistentPrefs::PersistentPref>* _internal_mutable_preferences();
  public:
  const ::Digit::Prime::PersistentPrefs::PersistentPref& preferences(int index) const;
  ::Digit::Prime::PersistentPrefs::PersistentPref* add_preferences();
  const ::google::protobuf::RepeatedPtrField< ::Digit::Prime::PersistentPrefs::PersistentPref >&
      preferences() const;
  // @@protoc_insertion_point(class_scope:Digit.Prime.PersistentPrefs.PersistentPrefsData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::Digit::Prime::PersistentPrefs::PersistentPref > preferences_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2ePrime_2ePersistentPrefs_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StringListPrefsData

// repeated string list = 1;
inline int StringListPrefsData::_internal_list_size() const {
  return _internal_list().size();
}
inline int StringListPrefsData::list_size() const {
  return _internal_list_size();
}
inline void StringListPrefsData::clear_list() {
  _internal_mutable_list()->Clear();
}
inline std::string* StringListPrefsData::add_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
  return _s;
}
inline const std::string& StringListPrefsData::list(int index) const {
  // @@protoc_insertion_point(field_get:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
  return _internal_list().Get(index);
}
inline std::string* StringListPrefsData::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
  return _internal_mutable_list()->Mutable(index);
}
inline void StringListPrefsData::set_list(int index, const std::string& value) {
  _internal_mutable_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::set_list(int index, std::string&& value) {
  _internal_mutable_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::set_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::set_list(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::set_list(int index, absl::string_view value) {
  _internal_mutable_list()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::add_list(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::add_list(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::add_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::add_list(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline void StringListPrefsData::add_list(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_list()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringListPrefsData::list() const {
  // @@protoc_insertion_point(field_list:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
  return _internal_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* StringListPrefsData::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:Digit.Prime.PersistentPrefs.StringListPrefsData.list)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
StringListPrefsData::_internal_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
StringListPrefsData::_internal_mutable_list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.list_;
}

// -------------------------------------------------------------------

// PersistentPref

// int64 key = 1;
inline void PersistentPref::clear_key() {
  _impl_.key_ = ::int64_t{0};
}
inline ::int64_t PersistentPref::key() const {
  // @@protoc_insertion_point(field_get:Digit.Prime.PersistentPrefs.PersistentPref.key)
  return _internal_key();
}
inline void PersistentPref::set_key(::int64_t value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:Digit.Prime.PersistentPrefs.PersistentPref.key)
}
inline ::int64_t PersistentPref::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_;
}
inline void PersistentPref::_internal_set_key(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_ = value;
}

// bytes data = 2;
inline void PersistentPref::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& PersistentPref::data() const {
  // @@protoc_insertion_point(field_get:Digit.Prime.PersistentPrefs.PersistentPref.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PersistentPref::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Digit.Prime.PersistentPrefs.PersistentPref.data)
}
inline std::string* PersistentPref::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:Digit.Prime.PersistentPrefs.PersistentPref.data)
  return _s;
}
inline const std::string& PersistentPref::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void PersistentPref::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* PersistentPref::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* PersistentPref::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:Digit.Prime.PersistentPrefs.PersistentPref.data)
  return _impl_.data_.Release();
}
inline void PersistentPref::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Digit.Prime.PersistentPrefs.PersistentPref.data)
}

// -------------------------------------------------------------------

// PersistentPrefsData

// repeated .Digit.Prime.PersistentPrefs.PersistentPref preferences = 2;
inline int PersistentPrefsData::_internal_preferences_size() const {
  return _internal_preferences().size();
}
inline int PersistentPrefsData::preferences_size() const {
  return _internal_preferences_size();
}
inline void PersistentPrefsData::clear_preferences() {
  _internal_mutable_preferences()->Clear();
}
inline ::Digit::Prime::PersistentPrefs::PersistentPref* PersistentPrefsData::mutable_preferences(int index) {
  // @@protoc_insertion_point(field_mutable:Digit.Prime.PersistentPrefs.PersistentPrefsData.preferences)
  return _internal_mutable_preferences()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Digit::Prime::PersistentPrefs::PersistentPref >*
PersistentPrefsData::mutable_preferences() {
  // @@protoc_insertion_point(field_mutable_list:Digit.Prime.PersistentPrefs.PersistentPrefsData.preferences)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_preferences();
}
inline const ::Digit::Prime::PersistentPrefs::PersistentPref& PersistentPrefsData::preferences(int index) const {
  // @@protoc_insertion_point(field_get:Digit.Prime.PersistentPrefs.PersistentPrefsData.preferences)
    return _internal_preferences().Get(index);
}
inline ::Digit::Prime::PersistentPrefs::PersistentPref* PersistentPrefsData::add_preferences() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::Digit::Prime::PersistentPrefs::PersistentPref* _add = _internal_mutable_preferences()->Add();
  // @@protoc_insertion_point(field_add:Digit.Prime.PersistentPrefs.PersistentPrefsData.preferences)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::Digit::Prime::PersistentPrefs::PersistentPref >&
PersistentPrefsData::preferences() const {
  // @@protoc_insertion_point(field_list:Digit.Prime.PersistentPrefs.PersistentPrefsData.preferences)
  return _internal_preferences();
}
inline const ::google::protobuf::RepeatedPtrField<::Digit::Prime::PersistentPrefs::PersistentPref>&
PersistentPrefsData::_internal_preferences() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.preferences_;
}
inline ::google::protobuf::RepeatedPtrField<::Digit::Prime::PersistentPrefs::PersistentPref>*
PersistentPrefsData::_internal_mutable_preferences() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.preferences_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace PersistentPrefs
}  // namespace Prime
}  // namespace Digit


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Digit_2ePrime_2ePersistentPrefs_2eproto_2epb_2eh
