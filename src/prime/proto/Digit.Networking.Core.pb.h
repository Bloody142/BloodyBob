// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Networking.Core.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Digit_2eNetworking_2eCore_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_Digit_2eNetworking_2eCore_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Digit_2eNetworking_2eCore_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Digit_2eNetworking_2eCore_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Digit_2eNetworking_2eCore_2eproto;
namespace Digit {
namespace Networking {
namespace Core {
class CacheMap;
struct CacheMapDefaultTypeInternal;
extern CacheMapDefaultTypeInternal _CacheMap_default_instance_;
class CacheMap_CacheIndexEntry_DoNotUse;
struct CacheMap_CacheIndexEntry_DoNotUseDefaultTypeInternal;
extern CacheMap_CacheIndexEntry_DoNotUseDefaultTypeInternal _CacheMap_CacheIndexEntry_DoNotUse_default_instance_;
}  // namespace Core
}  // namespace Networking
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace Digit {
namespace Networking {
namespace Core {

// ===================================================================


// -------------------------------------------------------------------

class CacheMap_CacheIndexEntry_DoNotUse final : public ::google::protobuf::internal::MapEntry<CacheMap_CacheIndexEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
public:
  typedef ::google::protobuf::internal::MapEntry<CacheMap_CacheIndexEntry_DoNotUse, 
    std::string, std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING> SuperType;
  CacheMap_CacheIndexEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CacheMap_CacheIndexEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit CacheMap_CacheIndexEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CacheMap_CacheIndexEntry_DoNotUse& other);
  static const CacheMap_CacheIndexEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CacheMap_CacheIndexEntry_DoNotUse*>(&_CacheMap_CacheIndexEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "Digit.Networking.Core.CacheMap.CacheIndexEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "Digit.Networking.Core.CacheMap.CacheIndexEntry.value");
 }
  using ::google::protobuf::Message::MergeFrom;
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_Digit_2eNetworking_2eCore_2eproto;
};
// -------------------------------------------------------------------

class CacheMap final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Digit.Networking.Core.CacheMap) */ {
 public:
  inline CacheMap() : CacheMap(nullptr) {}
  ~CacheMap() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CacheMap(::google::protobuf::internal::ConstantInitialized);

  CacheMap(const CacheMap& from);
  CacheMap(CacheMap&& from) noexcept
    : CacheMap() {
    *this = ::std::move(from);
  }

  inline CacheMap& operator=(const CacheMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline CacheMap& operator=(CacheMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CacheMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const CacheMap* internal_default_instance() {
    return reinterpret_cast<const CacheMap*>(
               &_CacheMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CacheMap& a, CacheMap& b) {
    a.Swap(&b);
  }
  inline void Swap(CacheMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CacheMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CacheMap* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CacheMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CacheMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CacheMap& from) {
    CacheMap::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CacheMap* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Digit.Networking.Core.CacheMap";
  }
  protected:
  explicit CacheMap(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kCacheIndexFieldNumber = 1,
  };
  // map<string, string> cacheIndex = 1;
  int cacheindex_size() const;
  private:
  int _internal_cacheindex_size() const;

  public:
  void clear_cacheindex() ;
  const ::google::protobuf::Map<std::string, std::string>& cacheindex() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_cacheindex();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_cacheindex() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_cacheindex();

  public:
  // @@protoc_insertion_point(class_scope:Digit.Networking.Core.CacheMap)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 1, 49, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::MapField<CacheMap_CacheIndexEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        cacheindex_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Digit_2eNetworking_2eCore_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CacheMap

// map<string, string> cacheIndex = 1;
inline int CacheMap::_internal_cacheindex_size() const {
  return _internal_cacheindex().size();
}
inline int CacheMap::cacheindex_size() const {
  return _internal_cacheindex_size();
}
inline void CacheMap::clear_cacheindex() {
  _impl_.cacheindex_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& CacheMap::_internal_cacheindex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cacheindex_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& CacheMap::cacheindex() const {
  // @@protoc_insertion_point(field_map:Digit.Networking.Core.CacheMap.cacheIndex)
  return _internal_cacheindex();
}
inline ::google::protobuf::Map<std::string, std::string>* CacheMap::_internal_mutable_cacheindex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.cacheindex_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* CacheMap::mutable_cacheindex() {
  // @@protoc_insertion_point(field_mutable_map:Digit.Networking.Core.CacheMap.cacheIndex)
  return _internal_mutable_cacheindex();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace Core
}  // namespace Networking
}  // namespace Digit


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_Digit_2eNetworking_2eCore_2eproto_2epb_2eh
