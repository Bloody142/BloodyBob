// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Prime.Missions.proto

#include "Digit.Prime.Missions.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Digit {
namespace Prime {
namespace Missions {
        template <typename>
PROTOBUF_CONSTEXPR ArchivedMissions::ArchivedMissions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.missionids_)*/ {},
      /* _impl_._missionids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct ArchivedMissionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArchivedMissionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArchivedMissionsDefaultTypeInternal() {}
  union {
    ArchivedMissions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArchivedMissionsDefaultTypeInternal _ArchivedMissions_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR FavouritedMissions::FavouritedMissions(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.missionids_)*/ {},
      /* _impl_._missionids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct FavouritedMissionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FavouritedMissionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FavouritedMissionsDefaultTypeInternal() {}
  union {
    FavouritedMissions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FavouritedMissionsDefaultTypeInternal _FavouritedMissions_default_instance_;
}  // namespace Missions
}  // namespace Prime
}  // namespace Digit
static ::_pb::Metadata file_level_metadata_Digit_2ePrime_2eMissions_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Digit_2ePrime_2eMissions_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Digit_2ePrime_2eMissions_2eproto = nullptr;
const ::uint32_t TableStruct_Digit_2ePrime_2eMissions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Missions::ArchivedMissions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Missions::ArchivedMissions, _impl_.missionids_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Missions::FavouritedMissions, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Prime::Missions::FavouritedMissions, _impl_.missionids_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Digit::Prime::Missions::ArchivedMissions)},
        {9, -1, -1, sizeof(::Digit::Prime::Missions::FavouritedMissions)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::Digit::Prime::Missions::_ArchivedMissions_default_instance_._instance,
    &::Digit::Prime::Missions::_FavouritedMissions_default_instance_._instance,
};
const char descriptor_table_protodef_Digit_2ePrime_2eMissions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\032Digit.Prime.Missions.proto\022\024Digit.Prim"
    "e.Missions\"&\n\020ArchivedMissions\022\022\n\nmissio"
    "nIds\030\001 \003(\003\"(\n\022FavouritedMissions\022\022\n\nmiss"
    "ionIds\030\001 \003(\003b\006proto3"
};
static ::absl::once_flag descriptor_table_Digit_2ePrime_2eMissions_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Digit_2ePrime_2eMissions_2eproto = {
    false,
    false,
    140,
    descriptor_table_protodef_Digit_2ePrime_2eMissions_2eproto,
    "Digit.Prime.Missions.proto",
    &descriptor_table_Digit_2ePrime_2eMissions_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_Digit_2ePrime_2eMissions_2eproto::offsets,
    file_level_metadata_Digit_2ePrime_2eMissions_2eproto,
    file_level_enum_descriptors_Digit_2ePrime_2eMissions_2eproto,
    file_level_service_descriptors_Digit_2ePrime_2eMissions_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Digit_2ePrime_2eMissions_2eproto_getter() {
  return &descriptor_table_Digit_2ePrime_2eMissions_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Digit_2ePrime_2eMissions_2eproto(&descriptor_table_Digit_2ePrime_2eMissions_2eproto);
namespace Digit {
namespace Prime {
namespace Missions {
// ===================================================================

class ArchivedMissions::_Internal {
 public:
};

ArchivedMissions::ArchivedMissions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Prime.Missions.ArchivedMissions)
}
ArchivedMissions::ArchivedMissions(const ArchivedMissions& from) : ::google::protobuf::Message() {
  ArchivedMissions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.missionids_){from._impl_.missionids_},
      /* _impl_._missionids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Digit.Prime.Missions.ArchivedMissions)
}
inline void ArchivedMissions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.missionids_){arena},
      /* _impl_._missionids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
ArchivedMissions::~ArchivedMissions() {
  // @@protoc_insertion_point(destructor:Digit.Prime.Missions.ArchivedMissions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ArchivedMissions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.missionids_.~RepeatedField();
}
void ArchivedMissions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void ArchivedMissions::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Prime.Missions.ArchivedMissions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_missionids()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ArchivedMissions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ArchivedMissions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ArchivedMissions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int64 missionIds = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ArchivedMissions, _impl_.missionids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 missionIds = 1;
    {PROTOBUF_FIELD_OFFSET(ArchivedMissions, _impl_.missionids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* ArchivedMissions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Prime.Missions.ArchivedMissions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 missionIds = 1;
  {
    int byte_size = _impl_._missionids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(1, _internal_missionids(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Prime.Missions.ArchivedMissions)
  return target;
}

::size_t ArchivedMissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Prime.Missions.ArchivedMissions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 missionIds = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_missionids())
    ;
    _impl_._missionids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ArchivedMissions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    ArchivedMissions::MergeImpl
};
const ::google::protobuf::Message::ClassData*ArchivedMissions::GetClassData() const { return &_class_data_; }


void ArchivedMissions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ArchivedMissions*>(&to_msg);
  auto& from = static_cast<const ArchivedMissions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Prime.Missions.ArchivedMissions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_missionids()->MergeFrom(from._internal_missionids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ArchivedMissions::CopyFrom(const ArchivedMissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Prime.Missions.ArchivedMissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ArchivedMissions::IsInitialized() const {
  return true;
}

void ArchivedMissions::InternalSwap(ArchivedMissions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.missionids_.InternalSwap(&other->_impl_.missionids_);
}

::google::protobuf::Metadata ArchivedMissions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2ePrime_2eMissions_2eproto_getter, &descriptor_table_Digit_2ePrime_2eMissions_2eproto_once,
      file_level_metadata_Digit_2ePrime_2eMissions_2eproto[0]);
}
// ===================================================================

class FavouritedMissions::_Internal {
 public:
};

FavouritedMissions::FavouritedMissions(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Prime.Missions.FavouritedMissions)
}
FavouritedMissions::FavouritedMissions(const FavouritedMissions& from) : ::google::protobuf::Message() {
  FavouritedMissions* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.missionids_){from._impl_.missionids_},
      /* _impl_._missionids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Digit.Prime.Missions.FavouritedMissions)
}
inline void FavouritedMissions::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.missionids_){arena},
      /* _impl_._missionids_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
FavouritedMissions::~FavouritedMissions() {
  // @@protoc_insertion_point(destructor:Digit.Prime.Missions.FavouritedMissions)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FavouritedMissions::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.missionids_.~RepeatedField();
}
void FavouritedMissions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void FavouritedMissions::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Prime.Missions.FavouritedMissions)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_missionids()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FavouritedMissions::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> FavouritedMissions::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_FavouritedMissions_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int64 missionIds = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FavouritedMissions, _impl_.missionids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 missionIds = 1;
    {PROTOBUF_FIELD_OFFSET(FavouritedMissions, _impl_.missionids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* FavouritedMissions::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Prime.Missions.FavouritedMissions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 missionIds = 1;
  {
    int byte_size = _impl_._missionids_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(1, _internal_missionids(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Prime.Missions.FavouritedMissions)
  return target;
}

::size_t FavouritedMissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Prime.Missions.FavouritedMissions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 missionIds = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_missionids())
    ;
    _impl_._missionids_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FavouritedMissions::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    FavouritedMissions::MergeImpl
};
const ::google::protobuf::Message::ClassData*FavouritedMissions::GetClassData() const { return &_class_data_; }


void FavouritedMissions::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FavouritedMissions*>(&to_msg);
  auto& from = static_cast<const FavouritedMissions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Prime.Missions.FavouritedMissions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_missionids()->MergeFrom(from._internal_missionids());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FavouritedMissions::CopyFrom(const FavouritedMissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Prime.Missions.FavouritedMissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FavouritedMissions::IsInitialized() const {
  return true;
}

void FavouritedMissions::InternalSwap(FavouritedMissions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.missionids_.InternalSwap(&other->_impl_.missionids_);
}

::google::protobuf::Metadata FavouritedMissions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2ePrime_2eMissions_2eproto_getter, &descriptor_table_Digit_2ePrime_2eMissions_2eproto_once,
      file_level_metadata_Digit_2ePrime_2eMissions_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Missions
}  // namespace Prime
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
