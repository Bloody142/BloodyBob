// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Client.Localization.proto

#include "Digit.Client.Localization.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Digit {
namespace Client {
namespace Localization {
      template <typename>
PROTOBUF_CONSTEXPR CachedCategory_TranslationsEntry_DoNotUse::CachedCategory_TranslationsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CachedCategory_TranslationsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CachedCategory_TranslationsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CachedCategory_TranslationsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CachedCategory_TranslationsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CachedCategory_TranslationsEntry_DoNotUseDefaultTypeInternal _CachedCategory_TranslationsEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CachedCategory::CachedCategory(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /* decltype(_impl_.translations_) */ {},
      /*decltype(_impl_.info_)*/ nullptr,
    } {}
struct CachedCategoryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CachedCategoryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CachedCategoryDefaultTypeInternal() {}
  union {
    CachedCategory _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CachedCategoryDefaultTypeInternal _CachedCategory_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CachedTranslation::CachedTranslation(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.text_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.key_)*/ ::int64_t{0},
      /*decltype(_impl_.status_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CachedTranslationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CachedTranslationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CachedTranslationDefaultTypeInternal() {}
  union {
    CachedTranslation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CachedTranslationDefaultTypeInternal _CachedTranslation_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CategoryInfo::CategoryInfo(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.timestamp_)*/ nullptr,
      /*decltype(_impl_.id_)*/ ::int64_t{0},
      /*decltype(_impl_.dynamic_)*/ false,
    } {}
struct CategoryInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CategoryInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CategoryInfoDefaultTypeInternal() {}
  union {
    CategoryInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CategoryInfoDefaultTypeInternal _CategoryInfo_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR LocalizationCacheData_CategoriesEntry_DoNotUse::LocalizationCacheData_CategoriesEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct LocalizationCacheData_CategoriesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationCacheData_CategoriesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationCacheData_CategoriesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    LocalizationCacheData_CategoriesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationCacheData_CategoriesEntry_DoNotUseDefaultTypeInternal _LocalizationCacheData_CategoriesEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LocalizationCacheData::LocalizationCacheData(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.categories_) */ {},
      /*decltype(_impl_.language_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct LocalizationCacheDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LocalizationCacheDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LocalizationCacheDataDefaultTypeInternal() {}
  union {
    LocalizationCacheData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LocalizationCacheDataDefaultTypeInternal _LocalizationCacheData_default_instance_;
}  // namespace Localization
}  // namespace Client
}  // namespace Digit
static ::_pb::Metadata file_level_metadata_Digit_2eClient_2eLocalization_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Digit_2eClient_2eLocalization_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Digit_2eClient_2eLocalization_2eproto = nullptr;
const ::uint32_t TableStruct_Digit_2eClient_2eLocalization_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory_TranslationsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory_TranslationsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory_TranslationsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory_TranslationsEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory, _impl_.info_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedCategory, _impl_.translations_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedTranslation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedTranslation, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedTranslation, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedTranslation, _impl_.text_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CachedTranslation, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CategoryInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CategoryInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CategoryInfo, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CategoryInfo, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CategoryInfo, _impl_.dynamic_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::CategoryInfo, _impl_.timestamp_),
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::LocalizationCacheData_CategoriesEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::LocalizationCacheData_CategoriesEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::LocalizationCacheData_CategoriesEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::LocalizationCacheData_CategoriesEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::LocalizationCacheData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::LocalizationCacheData, _impl_.language_),
    PROTOBUF_FIELD_OFFSET(::Digit::Client::Localization::LocalizationCacheData, _impl_.categories_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Digit::Client::Localization::CachedCategory_TranslationsEntry_DoNotUse)},
        {12, 22, -1, sizeof(::Digit::Client::Localization::CachedCategory)},
        {24, -1, -1, sizeof(::Digit::Client::Localization::CachedTranslation)},
        {36, 48, -1, sizeof(::Digit::Client::Localization::CategoryInfo)},
        {52, 62, -1, sizeof(::Digit::Client::Localization::LocalizationCacheData_CategoriesEntry_DoNotUse)},
        {64, -1, -1, sizeof(::Digit::Client::Localization::LocalizationCacheData)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::Digit::Client::Localization::_CachedCategory_TranslationsEntry_DoNotUse_default_instance_._instance,
    &::Digit::Client::Localization::_CachedCategory_default_instance_._instance,
    &::Digit::Client::Localization::_CachedTranslation_default_instance_._instance,
    &::Digit::Client::Localization::_CategoryInfo_default_instance_._instance,
    &::Digit::Client::Localization::_LocalizationCacheData_CategoriesEntry_DoNotUse_default_instance_._instance,
    &::Digit::Client::Localization::_LocalizationCacheData_default_instance_._instance,
};
const char descriptor_table_protodef_Digit_2eClient_2eLocalization_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037Digit.Client.Localization.proto\022\031Digit"
    ".Client.Localization\032\037google/protobuf/ti"
    "mestamp.proto\"\375\001\n\016CachedCategory\0225\n\004info"
    "\030\001 \001(\0132\'.Digit.Client.Localization.Categ"
    "oryInfo\022Q\n\014translations\030\002 \003(\0132;.Digit.Cl"
    "ient.Localization.CachedCategory.Transla"
    "tionsEntry\032a\n\021TranslationsEntry\022\013\n\003key\030\001"
    " \001(\003\022;\n\005value\030\002 \001(\0132,.Digit.Client.Local"
    "ization.CachedTranslation:\0028\001\"v\n\021CachedT"
    "ranslation\022\n\n\002id\030\001 \001(\t\022\013\n\003key\030\002 \001(\003\022\014\n\004t"
    "ext\030\003 \001(\t\022:\n\006status\030\004 \001(\0162*.Digit.Client"
    ".Localization.ContentIdStatus\"h\n\014Categor"
    "yInfo\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\017\n\007dynam"
    "ic\030\003 \001(\010\022-\n\ttimestamp\030\004 \001(\0132\032.google.pro"
    "tobuf.Timestamp\"\335\001\n\025LocalizationCacheDat"
    "a\022\020\n\010language\030\001 \001(\t\022T\n\ncategories\030\002 \003(\0132"
    "@.Digit.Client.Localization.Localization"
    "CacheData.CategoriesEntry\032\\\n\017CategoriesE"
    "ntry\022\013\n\003key\030\001 \001(\003\0228\n\005value\030\002 \001(\0132).Digit"
    ".Client.Localization.CachedCategory:\0028\001*"
    "m\n\017ContentIdStatus\022\026\n\022CONTENTIDSTATUS_OK"
    "\020\000\022!\n\035CONTENTIDSTATUS_REQUESTFAILED\020\001\022\037\n"
    "\033CONTENTIDSTATUS_MISSINGDATA\020\002b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Digit_2eClient_2eLocalization_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_Digit_2eClient_2eLocalization_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Digit_2eClient_2eLocalization_2eproto = {
    false,
    false,
    918,
    descriptor_table_protodef_Digit_2eClient_2eLocalization_2eproto,
    "Digit.Client.Localization.proto",
    &descriptor_table_Digit_2eClient_2eLocalization_2eproto_once,
    descriptor_table_Digit_2eClient_2eLocalization_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_Digit_2eClient_2eLocalization_2eproto::offsets,
    file_level_metadata_Digit_2eClient_2eLocalization_2eproto,
    file_level_enum_descriptors_Digit_2eClient_2eLocalization_2eproto,
    file_level_service_descriptors_Digit_2eClient_2eLocalization_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Digit_2eClient_2eLocalization_2eproto_getter() {
  return &descriptor_table_Digit_2eClient_2eLocalization_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Digit_2eClient_2eLocalization_2eproto(&descriptor_table_Digit_2eClient_2eLocalization_2eproto);
namespace Digit {
namespace Client {
namespace Localization {
const ::google::protobuf::EnumDescriptor* ContentIdStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_Digit_2eClient_2eLocalization_2eproto);
  return file_level_enum_descriptors_Digit_2eClient_2eLocalization_2eproto[0];
}
bool ContentIdStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
// ===================================================================

CachedCategory_TranslationsEntry_DoNotUse::CachedCategory_TranslationsEntry_DoNotUse() {}
CachedCategory_TranslationsEntry_DoNotUse::CachedCategory_TranslationsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void CachedCategory_TranslationsEntry_DoNotUse::MergeFrom(const CachedCategory_TranslationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CachedCategory_TranslationsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eClient_2eLocalization_2eproto_getter, &descriptor_table_Digit_2eClient_2eLocalization_2eproto_once,
      file_level_metadata_Digit_2eClient_2eLocalization_2eproto[0]);
}
// ===================================================================

class CachedCategory::_Internal {
 public:
  using HasBits = decltype(std::declval<CachedCategory>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CachedCategory, _impl_._has_bits_);
  static const ::Digit::Client::Localization::CategoryInfo& info(const CachedCategory* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::Digit::Client::Localization::CategoryInfo& CachedCategory::_Internal::info(const CachedCategory* msg) {
  return *msg->_impl_.info_;
}
CachedCategory::CachedCategory(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Client.Localization.CachedCategory)
}
CachedCategory::CachedCategory(const CachedCategory& from) : ::google::protobuf::Message() {
  CachedCategory* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      /* decltype(_impl_.translations_) */ {},
      decltype(_impl_.info_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.translations_.MergeFrom(from._impl_.translations_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.info_ = new ::Digit::Client::Localization::CategoryInfo(*from._impl_.info_);
  }

  // @@protoc_insertion_point(copy_constructor:Digit.Client.Localization.CachedCategory)
}
inline void CachedCategory::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      /* decltype(_impl_.translations_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      decltype(_impl_.info_){nullptr},
  };
}
CachedCategory::~CachedCategory() {
  // @@protoc_insertion_point(destructor:Digit.Client.Localization.CachedCategory)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CachedCategory::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.translations_.~MapField();
  if (this != internal_default_instance()) delete _impl_.info_;
}
void CachedCategory::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CachedCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Client.Localization.CachedCategory)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.translations_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CachedCategory::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 3, 0, 2> CachedCategory::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CachedCategory, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CachedCategory_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Digit.Client.Localization.CategoryInfo info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CachedCategory, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Digit.Client.Localization.CategoryInfo info = 1;
    {PROTOBUF_FIELD_OFFSET(CachedCategory, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<int64, .Digit.Client.Localization.CachedTranslation> translations = 2;
    {PROTOBUF_FIELD_OFFSET(CachedCategory, _impl_.translations_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Digit::Client::Localization::CategoryInfo>()},
    {::_pbi::TcParser::GetMapAuxInfo<decltype(CachedCategory()._impl_.translations_)>(1, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::Digit::Client::Localization::CachedTranslation>},
  }}, {{
  }},
};

::uint8_t* CachedCategory::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Client.Localization.CachedCategory)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .Digit.Client.Localization.CategoryInfo info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  // map<int64, .Digit.Client.Localization.CachedTranslation> translations = 2;
  if (!_internal_translations().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::Digit::Client::Localization::CachedTranslation>;
    using WireHelper = CachedCategory_TranslationsEntry_DoNotUse::Funcs;
    const auto& field = _internal_translations();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Client.Localization.CachedCategory)
  return target;
}

::size_t CachedCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Client.Localization.CachedCategory)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .Digit.Client.Localization.CachedTranslation> translations = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_translations_size());
  for (const auto& entry : _internal_translations()) {
    total_size += CachedCategory_TranslationsEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // .Digit.Client.Localization.CategoryInfo info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CachedCategory::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CachedCategory::MergeImpl
};
const ::google::protobuf::Message::ClassData*CachedCategory::GetClassData() const { return &_class_data_; }


void CachedCategory::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CachedCategory*>(&to_msg);
  auto& from = static_cast<const CachedCategory&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Client.Localization.CachedCategory)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.translations_.MergeFrom(from._impl_.translations_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info()->::Digit::Client::Localization::CategoryInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CachedCategory::CopyFrom(const CachedCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Client.Localization.CachedCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CachedCategory::IsInitialized() const {
  return true;
}

void CachedCategory::InternalSwap(CachedCategory* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.translations_.InternalSwap(&other->_impl_.translations_);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata CachedCategory::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eClient_2eLocalization_2eproto_getter, &descriptor_table_Digit_2eClient_2eLocalization_2eproto_once,
      file_level_metadata_Digit_2eClient_2eLocalization_2eproto[1]);
}
// ===================================================================

class CachedTranslation::_Internal {
 public:
};

CachedTranslation::CachedTranslation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Client.Localization.CachedTranslation)
}
CachedTranslation::CachedTranslation(const CachedTranslation& from) : ::google::protobuf::Message() {
  CachedTranslation* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.text_){},
      decltype(_impl_.key_){},
      decltype(_impl_.status_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.key_, &from._impl_.key_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.status_) -
    reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.status_));

  // @@protoc_insertion_point(copy_constructor:Digit.Client.Localization.CachedTranslation)
}
inline void CachedTranslation::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){},
      decltype(_impl_.text_){},
      decltype(_impl_.key_){::int64_t{0}},
      decltype(_impl_.status_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.text_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CachedTranslation::~CachedTranslation() {
  // @@protoc_insertion_point(destructor:Digit.Client.Localization.CachedTranslation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CachedTranslation::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.text_.Destroy();
}
void CachedTranslation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CachedTranslation::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Client.Localization.CachedTranslation)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.text_.ClearToEmpty();
  ::memset(&_impl_.key_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.key_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CachedTranslation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 58, 2> CachedTranslation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CachedTranslation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Digit.Client.Localization.ContentIdStatus status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CachedTranslation, _impl_.status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.status_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.id_)}},
    // int64 key = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CachedTranslation, _impl_.key_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.key_)}},
    // string text = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 key = 2;
    {PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string text = 3;
    {PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Digit.Client.Localization.ContentIdStatus status = 4;
    {PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\53\2\0\4\0\0\0\0"
    "Digit.Client.Localization.CachedTranslation"
    "id"
    "text"
  }},
};

::uint8_t* CachedTranslation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Client.Localization.CachedTranslation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Client.Localization.CachedTranslation.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 key = 2;
  if (this->_internal_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_key(), target);
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Client.Localization.CachedTranslation.text");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .Digit.Client.Localization.ContentIdStatus status = 4;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Client.Localization.CachedTranslation)
  return target;
}

::size_t CachedTranslation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Client.Localization.CachedTranslation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string text = 3;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  // int64 key = 2;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_key());
  }

  // .Digit.Client.Localization.ContentIdStatus status = 4;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CachedTranslation::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CachedTranslation::MergeImpl
};
const ::google::protobuf::Message::ClassData*CachedTranslation::GetClassData() const { return &_class_data_; }


void CachedTranslation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CachedTranslation*>(&to_msg);
  auto& from = static_cast<const CachedTranslation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Client.Localization.CachedTranslation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CachedTranslation::CopyFrom(const CachedTranslation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Client.Localization.CachedTranslation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CachedTranslation::IsInitialized() const {
  return true;
}

void CachedTranslation::InternalSwap(CachedTranslation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, lhs_arena,
                                       &other->_impl_.text_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.status_)
      + sizeof(CachedTranslation::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CachedTranslation, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::google::protobuf::Metadata CachedTranslation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eClient_2eLocalization_2eproto_getter, &descriptor_table_Digit_2eClient_2eLocalization_2eproto_once,
      file_level_metadata_Digit_2eClient_2eLocalization_2eproto[2]);
}
// ===================================================================

class CategoryInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CategoryInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& timestamp(const CategoryInfo* msg);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& CategoryInfo::_Internal::timestamp(const CategoryInfo* msg) {
  return *msg->_impl_.timestamp_;
}
void CategoryInfo::clear_timestamp() {
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CategoryInfo::CategoryInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Client.Localization.CategoryInfo)
}
CategoryInfo::CategoryInfo(const CategoryInfo& from) : ::google::protobuf::Message() {
  CategoryInfo* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.timestamp_){nullptr},
      decltype(_impl_.id_){},
      decltype(_impl_.dynamic_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.timestamp_ = new ::google::protobuf::Timestamp(*from._impl_.timestamp_);
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.dynamic_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.dynamic_));

  // @@protoc_insertion_point(copy_constructor:Digit.Client.Localization.CategoryInfo)
}
inline void CategoryInfo::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.name_){},
      decltype(_impl_.timestamp_){nullptr},
      decltype(_impl_.id_){::int64_t{0}},
      decltype(_impl_.dynamic_){false},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
CategoryInfo::~CategoryInfo() {
  // @@protoc_insertion_point(destructor:Digit.Client.Localization.CategoryInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CategoryInfo::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.timestamp_;
}
void CategoryInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CategoryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Client.Localization.CategoryInfo)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dynamic_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.dynamic_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CategoryInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 51, 2> CategoryInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CategoryInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp timestamp = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.timestamp_)}},
    // int64 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CategoryInfo, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.name_)}},
    // bool dynamic = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CategoryInfo, _impl_.dynamic_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.dynamic_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 id = 1;
    {PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool dynamic = 3;
    {PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.dynamic_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .google.protobuf.Timestamp timestamp = 4;
    {PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\46\0\4\0\0\0\0\0"
    "Digit.Client.Localization.CategoryInfo"
    "name"
  }},
};

::uint8_t* CategoryInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Client.Localization.CategoryInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Client.Localization.CategoryInfo.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // bool dynamic = 3;
  if (this->_internal_dynamic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_dynamic(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp timestamp = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::timestamp(this),
        _Internal::timestamp(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Client.Localization.CategoryInfo)
  return target;
}

::size_t CategoryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Client.Localization.CategoryInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .google.protobuf.Timestamp timestamp = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.timestamp_);
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_id());
  }

  // bool dynamic = 3;
  if (this->_internal_dynamic() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CategoryInfo::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CategoryInfo::MergeImpl
};
const ::google::protobuf::Message::ClassData*CategoryInfo::GetClassData() const { return &_class_data_; }


void CategoryInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CategoryInfo*>(&to_msg);
  auto& from = static_cast<const CategoryInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Client.Localization.CategoryInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_timestamp());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_dynamic() != 0) {
    _this->_internal_set_dynamic(from._internal_dynamic());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CategoryInfo::CopyFrom(const CategoryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Client.Localization.CategoryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CategoryInfo::IsInitialized() const {
  return true;
}

void CategoryInfo::InternalSwap(CategoryInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.dynamic_)
      + sizeof(CategoryInfo::_impl_.dynamic_)
      - PROTOBUF_FIELD_OFFSET(CategoryInfo, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata CategoryInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eClient_2eLocalization_2eproto_getter, &descriptor_table_Digit_2eClient_2eLocalization_2eproto_once,
      file_level_metadata_Digit_2eClient_2eLocalization_2eproto[3]);
}
// ===================================================================

LocalizationCacheData_CategoriesEntry_DoNotUse::LocalizationCacheData_CategoriesEntry_DoNotUse() {}
LocalizationCacheData_CategoriesEntry_DoNotUse::LocalizationCacheData_CategoriesEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void LocalizationCacheData_CategoriesEntry_DoNotUse::MergeFrom(const LocalizationCacheData_CategoriesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata LocalizationCacheData_CategoriesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eClient_2eLocalization_2eproto_getter, &descriptor_table_Digit_2eClient_2eLocalization_2eproto_once,
      file_level_metadata_Digit_2eClient_2eLocalization_2eproto[4]);
}
// ===================================================================

class LocalizationCacheData::_Internal {
 public:
};

LocalizationCacheData::LocalizationCacheData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Client.Localization.LocalizationCacheData)
}
LocalizationCacheData::LocalizationCacheData(const LocalizationCacheData& from) : ::google::protobuf::Message() {
  LocalizationCacheData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.categories_) */ {},
      decltype(_impl_.language_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.categories_.MergeFrom(from._impl_.categories_);
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.language_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language().empty()) {
    _this->_impl_.language_.Set(from._internal_language(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:Digit.Client.Localization.LocalizationCacheData)
}
inline void LocalizationCacheData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.categories_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      decltype(_impl_.language_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.language_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.language_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
LocalizationCacheData::~LocalizationCacheData() {
  // @@protoc_insertion_point(destructor:Digit.Client.Localization.LocalizationCacheData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LocalizationCacheData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.categories_.~MapField();
  _impl_.language_.Destroy();
}
void LocalizationCacheData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LocalizationCacheData::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Client.Localization.LocalizationCacheData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.categories_.Clear();
  _impl_.language_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LocalizationCacheData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 64, 2> LocalizationCacheData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_LocalizationCacheData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string language = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LocalizationCacheData, _impl_.language_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string language = 1;
    {PROTOBUF_FIELD_OFFSET(LocalizationCacheData, _impl_.language_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<int64, .Digit.Client.Localization.CachedCategory> categories = 2;
    {PROTOBUF_FIELD_OFFSET(LocalizationCacheData, _impl_.categories_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(LocalizationCacheData()._impl_.categories_)>(1, 0, 0)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::Digit::Client::Localization::CachedCategory>},
  }}, {{
    "\57\10\0\0\0\0\0\0"
    "Digit.Client.Localization.LocalizationCacheData"
    "language"
  }},
};

::uint8_t* LocalizationCacheData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Client.Localization.LocalizationCacheData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string language = 1;
  if (!this->_internal_language().empty()) {
    const std::string& _s = this->_internal_language();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Client.Localization.LocalizationCacheData.language");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<int64, .Digit.Client.Localization.CachedCategory> categories = 2;
  if (!_internal_categories().empty()) {
    using MapType = ::google::protobuf::Map<::int64_t, ::Digit::Client::Localization::CachedCategory>;
    using WireHelper = LocalizationCacheData_CategoriesEntry_DoNotUse::Funcs;
    const auto& field = _internal_categories();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterFlat<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Client.Localization.LocalizationCacheData)
  return target;
}

::size_t LocalizationCacheData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Client.Localization.LocalizationCacheData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int64, .Digit.Client.Localization.CachedCategory> categories = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_categories_size());
  for (const auto& entry : _internal_categories()) {
    total_size += LocalizationCacheData_CategoriesEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  // string language = 1;
  if (!this->_internal_language().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LocalizationCacheData::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LocalizationCacheData::MergeImpl
};
const ::google::protobuf::Message::ClassData*LocalizationCacheData::GetClassData() const { return &_class_data_; }


void LocalizationCacheData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LocalizationCacheData*>(&to_msg);
  auto& from = static_cast<const LocalizationCacheData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Client.Localization.LocalizationCacheData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.categories_.MergeFrom(from._impl_.categories_);
  if (!from._internal_language().empty()) {
    _this->_internal_set_language(from._internal_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LocalizationCacheData::CopyFrom(const LocalizationCacheData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Client.Localization.LocalizationCacheData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LocalizationCacheData::IsInitialized() const {
  return true;
}

void LocalizationCacheData::InternalSwap(LocalizationCacheData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.categories_.InternalSwap(&other->_impl_.categories_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.language_, lhs_arena,
                                       &other->_impl_.language_, rhs_arena);
}

::google::protobuf::Metadata LocalizationCacheData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eClient_2eLocalization_2eproto_getter, &descriptor_table_Digit_2eClient_2eLocalization_2eproto_once,
      file_level_metadata_Digit_2eClient_2eLocalization_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Localization
}  // namespace Client
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
