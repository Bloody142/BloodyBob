// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Prime.PersistentPrefs.proto

#include "Digit.Prime.PersistentPrefs.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/io/zero_copy_stream_impl_lite.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Digit {
namespace Prime {
namespace PersistentPrefs {
        template <typename>
PROTOBUF_CONSTEXPR StringListPrefsData::StringListPrefsData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.list_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct StringListPrefsDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringListPrefsDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringListPrefsDataDefaultTypeInternal() {}
  union {
    StringListPrefsData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringListPrefsDataDefaultTypeInternal _StringListPrefsData_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PersistentPref::PersistentPref(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.key_)*/ ::int64_t{0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PersistentPrefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PersistentPrefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PersistentPrefDefaultTypeInternal() {}
  union {
    PersistentPref _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PersistentPrefDefaultTypeInternal _PersistentPref_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR PersistentPrefsData::PersistentPrefsData(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.preferences_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct PersistentPrefsDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PersistentPrefsDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PersistentPrefsDataDefaultTypeInternal() {}
  union {
    PersistentPrefsData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PersistentPrefsDataDefaultTypeInternal _PersistentPrefsData_default_instance_;
}  // namespace PersistentPrefs
}  // namespace Prime
}  // namespace Digit
namespace Digit {
namespace Prime {
namespace PersistentPrefs {
// ===================================================================

class StringListPrefsData::_Internal {
 public:
};

StringListPrefsData::StringListPrefsData(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Prime.PersistentPrefs.StringListPrefsData)
}
StringListPrefsData::StringListPrefsData(const StringListPrefsData& from) : ::google::protobuf::MessageLite() {
  StringListPrefsData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.list_){from._impl_.list_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Digit.Prime.PersistentPrefs.StringListPrefsData)
}
inline void StringListPrefsData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.list_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
StringListPrefsData::~StringListPrefsData() {
  // @@protoc_insertion_point(destructor:Digit.Prime.PersistentPrefs.StringListPrefsData)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void StringListPrefsData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_list()->~RepeatedPtrField();
}
void StringListPrefsData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void StringListPrefsData::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Prime.PersistentPrefs.StringListPrefsData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_list()->Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* StringListPrefsData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2> StringListPrefsData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StringListPrefsData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated string list = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StringListPrefsData, _impl_.list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string list = 1;
    {PROTOBUF_FIELD_OFFSET(StringListPrefsData, _impl_.list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\57\4\0\0\0\0\0\0"
    "Digit.Prime.PersistentPrefs.StringListPrefsData"
    "list"
  }},
};

::uint8_t* StringListPrefsData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Prime.PersistentPrefs.StringListPrefsData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string list = 1;
  for (int i = 0, n = this->_internal_list_size(); i < n; ++i) {
    const auto& s = this->_internal_list().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Prime.PersistentPrefs.StringListPrefsData.list");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Prime.PersistentPrefs.StringListPrefsData)
  return target;
}

::size_t StringListPrefsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Prime.PersistentPrefs.StringListPrefsData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string list = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_list().size());
  for (int i = 0, n = _internal_list().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_list().Get(i));
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringListPrefsData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const StringListPrefsData*>(
      &from));
}

void StringListPrefsData::MergeFrom(const StringListPrefsData& from) {
  StringListPrefsData* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Prime.PersistentPrefs.StringListPrefsData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_list()->MergeFrom(from._internal_list());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void StringListPrefsData::CopyFrom(const StringListPrefsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Prime.PersistentPrefs.StringListPrefsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool StringListPrefsData::IsInitialized() const {
  return true;
}

void StringListPrefsData::InternalSwap(StringListPrefsData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.list_.InternalSwap(&other->_impl_.list_);
}

std::string StringListPrefsData::GetTypeName() const {
  return "Digit.Prime.PersistentPrefs.StringListPrefsData";
}

// ===================================================================

class PersistentPref::_Internal {
 public:
};

PersistentPref::PersistentPref(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Prime.PersistentPrefs.PersistentPref)
}
PersistentPref::PersistentPref(const PersistentPref& from) : ::google::protobuf::MessageLite() {
  PersistentPref* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){},
      decltype(_impl_.key_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  _this->_impl_.key_ = from._impl_.key_;

  // @@protoc_insertion_point(copy_constructor:Digit.Prime.PersistentPrefs.PersistentPref)
}
inline void PersistentPref::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){},
      decltype(_impl_.key_){::int64_t{0}},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
PersistentPref::~PersistentPref() {
  // @@protoc_insertion_point(destructor:Digit.Prime.PersistentPrefs.PersistentPref)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void PersistentPref::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.Destroy();
}
void PersistentPref::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PersistentPref::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Prime.PersistentPrefs.PersistentPref)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _impl_.key_ = ::int64_t{0};
  _internal_metadata_.Clear<std::string>();
}

const char* PersistentPref::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PersistentPref::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PersistentPref_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // bytes data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PersistentPref, _impl_.data_)}},
    // int64 key = 1;
    {::_pbi::TcParser::FastV64S1,
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PersistentPref, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 key = 1;
    {PROTOBUF_FIELD_OFFSET(PersistentPref, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes data = 2;
    {PROTOBUF_FIELD_OFFSET(PersistentPref, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PersistentPref::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Prime.PersistentPrefs.PersistentPref)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_key(), target);
  }

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Prime.PersistentPrefs.PersistentPref)
  return target;
}

::size_t PersistentPref::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Prime.PersistentPrefs.PersistentPref)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 2;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // int64 key = 1;
  if (this->_internal_key() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_key());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PersistentPref::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const PersistentPref*>(
      &from));
}

void PersistentPref::MergeFrom(const PersistentPref& from) {
  PersistentPref* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Prime.PersistentPrefs.PersistentPref)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_key() != 0) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void PersistentPref::CopyFrom(const PersistentPref& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Prime.PersistentPrefs.PersistentPref)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PersistentPref::IsInitialized() const {
  return true;
}

void PersistentPref::InternalSwap(PersistentPref* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
        swap(_impl_.key_, other->_impl_.key_);
}

std::string PersistentPref::GetTypeName() const {
  return "Digit.Prime.PersistentPrefs.PersistentPref";
}

// ===================================================================

class PersistentPrefsData::_Internal {
 public:
};

PersistentPrefsData::PersistentPrefsData(::google::protobuf::Arena* arena)
    : ::google::protobuf::MessageLite(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Prime.PersistentPrefs.PersistentPrefsData)
}
PersistentPrefsData::PersistentPrefsData(const PersistentPrefsData& from) : ::google::protobuf::MessageLite() {
  PersistentPrefsData* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.preferences_){from._impl_.preferences_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<std::string>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Digit.Prime.PersistentPrefs.PersistentPrefsData)
}
inline void PersistentPrefsData::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.preferences_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
PersistentPrefsData::~PersistentPrefsData() {
  // @@protoc_insertion_point(destructor:Digit.Prime.PersistentPrefs.PersistentPrefsData)
  _internal_metadata_.Delete<std::string>();
  SharedDtor();
}
inline void PersistentPrefsData::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.preferences_.~RepeatedPtrField();
}
void PersistentPrefsData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void PersistentPrefsData::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Prime.PersistentPrefs.PersistentPrefsData)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_preferences()->Clear();
  _internal_metadata_.Clear<std::string>();
}

const char* PersistentPrefsData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PersistentPrefsData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PersistentPrefsData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallbackLite,  // fallback
  }, {{
    // repeated .Digit.Prime.PersistentPrefs.PersistentPref preferences = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PersistentPrefsData, _impl_.preferences_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Digit.Prime.PersistentPrefs.PersistentPref preferences = 2;
    {PROTOBUF_FIELD_OFFSET(PersistentPrefsData, _impl_.preferences_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Digit::Prime::PersistentPrefs::PersistentPref>()},
  }}, {{
  }},
};

::uint8_t* PersistentPrefsData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Prime.PersistentPrefs.PersistentPrefsData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .Digit.Prime.PersistentPrefs.PersistentPref preferences = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_preferences_size()); i < n; i++) {
    const auto& repfield = this->_internal_preferences().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = stream->WriteRaw(
        _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).data(),
        static_cast<int>(_internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Prime.PersistentPrefs.PersistentPrefsData)
  return target;
}

::size_t PersistentPrefsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Prime.PersistentPrefs.PersistentPrefsData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Digit.Prime.PersistentPrefs.PersistentPref preferences = 2;
  total_size += 1UL * this->_internal_preferences_size();
  for (const auto& msg : this->_internal_preferences()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    total_size += _internal_metadata_.unknown_fields<std::string>(::google::protobuf::internal::GetEmptyString).size();
  }
  int cached_size = ::_pbi::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PersistentPrefsData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::_pbi::DownCast<const PersistentPrefsData*>(
      &from));
}

void PersistentPrefsData::MergeFrom(const PersistentPrefsData& from) {
  PersistentPrefsData* const _this = this;
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Prime.PersistentPrefs.PersistentPrefsData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_preferences()->MergeFrom(from._internal_preferences());
  _this->_internal_metadata_.MergeFrom<std::string>(from._internal_metadata_);
}

void PersistentPrefsData::CopyFrom(const PersistentPrefsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Prime.PersistentPrefs.PersistentPrefsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PersistentPrefsData::IsInitialized() const {
  return true;
}

void PersistentPrefsData::InternalSwap(PersistentPrefsData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.preferences_.InternalSwap(&other->_impl_.preferences_);
}

std::string PersistentPrefsData::GetTypeName() const {
  return "Digit.Prime.PersistentPrefs.PersistentPrefsData";
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace PersistentPrefs
}  // namespace Prime
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
