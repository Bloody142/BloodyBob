// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Digit.Networking.Core.proto

#include "Digit.Networking.Core.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace Digit {
namespace Networking {
namespace Core {
      template <typename>
PROTOBUF_CONSTEXPR CacheMap_CacheIndexEntry_DoNotUse::CacheMap_CacheIndexEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct CacheMap_CacheIndexEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CacheMap_CacheIndexEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CacheMap_CacheIndexEntry_DoNotUseDefaultTypeInternal() {}
  union {
    CacheMap_CacheIndexEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CacheMap_CacheIndexEntry_DoNotUseDefaultTypeInternal _CacheMap_CacheIndexEntry_DoNotUse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR CacheMap::CacheMap(::_pbi::ConstantInitialized)
    : _impl_{
      /* decltype(_impl_.cacheindex_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct CacheMapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CacheMapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CacheMapDefaultTypeInternal() {}
  union {
    CacheMap _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CacheMapDefaultTypeInternal _CacheMap_default_instance_;
}  // namespace Core
}  // namespace Networking
}  // namespace Digit
static ::_pb::Metadata file_level_metadata_Digit_2eNetworking_2eCore_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_Digit_2eNetworking_2eCore_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_Digit_2eNetworking_2eCore_2eproto = nullptr;
const ::uint32_t TableStruct_Digit_2eNetworking_2eCore_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::Digit::Networking::Core::CacheMap_CacheIndexEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::Digit::Networking::Core::CacheMap_CacheIndexEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Networking::Core::CacheMap_CacheIndexEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::Digit::Networking::Core::CacheMap_CacheIndexEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Digit::Networking::Core::CacheMap, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Digit::Networking::Core::CacheMap, _impl_.cacheindex_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::Digit::Networking::Core::CacheMap_CacheIndexEntry_DoNotUse)},
        {12, -1, -1, sizeof(::Digit::Networking::Core::CacheMap)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::Digit::Networking::Core::_CacheMap_CacheIndexEntry_DoNotUse_default_instance_._instance,
    &::Digit::Networking::Core::_CacheMap_default_instance_._instance,
};
const char descriptor_table_protodef_Digit_2eNetworking_2eCore_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\033Digit.Networking.Core.proto\022\025Digit.Net"
    "working.Core\032\037google/protobuf/timestamp."
    "proto\"\202\001\n\010CacheMap\022C\n\ncacheIndex\030\001 \003(\0132/"
    ".Digit.Networking.Core.CacheMap.CacheInd"
    "exEntry\0321\n\017CacheIndexEntry\022\013\n\003key\030\001 \001(\t\022"
    "\r\n\005value\030\002 \001(\t:\0028\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_Digit_2eNetworking_2eCore_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_Digit_2eNetworking_2eCore_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Digit_2eNetworking_2eCore_2eproto = {
    false,
    false,
    226,
    descriptor_table_protodef_Digit_2eNetworking_2eCore_2eproto,
    "Digit.Networking.Core.proto",
    &descriptor_table_Digit_2eNetworking_2eCore_2eproto_once,
    descriptor_table_Digit_2eNetworking_2eCore_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_Digit_2eNetworking_2eCore_2eproto::offsets,
    file_level_metadata_Digit_2eNetworking_2eCore_2eproto,
    file_level_enum_descriptors_Digit_2eNetworking_2eCore_2eproto,
    file_level_service_descriptors_Digit_2eNetworking_2eCore_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Digit_2eNetworking_2eCore_2eproto_getter() {
  return &descriptor_table_Digit_2eNetworking_2eCore_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Digit_2eNetworking_2eCore_2eproto(&descriptor_table_Digit_2eNetworking_2eCore_2eproto);
namespace Digit {
namespace Networking {
namespace Core {
// ===================================================================

CacheMap_CacheIndexEntry_DoNotUse::CacheMap_CacheIndexEntry_DoNotUse() {}
CacheMap_CacheIndexEntry_DoNotUse::CacheMap_CacheIndexEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void CacheMap_CacheIndexEntry_DoNotUse::MergeFrom(const CacheMap_CacheIndexEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CacheMap_CacheIndexEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eNetworking_2eCore_2eproto_getter, &descriptor_table_Digit_2eNetworking_2eCore_2eproto_once,
      file_level_metadata_Digit_2eNetworking_2eCore_2eproto[0]);
}
// ===================================================================

class CacheMap::_Internal {
 public:
};

CacheMap::CacheMap(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Digit.Networking.Core.CacheMap)
}
CacheMap::CacheMap(const CacheMap& from) : ::google::protobuf::Message() {
  CacheMap* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      /* decltype(_impl_.cacheindex_) */ {},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.cacheindex_.MergeFrom(from._impl_.cacheindex_);

  // @@protoc_insertion_point(copy_constructor:Digit.Networking.Core.CacheMap)
}
inline void CacheMap::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      /* decltype(_impl_.cacheindex_) */ {::google::protobuf::internal::ArenaInitialized(), arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
CacheMap::~CacheMap() {
  // @@protoc_insertion_point(destructor:Digit.Networking.Core.CacheMap)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CacheMap::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.cacheindex_.~MapField();
}
void CacheMap::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void CacheMap::Clear() {
// @@protoc_insertion_point(message_clear_start:Digit.Networking.Core.CacheMap)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cacheindex_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CacheMap::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 49, 2> CacheMap::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CacheMap_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> cacheIndex = 1;
    {PROTOBUF_FIELD_OFFSET(CacheMap, _impl_.cacheindex_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<decltype(CacheMap()._impl_.cacheindex_)>(1, 0, 0)},
  }}, {{
    "\36\12\0\0\0\0\0\0"
    "Digit.Networking.Core.CacheMap"
    "cacheIndex"
  }},
};

::uint8_t* CacheMap::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Digit.Networking.Core.CacheMap)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> cacheIndex = 1;
  if (!_internal_cacheindex().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = CacheMap_CacheIndexEntry_DoNotUse::Funcs;
    const auto& field = _internal_cacheindex();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Networking.Core.CacheMap.cacheIndex");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Networking.Core.CacheMap.cacheIndex");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Networking.Core.CacheMap.cacheIndex");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Digit.Networking.Core.CacheMap.cacheIndex");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Digit.Networking.Core.CacheMap)
  return target;
}

::size_t CacheMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Digit.Networking.Core.CacheMap)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> cacheIndex = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_cacheindex_size());
  for (const auto& entry : _internal_cacheindex()) {
    total_size += CacheMap_CacheIndexEntry_DoNotUse::Funcs::ByteSizeLong(entry.first, entry.second);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CacheMap::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    CacheMap::MergeImpl
};
const ::google::protobuf::Message::ClassData*CacheMap::GetClassData() const { return &_class_data_; }


void CacheMap::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CacheMap*>(&to_msg);
  auto& from = static_cast<const CacheMap&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Digit.Networking.Core.CacheMap)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.cacheindex_.MergeFrom(from._impl_.cacheindex_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CacheMap::CopyFrom(const CacheMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Digit.Networking.Core.CacheMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CacheMap::IsInitialized() const {
  return true;
}

void CacheMap::InternalSwap(CacheMap* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cacheindex_.InternalSwap(&other->_impl_.cacheindex_);
}

::google::protobuf::Metadata CacheMap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Digit_2eNetworking_2eCore_2eproto_getter, &descriptor_table_Digit_2eNetworking_2eCore_2eproto_once,
      file_level_metadata_Digit_2eNetworking_2eCore_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace Core
}  // namespace Networking
}  // namespace Digit
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
